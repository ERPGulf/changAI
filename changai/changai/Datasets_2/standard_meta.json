{
"Print Heading": {
  "module": "Setup",
  "description": "Used to define reusable custom print headings that appear at the top of printed documents such as invoices, quotations, or delivery notes.",
  "fields": {
  "print_heading": "Title that will appear at the top of printed documents.",
  "description": "Additional context or notes explaining the purpose or usage of the print heading. This helps distinguish between different headings such as 'Proforma Invoice' vs 'Final Invoice', and provides clarification for document titles."
},
  "meta_text": "Print Heading is part of the Setup module. It is used to define custom headings that appear at the top of print formats like invoices, quotations, or delivery notes. This helps businesses personalize document titles. Common fields include print_heading (the title to display) and description (additional notes about the heading's purpose)."
},
"Packed Item": {
  "module": "Stock",
  "description": "Represents individual items that are packed as part of a delivery note or sales invoice, often used in bundled or assembled deliveries.",
  "fields": {
    "parent_item": "The main bundled or parent item that this packed item belongs to in the delivery.",
    "item_code": "The actual stock item code being packed for dispatch or invoicing.",
    "item_name": "The display name or label of the packed item for user reference.",
    "description": "Text or notes giving more context about the packed item.",
    "warehouse": "The warehouse where the item is stored and packed from.",
    "target_warehouse": "Destination warehouse where the packed item is to be sent.",
    "conversion_factor": "Multiplier used to convert from base unit to the specified unit of measure (UOM).",
    "qty": "The quantity of the item to be packed for the delivery or invoice.",
    "rate": "The unit rate or price assigned to the packed item.",
    "uom": "The unit of measure in which the item quantity is expressed (e.g., pieces, kg).",
    "serial_no": "The serial number(s) associated with the individual packed item.",
    "batch_no": "The batch number that identifies the lot this item belongs to.",
    "actual_qty": "The available quantity of the item in inventory at packing time.",
    "packed_qty": "The total quantity already packed for the given item in this document.",
    "incoming_rate": "Valuation rate applied when receiving or accounting for the item.",
    "picked_qty": "The amount of this item already picked and ready for packing.",
    "prevdoc_doctype": "The type of document (e.g., Sales Order) from which this packing record originated.",
    "parent_detail_docname": "The document row (child table entry) from which this packed item came."
  },
  "meta_text": "Packed Item is part of the Stock module. It is used to represent individual components or items that are packed for delivery or invoicing, especially in bundled sales or assemblies. Common fields include parent_item (the main item that this packed item belongs to), item_code (the stock item being packed), qty (quantity to pack), uom (unit of measure), warehouse (source warehouse), and serial_no or batch_no for tracking specific inventory."
},
"Purchase Order Item": {
  "module": "Buying",
  "description": "Represents individual line items in a purchase order, detailing what is being ordered, in what quantity, at what price, and from which warehouse.",
  "fields": {
    "item_code": "Unique identifier of the item being purchased, linked to the Item master.",
    "item_name": "The name of the item, typically auto-filled based on the selected item code.",
    "description": "Detailed explanation of the item, including specifications or notes useful for the supplier.",
    "qty": "Quantity of the item ordered in this line item.",
    "uom": "Unit of Measure for the ordered item, such as Nos, Kg, or Boxes.",
    "rate": "Price per unit of the item in the selected unit of measure.",
    "amount": "Total cost for the line item, calculated as qty × rate.",
    "schedule_date": "Expected delivery date for this item from the supplier.",
    "warehouse": "Target warehouse where the item should be received and stored.",
    "received_qty": "Quantity of the item already received from the supplier.",
    "billed_amt": "Amount already invoiced by the supplier for this line item.",
    "expense_account": "Ledger account to which the cost of the item is booked in accounting.",
    "supplier_part_no": "Supplier's part number or reference code for the item.",
    "project": "Project linked to this purchase item, if applicable.",
    "cost_center": "Cost center to allocate the expense of this item for accounting and reporting."
  },
  "meta_text": "Purchase Order Item is part of the Buying module. It represents individual items listed in a purchase order, including details such as item_code (what is being ordered), qty (how many units), uom (unit of measure), rate (price per unit), and warehouse (where the goods should be delivered). Additional fields like received_qty and billed_amt help track what has been received and invoiced. It also allows specifying supplier references, project association, and the expense account the cost will be booked under."
},
"Serial and Batch Bundle": {
  "module": "Stock",
  "description": "Used to manage a bundle of serial numbers and batch numbers associated with a stock item across transactions like delivery, returns, and internal transfers.",
  "fields": {
    "naming_series": "The naming pattern used to auto-generate unique identifiers for each Serial and Batch Bundle document.",
    "company": "The company under which this serial and batch bundle transaction is recorded.",
    "item_name": "The descriptive name of the item involved in the transaction.",
    "has_serial_no": "Indicates whether the item is tracked using serial numbers.",
    "has_batch_no": "Indicates whether the item is tracked using batch numbers.",
    "item_code": "Unique identifier of the item involved in the bundle, linked to the Item master.",
    "warehouse": "The warehouse location where the stock item is stored or moved from/to.",
    "type_of_transaction": "Specifies the kind of stock transaction (e.g., Delivery, Return, Transfer) this bundle relates to.",
    "entries": "List of serial or batch numbers associated with the item in the bundle.",
    "total_qty": "The total quantity of items included in the bundle based on the associated entries.",
    "item_group": "Classification or category of the item for reporting or grouping purposes.",
    "avg_rate": "The average valuation rate of the items in the bundle, typically derived from inventory value.",
    "total_amount": "The total value of the bundle calculated as avg_rate × total_qty.",
    "voucher_type": "Type of document (e.g., Delivery Note, Stock Entry) to which this bundle is linked.",
    "voucher_no": "The reference number of the document (voucher) associated with this bundle.",
    "voucher_detail_no": "Specific line item reference from the parent voucher related to this bundle.",
    "posting_date": "The date when the bundle transaction was recorded in the system.",
    "posting_time": "The exact time of day when the transaction was posted.",
    "returned_against": "Reference to the original voucher if this bundle is part of a return transaction.",
    "is_cancelled": "Indicates whether the bundle has been cancelled due to voucher reversal or stock correction.",
    "is_rejected": "Indicates whether the items in the bundle were rejected during the transaction.",
    "amended_from": "Reference to a previous version of this document if it has been amended."
  },
  "meta_text": "Serial and Batch Bundle is part of the Stock module. It is used to track and manage serial numbers and batch numbers for items involved in stock transactions such as deliveries, returns, and internal movements. Common fields include item_code (the product), warehouse (location of stock), has_serial_no and has_batch_no (flags to indicate tracking method), entries (linked serial/batch entries), total_qty (combined quantity in the bundle), voucher_type and voucher_no (document this bundle is linked to), and posting_date (when the bundle was created)."
},
"Pricing Rule": {
  "module": "Accounts",
  "description": "Defines discount, rate, and free item rules that apply to transactions based on items, customers, quantity, price, or date conditions.",
  "fields": {
    "title": "The name or label of the pricing rule for easy identification in lists and reports.",
    "apply_on": "Specifies the basis of application (e.g., Item, Item Group, Brand) for the rule.",
    "warehouse": "Optional warehouse filter to apply the rule only when transactions involve this warehouse.",
    "items": "Specific items to which this pricing rule applies, allowing for item-level targeting.",
    "item_groups": "Item Groups to which the rule applies, enabling category-level discounting or rate adjustments.",
    "brands": "Brands that the rule is associated with, useful for brand-based promotions.",
    "selling": "Indicates whether this rule is applicable in selling transactions (e.g., sales orders, invoices).",
    "buying": "Indicates whether this rule is applicable in buying transactions (e.g., purchase orders, bills).",
    "customer": "A specific customer to whom this rule applies, allowing personalized pricing or offers.",
    "customer_group": "Customer group filter to apply the rule across a segment of customers.",
    "territory": "Geographic territory in which the rule is applicable, useful for region-specific pricing.",
    "supplier": "A specific supplier this rule applies to, useful for managing supplier-side rate conditions.",
    "supplier_group": "Supplier group to which this rule is applicable, for broader supplier-based rules.",
    "min_qty": "Minimum quantity required for the rule to be triggered in a transaction.",
    "max_qty": "Maximum quantity allowed under this rule; helps limit rule applicability.",
    "min_amt": "Minimum transaction amount required for this rule to apply.",
    "max_amt": "Maximum transaction amount under which the rule remains valid.",
    "free_item": "Item code of the free product offered as part of this pricing rule, if any.",
    "free_qty": "Quantity of the free item to be given when conditions of the rule are met.",
    "discount_percentage": "Percentage discount to be applied to the transaction if the rule is triggered.",
    "discount_amount": "Flat discount amount to be subtracted from the total, instead of percentage.",
    "rate": "Fixed rate to override standard item pricing when this rule is applied.",
    "valid_from": "Start date from which the pricing rule becomes active.",
    "valid_upto": "End date after which the pricing rule is no longer valid.",
    "currency": "Currency in which this pricing rule is defined and applied.",
    "for_price_list": "The price list to which this pricing rule is linked, ensuring consistent pricing logic.",
    "condition": "Custom script condition to define more complex rule logic beyond the provided filters.",
    "priority": "Priority of the rule when multiple pricing rules are applicable; higher priority takes precedence."
  },
  "meta_text": "Pricing Rule is part of the Accounts module. It defines rules to automatically apply discounts, fixed prices, or free items based on specific conditions. These can include customer type, item group, quantity or value thresholds, or a defined time period. Common fields include apply_on (e.g. item or item group), customer and supplier filters, min_qty and max_amt (for threshold-based pricing), free_item and free_qty (for bundled offers), and discount_percentage or rate (for price changes). The rule can be limited by valid_from and valid_upto dates, and linked to specific price lists or currencies."
},
"Stock Settings": {
  "module": "Stock",
  "description": "Controls default configurations for stock valuation, reservation, serial/batch behavior, over-delivery rules, and auto-replenishment settings across all stock transactions.",
  "fields": {
    "item_naming_by": "Specifies how item codes are named—either by Item Name or a defined Naming Series.",
    "valuation_method": "Default valuation method used for stock items, such as FIFO or Moving Average.",
    "item_group": "Default item group assigned to new items created in the system.",
    "stock_uom": "Default unit of measure used for tracking and managing stock items.",
    "default_warehouse": "Primary warehouse to be used by default in stock transactions when no other is specified.",
    "auto_insert_price_list_rate_if_missing": "If enabled, automatically adds missing price list rates when a stock transaction occurs.",
    "update_existing_price_list_rate": "If enabled, allows updating the price list rate if it already exists for an item.",
    "allow_to_edit_stock_uom_qty_for_sales": "Permits users to manually edit stock UOM quantity in sales documents like Sales Orders or Invoices.",
    "allow_to_edit_stock_uom_qty_for_purchase": "Permits users to manually edit stock UOM quantity in purchase documents like Purchase Orders or Invoices.",
    "over_delivery_receipt_allowance": "Percentage by which received quantity is allowed to exceed the ordered quantity in Purchase Receipts.",
    "over_picking_allowance": "Percentage by which picked quantity is allowed to exceed the required quantity in Delivery Notes.",
    "mr_qty_allowance": "Buffer percentage to adjust quantities in Material Requests beyond exact requirement.",
    "allow_negative_stock": "If enabled, allows stock levels to go below zero, useful for backdated entries or temporary gaps.",
    "enable_stock_reservation": "Enables reservation of stock for specific Sales Orders or other reservations to prevent double allocation.",
    "allow_partial_reservation": "Allows partial stock reservation against Sales Orders when full quantity isn't available.",
    "auto_reserve_stock_for_sales_order_on_purchase": "Automatically reserves stock for a Sales Order when items are received through Purchase Receipt.",
    "auto_reserve_serial_and_batch": "Automatically reserves serial or batch numbers during stock reservations or issue transactions.",
    "pick_serial_and_batch_based_on": "Defines the strategy to pick serial or batch numbers—such as FIFO, LIFO, or Expiry-based.",
    "auto_create_serial_and_batch_bundle_for_outward": "Automatically generates Serial and Batch Bundle documents when items are issued outward.",
    "allow_existing_serial_no": "If enabled, allows reuse of existing serial numbers, typically in non-standard scenarios.",
    "auto_material_request": "Automatically creates Material Requests when item stock drops below reorder levels.",
    "auto_indent": "Automatically generates Purchase Requests (Indents) based on reorder levels and demand.",
    "reorder_email_notify": "Sends email notifications when item stock falls below the defined reorder level.",
    "stock_frozen_upto": "Prevents any stock transactions from being backdated before this specified date.",
    "stock_frozen_upto_days": "Freezes stock entries a fixed number of days in the past from the current date.",
    "role_allowed_to_create_edit_back_dated_transactions": "Specifies the user role(s) allowed to create or modify stock entries dated earlier than the frozen date."
  },
  "meta_text": "Stock Settings is part of the Stock module. It defines default behavior and rules for how stock is managed across the system. This includes item naming conventions, valuation methods, default warehouses, and stock UOM. It also controls whether stock quantities can be edited in transactions, how over-delivery or over-picking is handled, and whether negative stock is allowed. Features like auto-reservation for sales or serial/batch items, auto material request generation, and restrictions on back-dated stock entries are all configured here."
},
"Quality Inspection": {
  "module": "Stock",
  "description": "Used to record inspection results and quality checks for incoming, outgoing, or in-process items, including measurements, standards, and reviewer details.",
  "fields": {
    "naming_series": "Defines the naming convention used to auto-generate unique IDs for Quality Inspection records.",
    "company": "Specifies the company under which the inspection is conducted.",
    "report_date": "The date on which the quality inspection is reported or recorded.",
    "status": "The current state of the inspection document (e.g., Draft, Accepted, Rejected).",
    "inspection_type": "Type of inspection being conducted such as Incoming, In-Process, or Outgoing.",
    "reference_type": "The type of document this inspection is linked to (e.g., Purchase Receipt, Delivery Note).",
    "reference_name": "The specific document (by name/ID) referenced for this inspection.",
    "item_code": "The code identifying the item being inspected; linked to the Item master.",
    "item_name": "The name of the item being inspected; typically auto-fetched from the Item master.",
    "item_serial_no": "Serial number of the item, if applicable; used for serial-tracked items.",
    "batch_no": "Batch number of the item if the item is batch-tracked.",
    "sample_size": "The number of items or units selected for inspection from a lot or batch.",
    "description": "Additional notes or descriptions of the item being inspected.",
    "bom_no": "Reference to the Bill of Materials used if the inspection is tied to manufacturing.",
    "specification_details": "Detailed specifications or quality parameters that the item should meet.",
    "quality_inspection_template": "Template used to define inspection criteria, standards, and expected values.",
    "manual_inspection": "Indicates whether the inspection was entered manually without using a template.",
    "readings": "The actual observed values or measurements captured during the inspection.",
    "inspected_by": "Name of the individual who conducted the quality inspection.",
    "verified_by": "Name of the person who reviewed and verified the inspection results.",
    "remarks": "Any additional comments, observations, or notes recorded during the inspection."
  },
  "meta_text": "Quality Inspection is part of the Stock module. It is used to log quality checks and inspection results for items during receiving, shipping, or internal processes. It captures inspection_type (e.g., incoming or in-process), reference documents, item details like item_code and batch_no, sample_size inspected, and actual test readings. It also records who performed and verified the inspection and links to predefined inspection templates for standardization."
},
"Asset": {
  "module": "Assets",
  "description": "Used to track physical or intangible company assets with financial, location, ownership, depreciation, and insurance details.",
  "fields": {
    "asset_name": "Name or title of the asset as it should appear in records and reports.",
    "item_code": "Item code from the Item master representing the asset.",
    "item_name": "Descriptive name of the item linked to the asset.",
    "asset_category": "Classification of the asset (e.g., Furniture, Vehicle) for reporting and depreciation rules.",
    "company": "The company to which the asset belongs.",
    "naming_series": "Format used to automatically generate unique asset IDs.",
    "asset_owner": "The individual or entity that owns the asset, which could be an employee or external party.",
    "asset_owner_company": "Company name if the asset is owned by another company entity.",
    "custodian": "The employee responsible for the asset's care and oversight.",
    "department": "Department within the company where the asset is currently assigned or used.",
    "purchase_invoice": "Link to the purchase invoice through which the asset was acquired.",
    "purchase_date": "Date on which the asset was purchased.",
    "available_for_use_date": "Date from which the asset became operational or usable.",
    "gross_purchase_amount": "Original purchase cost of the asset excluding any additional expenses.",
    "additional_asset_cost": "Extra costs added after purchase (e.g., installation, shipping) that contribute to total asset cost.",
    "total_asset_cost": "Combined cost of the asset including purchase price and any additional costs.",
    "cost_center": "Cost center to which the asset expense is allocated for accounting and budgeting.",
    "calculate_depreciation": "Indicates whether depreciation should be calculated for this asset.",
    "depreciation_method": "Method used to calculate depreciation, such as Straight Line or Written Down Value.",
    "value_after_depreciation": "Book value of the asset after all applicable depreciation has been applied.",
    "total_number_of_depreciations": "Total number of depreciation entries expected over the asset’s useful life.",
    "frequency_of_depreciation": "Interval at which depreciation will be applied (e.g., Monthly, Yearly).",
    "next_depreciation_date": "The upcoming date on which depreciation is scheduled to be posted.",
    "opening_accumulated_depreciation": "Depreciation amount already accounted for if the asset was added with a past value.",
    "policy_number": "Insurance policy number that covers the asset.",
    "insurer": "Name of the insurance provider covering the asset.",
    "insured_value": "Declared value of the asset under the insurance policy.",
    "insurance_start_date": "Start date of the asset’s insurance coverage.",
    "insurance_end_date": "End date of the insurance coverage.",
    "comprehensive_insurance": "Indicates if the insurance coverage is comprehensive (includes more than basic damage).",
    "maintenance_required": "Specifies whether routine maintenance is needed for the asset.",
    "disposal_date": "Date on which the asset was disposed of (e.g., sold, scrapped).",
    "location": "Current physical location of the asset within the company or premises.",
    "is_existing_asset": "Indicates whether the asset was already in use prior to being recorded in the system (i.e., not newly acquired)."
  },
  "meta_text": "Asset is part of the Assets module. It is used to manage tangible or intangible assets owned by the company. It tracks key details like asset_name, item_code, category, purchase value, depreciation method, insurance, custodian, and disposal status. Financial data such as gross_purchase_amount, cost_center, and depreciation schedule are stored alongside ownership details and maintenance requirements. This helps manage asset value over time, compliance, and reporting."
},
"Raven Workspace": {
  "module": "Raven",
  "description": "Represents a collaborative workspace for teams or groups within the Raven communication system. Defines access, permissions, and configuration of internal chat environments.",
  "fields": {
    "workspace_name": "The name of the workspace used to identify and display the group chat environment.",
    "type": "Specifies whether the workspace is public (open to all) or private (restricted access).",
    "can_only_join_via_invite": "Boolean flag that, if enabled, restricts workspace membership to invited users only.",
    "description": "A short text providing details about the purpose or scope of the workspace.",
    "logo": "Visual logo or icon representing the workspace, used for branding or quick identification.",
    "only_admins_can_create_channels": "If enabled, only workspace administrators are allowed to create new chat channels within the workspace."
  },
  "meta_text": "Raven Workspace is part of the Raven module. It defines a communication space for internal teams or departments. Fields include workspace_name (the name of the chat workspace), type (such as public or private), and configuration options like can_only_join_via_invite (controls member access) and only_admins_can_create_channels (restricts who can create channels). It also supports description and logo for identity and visibility."
},
"Raven Settings": {
  "module": "Raven",
  "description": "Used to configure Raven system settings for automation, AI integration, HR functionalities, and push notifications.",
  "fields": {
    "auto_add_system_users": "Automatically adds all system users to the Raven communication platform upon creation.",
    "show_raven_on_desk": "If enabled, displays the Raven icon on the ERP desk for easier user access.",
    "tenor_api_key": "API key used to integrate Tenor for GIF sharing within Raven chats.",
    "enable_ai_integration": "Enables integration with AI services such as OpenAI for generating smart replies, summaries, or other intelligent features.",
    "openai_organisation_id": "The organization ID required to authenticate and manage access to OpenAI services.",
    "openai_api_key": "API key used to connect with OpenAI services for AI functionalities within Raven.",
    "openai_project_id": "Project-specific ID for managing AI usage under the configured OpenAI account.",
    "auto_create_department_channel": "If enabled, automatically creates communication channels for each department based on HR settings.",
    "department_channel_type": "Specifies whether department channels should be public or private by default.",
    "company_workspace_mapping": "Configuration table mapping each company to its default Raven workspace for structured communication.",
    "show_if_a_user_is_on_leave": "Displays leave status of users directly in Raven to improve team coordination and visibility.",
    "push_notification_service": "Specifies the service provider or configuration details for enabling push notifications (e.g., FCM, OneSignal)."
  },
  "meta_text": "Raven Settings is part of the Raven module. It allows configuration of key features like AI integration (enabling AI functionalities with OpenAI API), system automation (auto-adding users and creating department channels), and push notifications. The settings also handle HR-related features like showing a user's leave status and linking company workspaces. Additionally, the module enables the configuration of various integrations like Tenor API key and OAuth client for authentication."
},
"Employee": {
  "module": "Setup",
  "description": "Represents an employee in the company, storing personal, employment, financial, and contact details, including work history, salary, and exit information.",
  "fields": {
    "employee": "Unique ID or code assigned to the employee for internal reference and records.",
    "first_name": "Employee’s given name used for identification.",
    "middle_name": "Middle name of the employee, if applicable.",
    "last_name": "Surname or family name of the employee.",
    "employee_name": "Full name of the employee (usually auto-generated from first, middle, and last names).",
    "gender": "Gender identity of the employee (e.g., Male, Female, Other).",
    "date_of_birth": "Employee’s birth date for age verification and HR records.",
    "salutation": "Formal salutation or title (e.g., Mr., Ms., Dr.) for addressing the employee.",
    "company": "The company in which the employee is currently employed.",
    "department": "Department or functional unit to which the employee is assigned.",
    "employee_number": "Additional or alternate identifier, often used for payroll or external systems.",
    "designation": "Job title or position held by the employee within the organization.",
    "reports_to": "Manager or supervisor to whom the employee reports directly.",
    "date_of_joining": "The official date when the employee started employment with the company.",
    "status": "Current employment status (e.g., Active, On Leave, Left).",
    "contract_end_date": "End date of the employee’s current contract, if applicable.",
    "date_of_retirement": "Scheduled retirement date based on company policies or legal limits.",
    "branch": "Physical or regional branch where the employee is stationed or reporting from.",
    "ctc": "Cost To Company – the total annual salary package including all benefits.",
    "salary_currency": "Currency in which the employee’s salary is paid.",
    "salary_mode": "Preferred mode of salary payment (e.g., Bank Transfer, Cash, Cheque).",
    "bank_name": "Name of the bank where the employee holds a salary account.",
    "bank_ac_no": "Bank account number used for salary disbursements.",
    "iban": "International Bank Account Number for international transfers (if applicable).",
    "current_address": "The current residential address of the employee.",
    "permanent_address": "The permanent or long-term residential address of the employee.",
    "personal_email": "Non-company email address used for personal communication.",
    "company_email": "Official company-provided email address used for business communication.",
    "cell_number": "Employee’s mobile phone number for direct communication.",
    "emergency_contact_details": "General description of emergency contact information.",
    "person_to_be_contacted": "Name of the person to contact in case of emergency.",
    "emergency_phone_number": "Phone number of the emergency contact person.",
    "educational_qualification": "Highest qualification or degree held by the employee.",
    "education": "Details of academic background and qualifications.",
    "previous_work_experience": "Summary of the employee’s professional experience before joining the company.",
    "internal_work_history": "Record of roles or positions held by the employee within the same company.",
    "external_work_history": "Detailed work experience from other organizations prior to joining the current company.",
    "resignation_letter_date": "Date when the employee submitted their resignation letter.",
    "relieving_date": "Final working day after which the employee is officially relieved from duties.",
    "exit_interview_details": "Notes or feedback recorded during the employee’s exit interview.",
    "reason_for_leaving": "Stated reason why the employee left or plans to leave the organization."
  },
  "meta_text": "Employee is part of the Setup module. It stores comprehensive details about an employee including personal information (name, gender, birth date), employment details (company, department, job title), salary and bank information (CTC, salary mode, bank account), contact details (email, phone, emergency contact), and work history (previous experience, education). The doctype also tracks important dates such as joining date, resignation date, and contract end date, along with any exit interview details."
},
"Sales Order": {
  "module": "Selling",
  "description": "Represents customer orders in the sales process, tracking pricing, quantities, shipping, and billing information.",
  "fields": {
    "customer": "The customer placing the order; linked to the Customer master.",
    "customer_name": "Full name of the customer, auto-fetched based on the selected customer.",
    "order_type": "Specifies the type of order such as Sales, Maintenance, or Shopping Cart.",
    "transaction_date": "The date on which the Sales Order is created or confirmed.",
    "delivery_date": "Planned date by which the ordered items should be delivered to the customer.",
    "po_no": "Purchase Order number provided by the customer for reference.",
    "po_date": "Date of the customer’s Purchase Order.",
    "company": "The company from which the sale is being made.",
    "project": "Associated project to link this order with project-specific tracking and cost allocation.",
    "currency": "The currency in which the order is being placed.",
    "rate": "Conversion rate between the order currency and the base company currency.",
    "total": "Sum of item-wise amounts before taxes and charges in the order currency.",
    "net_total": "Total amount after applying discounts, but before taxes and charges, in the order currency.",
    "base_total": "Total amount before taxes and charges in the base currency.",
    "base_net_total": "Net total amount in the base currency after applying discounts.",
    "grand_total": "Final payable amount including taxes and other charges, in the order currency.",
    "total_taxes_and_charges": "Aggregate amount of all applicable taxes and charges.",
    "base_grand_total": "Final payable amount including taxes in the base currency.",
    "rounding_adjustment": "Small adjustment applied to round the final total to the desired decimal value.",
    "customer_address": "Linked address from the Address master representing the customer’s billing address.",
    "contact_person": "Primary contact person at the customer organization for this order.",
    "contact_phone": "Phone number of the contact person.",
    "contact_mobile": "Mobile number of the contact person.",
    "contact_email": "Email address of the contact person.",
    "shipping_address": "Shipping address where the order should be delivered.",
    "shipping_address_name": "The name/title of the shipping address record used.",
    "sales_partner": "Sales partner or commission agent associated with this sales transaction.",
    "sales_team": "Sales team members and their contribution details for this order.",
    "delivery_status": "Current delivery status (e.g., To Deliver, Partially Delivered, Fully Delivered).",
    "billing_status": "Current billing status (e.g., To Bill, Partially Billed, Fully Billed).",
    "auto_repeat": "Reference to the Auto Repeat configuration if the order recurs periodically.",
    "update_auto_repeat_reference": "Automatically updates the reference in the Auto Repeat document when submitted.",
    "select_print_heading": "Custom title or heading used when printing the sales order document.",
    "language": "Language to be used for communication or printing related to this order.",
    "additional_info_section": "Custom section to include additional internal or external order-related information."
  },
  "meta_text": "Sales Order is part of the Selling module. It tracks customer orders, detailing key information such as customer, order type, transaction dates, and shipping details. The doctype also includes financial data like total amount, net total, taxes, and rounding adjustments. It allows for order repetition and tracking through sales partners and teams, and includes shipping and billing details, along with print settings for the sales document."
},
"Sales Invoice": {
  "module": "Accounts",
  "description": "Represents a sales transaction document detailing the customer, item(s), price, tax, and payment information.",
  "fields": {
    "customer": "The customer being invoiced; linked to the Customer master.",
    "customer_name": "Full name of the customer, auto-fetched based on the selected customer.",
    "transaction_date": "The date the invoice was generated or issued.",
    "due_date": "The date by which the payment should be made.",
    "po_no": "Purchase Order number provided by the customer as reference.",
    "po_date": "Date of the customer's Purchase Order.",
    "delivery_date": "Date when the items were or are expected to be delivered.",
    "currency": "Currency in which the invoice is created.",
    "rate": "Exchange rate between the invoice currency and the company’s base currency.",
    "total": "Total of item-wise amounts before taxes in the invoice currency.",
    "net_total": "Total after applying item-level discounts but before taxes.",
    "grand_total": "Final amount payable including all taxes and charges in the invoice currency.",
    "total_taxes_and_charges": "Total amount of all applicable taxes and charges on the invoice.",
    "base_grand_total": "Grand total amount converted to the base currency of the company.",
    "rounding_adjustment": "Adjustment to round off the final invoice total to the desired decimal.",
    "contact_person": "Contact person at the customer's side for this transaction.",
    "contact_mobile": "Mobile number of the contact person.",
    "contact_email": "Email address of the contact person.",
    "shipping_address": "Address where the goods were delivered or will be shipped.",
    "shipping_address_name": "Name or label of the shipping address record.",
    "sales_partner": "Sales agent or partner associated with the invoice, if applicable.",
    "amount_eligible_for_commission": "Amount on which the commission for the sales partner is calculated.",
    "commission_rate": "Percentage rate of commission applicable for the sales partner.",
    "payment_terms_template": "Template used to define structured payment terms (e.g., net 30, net 60).",
    "payment_schedule": "Table showing planned payment dates and amounts based on the payment terms.",
    "items_section": "Section heading in the form layout where item details begin.",
    "items": "Table listing the individual items being invoiced.",
    "item_code": "Code of the product or service being invoiced, linked to the Item master.",
    "item_name": "Descriptive name of the item, usually auto-filled from the item code.",
    "qty": "Quantity of the item being sold in this invoice.",
    "uom": "Unit of Measure for the item (e.g., Nos, Kg, Pack).",
    "total_qty": "Aggregate quantity of all items in the invoice.",
    "total_net_weight": "Combined net weight of all items, useful for shipping calculations.",
    "taxes_and_charges": "Template that defines tax rules and charge structures applied to the invoice.",
    "taxes": "Child table listing the specific taxes and charges applied to each component of the invoice.",
    "tax_category": "Category of tax applicable to the transaction, used for tax compliance and reporting.",
    "is_debit_note": "Flag indicating whether the invoice is issued as a debit note (typically for adjustments).",
    "status": "Current status of the invoice (e.g., Draft, Unpaid, Paid, Cancelled)."
  },
  "meta_text": "Sales Invoice is part of the Accounts module and represents a transaction between a business and its customer. It includes fields like customer, transaction dates, payment and pricing information, and associated items. Sales invoices track customer details, order quantities, and tax calculations. The doctype also integrates payment schedules and discount details."
},
"Sales Order Item": {
  "module": "Selling",
  "description": "Represents individual items listed in a sales order, including details like item code, quantity, price, discounts, and delivery dates.",
  "fields": {
    "item_code": "Unique identifier for the item being ordered, linked to the Item master.",
    "customer_item_code": "Item code used by the customer, for reference and matching in external documents.",
    "delivery_date": "Planned delivery date for this specific item line.",
    "item_name": "Name of the item being ordered, typically fetched from the Item master.",
    "description": "Detailed description of the item, including specifications or usage notes.",
    "item_group": "Category or group under which the item falls (e.g., Electronics, Stationery).",
    "brand": "Brand associated with the item, useful for categorization and reporting.",
    "qty": "Quantity of the item ordered by the customer.",
    "stock_uom": "The unit of measure used for stock keeping (e.g., Nos, Kg).",
    "uom": "Unit of Measure selected for the transaction (can be different from stock UOM).",
    "conversion_factor": "Factor used to convert the UOM to stock UOM (e.g., 1 Box = 10 Nos).",
    "stock_qty": "Total quantity expressed in stock UOM (qty × conversion factor).",
    "stock_reserved_qty": "Quantity of the item reserved from stock for this sales order.",
    "price_list_rate": "Rate of the item as per the selected Price List before discounts.",
    "base_price_list_rate": "Price list rate converted into the company’s base currency.",
    "discount_percentage": "Percentage discount applied to the price list rate for this item.",
    "discount_amount": "Flat discount amount applied to this item line.",
    "rate": "Final rate per unit after applying discounts.",
    "amount": "Total amount for the item line (qty × rate).",
    "base_rate": "Rate per unit in the company’s base currency.",
    "base_amount": "Total amount in base currency for this item line.",
    "item_tax_template": "Template defining item-specific taxes to be applied to this line.",
    "net_rate": "Rate after tax deductions or adjustments.",
    "net_amount": "Total net amount for this item (net_rate × qty).",
    "base_net_rate": "Net rate in base currency.",
    "base_net_amount": "Net amount in base currency.",
    "billed_amt": "Amount that has already been billed for this item.",
    "valuation_rate": "Valuation rate used for stock accounting and cost calculations.",
    "gross_profit": "Calculated profit from the item based on selling and valuation rate.",
    "supplier": "Preferred supplier for this item, if drop-shipped or linked to procurement.",
    "weight_per_unit": "Weight of a single unit of the item, useful for logistics planning.",
    "total_weight": "Total weight for the ordered quantity (weight_per_unit × qty).",
    "warehouse": "Source warehouse from which the item will be delivered.",
    "target_warehouse": "Destination warehouse in case of internal stock transfers.",
    "project": "Project associated with this item, useful for project-based billing or cost tracking.",
    "material_request": "Linked Material Request document that originated the order for this item.",
    "purchase_order": "Linked Purchase Order if the item is procured specifically for this Sales Order.",
    "material_request_item": "Specific line item in the Material Request document.",
    "purchase_order_item": "Specific line item in the linked Purchase Order.",
    "cost_center": "Cost center to which the expense or revenue for this item is allocated."
  },
  "meta_text": "Sales Order Item is part of the Selling module. It represents individual line items in a sales order. Key fields include item_code (unique identifier for the item), qty (quantity of the item ordered), uom (unit of measurement), rate (price per unit), and amount (total cost for the item). It tracks stock availability, reserved stock, discounts, and taxes. Additional fields like project and cost_center allow associating the item with specific projects or cost centers."
},
  "Manufacturing Settings": {
    "module": "Manufacturing",
    "description": "Manages configurations for manufacturing operations such as raw material consumption, warehouse defaults, work order handling, and capacity planning.",
    "fields": {
      "material_consumption": "Specifies how raw materials are consumed during the production process (e.g., based on BOM, actuals).",
      "get_rm_cost_from_consumption_entry": "Whether raw material cost is fetched from the actual consumption entry rather than the BOM.",
      "backflush_raw_materials_based_on": "Defines whether raw materials are backflushed based on quantity or completed operations.",
      "validate_components_quantities_per_bom": "Enables validation to ensure material quantities match those defined in the BOM.",
      "update_bom_costs_automatically": "Automatically updates the cost values in the Bill of Materials after production.",
      "default_wip_warehouse": "Default warehouse where work-in-progress inventory is stored during production.",
      "default_fg_warehouse": "Warehouse where finished goods are stored after manufacturing.",
      "default_scrap_warehouse": "Warehouse designated for storing scrap material generated during production.",
      "overproduction_percentage_for_sales_order": "Permitted overproduction (as a %) beyond what is requested in a Sales Order.",
      "overproduction_percentage_for_work_order": "Permitted overproduction limit (as a %) for Work Orders.",
      "add_corrective_operation_cost_in_finished_good_valuation": "If enabled, operation costs are factored into finished good valuation for accuracy.",
      "capacity_planning": "Indicates whether capacity planning is enabled for work centers.",
      "disable_capacity_planning": "Disables capacity planning even if work centers and operations are defined.",
      "allow_overtime": "Allows scheduling jobs that go beyond normal working hours.",
      "allow_production_on_holidays": "Permits production activities to be scheduled on company holidays.",
      "capacity_planning_for_days": "Number of days ahead the system should plan production capacity.",
      "mins_between_operations": "Minimum gap in minutes to be kept between two operations.",
      "set_op_cost_and_scrap_from_sub_assemblies": "Sets operation cost and scrap rates based on sub-assembly configurations.",
      "make_serial_no_batch_from_work_order": "Enables automatic creation of serial or batch numbers directly from work orders."
    },
    "meta_text": "This doctype handles core manufacturing preferences, such as how raw materials are consumed, how much overproduction is allowed, and which warehouses are used for WIP, scrap, and finished goods. It also defines rules for capacity planning, cost tracking, and holiday/overtime production workflows."
  },
  "Delivery Note Item": {
    "module": "Stock",
    "description": "Represents the individual line items in a Delivery Note, detailing each product, its quantity, pricing, warehouse, and related tracking information.",
    "fields": {
      "barcode": "Barcode used to identify the item being delivered.",
      "item_code": "Unique code that identifies the item.",
      "item_name": "Descriptive name of the item.",
      "customer_item_code": "Item code used by the customer, if different.",
      "description": "Detailed description of the item.",
      "brand": "Brand associated with the item.",
      "item_group": "Group or category the item belongs to.",
      "image": "Image of the item for visual reference.",
      "qty": "Quantity of the item being delivered.",
      "stock_uom": "Stock unit of measurement for the item.",
      "uom": "Unit of measure used for billing or tracking.",
      "conversion_factor": "Factor used to convert UOM to stock UOM.",
      "stock_qty": "Total quantity in terms of stock UOM.",
      "returned_qty": "Quantity that has been returned after delivery.",
      "price_list_rate": "Rate fetched from the price list for this item.",
      "base_price_list_rate": "Price list rate converted into base currency.",
      "margin_type": "Defines if margin is percentage-based or fixed amount.",
      "margin_rate_or_amount": "Margin added either as a percent or amount.",
      "rate_with_margin": "Selling rate including the margin.",
      "discount_percentage": "Percentage discount applied to the item.",
      "discount_amount": "Flat discount amount applied.",
      "rate": "Rate per unit after discounts and adjustments.",
      "amount": "Total item amount before tax.",
      "base_rate": "Rate per unit in base currency.",
      "base_amount": "Total amount in base currency.",
      "stock_uom_rate": "Rate calculated in terms of stock UOM.",
      "is_free_item": "Indicates if the item is given free of cost.",
      "grant_commission": "Specifies whether commission should be granted on this item.",
      "net_rate": "Rate after margin and discount, before tax.",
      "net_amount": "Final amount for this item before tax.",
      "item_tax_template": "Template defining applicable taxes for the item.",
      "base_net_rate": "Net rate in base currency.",
      "base_net_amount": "Net amount in base currency.",
      "billed_amt": "Amount already billed against this delivery item.",
      "item_weight_details": "Details about the item’s weight per unit and total.",
      "weight_per_unit": "Weight of one unit of the item.",
      "total_weight": "Total weight for the quantity being delivered.",
      "weight_uom": "Unit used for measuring weight (e.g., kg).",
      "warehouse": "Source warehouse from where the item is being delivered.",
      "target_warehouse": "Destination warehouse for delivery or transfer.",
      "quality_inspection": "Linked quality inspection for the item.",
      "pick_serial_and_batch": "Indicates whether user selected serial/batch during picking.",
      "serial_no": "Serial number(s) of the delivered item.",
      "batch_no": "Batch number of the item.",
      "actual_qty": "Current available quantity at time of delivery.",
      "installed_qty": "Quantity of item already installed at customer site.",
      "received_qty": "Quantity acknowledged as received by the customer.",
      "expense_account": "Expense account to which the delivery cost is booked.",
      "item_tax_rate": "Applicable tax rate for the item.",
      "material_request": "Related material request that generated this item.",
      "purchase_order": "Linked purchase order, if any.",
      "purchase_order_item": "Reference to the line item in the purchase order.",
      "material_request_item": "Reference to the specific item in the material request.",
      "cost_center": "Cost center under which this item delivery is tracked.",
      "project": "Project to which this delivery is associated."
    },
    "meta_text": "Used to track every item listed on a delivery note. Fields help answer questions about item quantities, delivery sources, rates, discounts, taxes, serial/batch tracking, and financial accounts related to stock movement."
  },
"Item": {
  "module": "Stock",
  "description": "A product or service that is bought, sold, or kept in stock, including detailed information for inventory management, sales, and purchases.",
  "fields": [
    "item_code", "item_name", "item_group", "stock_uom", "disabled", "allow_alternative_item", "is_stock_item",
    "has_variants", "opening_stock", "valuation_rate", "standard_rate", "is_fixed_asset", "auto_create_assets", 
    "is_grouped_asset", "asset_category", "asset_naming_series", "over_delivery_receipt_allowance", 
    "over_billing_allowance", "image", "description", "brand", "unit_of_measure_conversion", "uoms", "shelf_life_in_days",
    "end_of_life", "default_material_request_type", "valuation_method", "warranty_period", "weight_per_unit", 
    "weight_uom", "allow_negative_stock", "sb_barcodes", "barcodes", "reorder_levels", "serial_nos_and_batches", 
    "has_batch_no", "create_new_batch", "batch_number_series", "has_expiry_date", "retain_sample", "sample_quantity", 
    "has_serial_no", "serial_no_series", "variants_section", "variant_of", "variant_based_on", "attributes", 
    "deferred_accounting_section", "enable_deferred_expense", "no_of_months_exp", "enable_deferred_revenue", 
    "no_of_months", "item_defaults", "purchase_uom", "min_order_qty", "safety_stock", "is_purchase_item", "lead_time_days", 
    "last_purchase_rate", "is_customer_provided_item", "supplier_details", "delivered_by_supplier", "supplier_items", 
    "customs_tariff_number", "sales_uom", "grant_commission", "is_sales_item", "max_discount", "customer_details", 
    "customer_items", "taxes", "quality_tab", "inspection_required_before_purchase", "quality_inspection_template", 
    "inspection_required_before_delivery", "manufacturing", "include_item_in_manufacturing", "is_sub_contracted_item", 
    "default_bom", "customer_code", "default_item_manufacturer", "default_manufacturer_part_no", "total_projected_qty"
  ],
  "meta_text": "The 'Item' doctype in ERPNext is used to manage products and services within the stock system. It includes essential fields like item_code (unique identifier), item_name (name of the item), and item_group (category of the item). Key fields such as stock_uom (unit of measure), valuation_rate (rate for valuation), and standard_rate (selling price) help manage inventory and pricing. It supports variants, serial numbers, batches, and tracking for fixed assets. Additional fields include supplier details, sales settings, quality inspections, and manufacturing details. This doctype also includes settings for accounting, purchase, and sales processes, making it a central part of the stock and inventory management in ERPNext."
},
"Payment Entry": {
  "module": "Accounts",
  "description": "A standard ERPNext doctype for recording and managing payments made by or to a company. This doctype handles payment details, including payment type, payment amounts, and bank accounts involved.",
  "fields": [
    "type_of_payment", "naming_series", "payment_type", "payment_order_status", "posting_date", "company", "mode_of_payment",
    "party_section", "party_type", "party", "party_name", "book_advance_payments_in_separate_party_account", 
    "reconcile_on_advance_payment_date", "advance_reconciliation_takes_effect_on", "bank_account", "party_bank_account",
    "contact_person", "contact_email", "payment_accounts_section", "party_balance", "paid_from", "paid_from_account_type",
    "paid_from_account_currency", "paid_from_account_balance", "paid_to", "paid_to_account_type", "paid_to_account_currency",
    "paid_to_account_balance", "payment_amounts_section", "paid_amount", "paid_amount_after_tax", "source_exchange_rate",
    "base_paid_amount", "base_paid_amount_after_tax", "received_amount", "received_amount_after_tax", "target_exchange_rate",
    "base_received_amount", "base_received_amount_after_tax", "get_outstanding_invoices", "get_outstanding_orders", 
    "references", "total_allocated_amount", "base_total_allocated_amount", "unallocated_amount", "difference_amount", 
    "write_off_difference_amount", "taxes_and_charges_section", "purchase_taxes_and_charges_template", 
    "sales_taxes_and_charges_template", "apply_tax_withholding_amount", "tax_withholding_category", "taxes", 
    "base_total_taxes_and_charges", "total_taxes_and_charges", "deductions_or_loss_section", "deductions", "transaction_references",
    "reference_no", "reference_date", "clearance_date", "accounting_dimensions_section", "project", "dimension_col_break",
    "cost_center", "status", "custom_remarks", "remarks", "base_in_words", "is_opening", "letter_head", "print_heading", 
    "bank", "bank_account_no", "payment_order", "in_words", "subscription_section", "auto_repeat", "amended_from", "title"
  ],
  "meta_text": "The 'Payment Entry' doctype in ERPNext is used to manage payments to and from a company. It includes fields like 'payment_type' (type of payment such as Cash or Bank), 'payment_order_status' (status of the payment), 'posting_date' (date of the payment), and 'mode_of_payment' (method of payment, such as Bank Transfer or Cheque). Additional fields like 'party_balance' and 'paid_amount' track the amounts involved, while 'taxes_and_charges' fields capture applicable taxes. The doctype also integrates with various other modules, allowing for reconciliation of invoices, sales orders, and purchase orders, while also allowing for payments related to projects and cost centers. Key settings such as 'advance reconciliation', 'tax withholding', and 'reference transactions' provide greater flexibility for financial tracking."
},
"Lead": {
  "module": "CRM",
  "description": "Represents a potential customer in the CRM module. The Lead doctype captures information about an individual or organization that may eventually become a customer.",
  "fields": [
    "naming_series", "salutation", "first_name", "middle_name", "last_name", "lead_name", "job_title", "gender", "source", 
    "lead_owner", "status", "customer", "type", "request_type", "email_id", "website", "mobile_no", "whatsapp_no", "phone", 
    "phone_ext", "company_name", "no_of_employees", "annual_revenue", "industry", "market_segment", "territory", "fax", 
    "address_html", "city", "state", "country", "qualification_status", "qualified_by", "qualified_on", "campaign_name", 
    "company", "language", "image", "title", "disabled", "unsubscribed", "blog_subscriber", "open_activities_html", 
    "all_activities_html", "notes_html", "notes"
  ],
  "meta_text": "The 'Lead' doctype is part of the CRM module in ERPNext, designed to track potential customers. It captures critical information such as lead_name (name of the lead), contact details (email_id, mobile_no, phone, whatsapp_no), and organizational details (company_name, annual_revenue, industry). It also tracks the lead's qualification status, the source of the lead, and the lead owner. The doctype allows businesses to track and manage leads efficiently, ensuring they can qualify leads and eventually convert them into customers. Additional fields include activities, notes, and unsubscribed status."
},
"POS Profile": {
  "module": "Accounts",
  "description": "Represents the settings for a point of sale (POS) profile in ERPNext. It defines the configurations and preferences for transactions in a POS system, such as payment methods, discounts, and print formats.",
  "fields": {
    "company": "The company under which this POS profile operates.",
    "customer": "Default customer used for transactions where no customer is specified.",
    "country": "The country in which the POS system is used; may affect taxes and compliance.",
    "disabled": "If enabled, disables the POS profile from being used in transactions.",
    "warehouse": "Default warehouse from which items are picked during POS transactions.",
    "campaign": "Sales campaign associated with this POS profile, used for tracking marketing impact.",
    "company_address": "Registered company address shown on receipts and related documents.",
    "applicable_for_users": "List of users for whom this POS profile is available.",
    "payments": "Table of payment modes and accounts allowed for POS transactions (e.g., Cash, Card).",
    "hide_images": "If enabled, item images are hidden in the POS interface.",
    "hide_unavailable_items": "Prevents items with zero or insufficient stock from appearing in the POS list.",
    "auto_add_item_to_cart": "Automatically adds scanned or selected items to the cart without confirmation.",
    "validate_stock_on_save": "Checks item stock availability when saving the POS invoice.",
    "print_receipt_on_order_complete": "Automatically prints a receipt once the order is completed in POS.",
    "update_stock": "Indicates whether stock levels should be updated when transactions are submitted.",
    "ignore_pricing_rule": "Bypasses any predefined pricing rules during POS transactions.",
    "allow_rate_change": "Allows the cashier to manually change item prices during billing.",
    "allow_discount_change": "Allows the cashier to modify item-level or bill-level discounts.",
    "disable_grand_total_to_default_mop": "Disables the automatic assignment of the total to the default mode of payment.",
    "item_groups": "Restricts item visibility in POS to selected item groups.",
    "customer_groups": "Limits the POS profile to transactions with selected customer groups.",
    "print_format": "Custom print format to be used for the POS invoice receipt.",
    "letter_head": "Letterhead to be printed on POS receipts.",
    "tc_name": "Terms and Conditions template applied to POS invoices.",
    "select_print_heading": "Custom heading or title to be printed on the POS receipt.",
    "selling_price_list": "Price list used to fetch item rates for POS transactions.",
    "currency": "Currency used in the POS system; must match with payment methods.",
    "write_off_account": "Account used to write off small balances or rounding differences.",
    "write_off_cost_center": "Cost center associated with write-off transactions.",
    "write_off_limit": "Maximum allowable amount that can be written off without manager approval.",
    "account_for_change_amount": "Account where change returned to customers is recorded.",
    "disable_rounded_total": "Prevents automatic rounding of the total invoice amount.",
    "income_account": "Default income account used for recording sales from POS.",
    "expense_account": "Account used to record expenses, if applicable, during POS transactions.",
    "taxes_and_charges": "Template that defines taxes and charges applicable to POS invoices.",
    "tax_category": "Category of tax rules that apply to this POS profile (e.g., VAT, GST).",
    "apply_discount_on": "Specifies whether discounts are applied on net total or grand total.",
    "cost_center": "Default cost center to which POS sales and expenses are allocated."
  },
  "meta_text": "The 'POS Profile' doctype is part of the Accounts module and defines settings for the Point of Sale (POS) system in ERPNext. It includes configurations such as warehouse settings, payment methods, discounts, print formats, and tax categories. Key fields include 'company' (the company for the POS system), 'customer' (the associated customer), 'payments' (payment methods allowed), and 'apply_discount_on' (conditions for applying discounts). The POS Profile also includes options to hide unavailable items, validate stock on save, and control print formats for receipts."
},

"Process Payment Reconciliation Log Allocations":{
  "module": "Accounts",
  "description": "Tracks how payments are applied to invoices during reconciliation. It logs how much was matched to each invoice, what remains, if there were currency differences, and whether the payment was fully reconciled.",
  "fields": {
    "reference_type": "Type of document linked to the payment (e.g., Sales Invoice, Purchase Invoice).",
    "reference_name": "ID or name of the document to which the payment is related.",
    "reference_row": "Row number in the original document if payment links to a specific line item.",
    "invoice_type": "Indicates whether the invoice is for a purchase or a sale.",
    "invoice_number": "The specific invoice that received the payment.",
    "allocated_amount": "The amount from the payment that was applied to the invoice.",
    "unreconciled_amount": "Amount still left after partial reconciliation.",
    "amount": "The total amount being considered for allocation.",
    "is_advance": "Specifies if this payment was made in advance.",
    "difference_amount": "Gain or loss recorded due to exchange rate differences.",
    "gain_loss_posting_date": "Date when the currency difference was posted.",
    "difference_account": "Account used to record exchange rate gains or losses.",
    "exchange_rate": "Currency conversion rate used during payment allocation.",
    "currency": "Currency in which the invoice or payment is recorded.",
    "reconciled": "Indicates whether the payment has been fully matched and settled."
  },
  "meta_text": "This doctype is used to answer questions about how payments were matched to invoices, how much was allocated, whether it was an advance, any currency-related differences, and whether the reconciliation is complete."
},
  "Accounts Settings": {
    "module": "Accounts",
    "description": "Holds company-wide accounting configurations for invoices, payments, tax setup, journal entries, multi-currency use, and reconciliation rules in ERPNext. These settings control how documents behave financially and govern key business rules.",
    "fields": {
      "unlink_payment_on_cancellation_of_invoice": "Whether linked payments should be automatically removed when an invoice is cancelled.",
      "unlink_advance_payment_on_cancelation_of_order": "Decides if advance payments should be unlinked when the related sales or purchase order is cancelled.",
      "delete_linked_ledger_entries": "Controls whether general ledger entries tied to cancelled documents should be deleted.",
      "enable_immutable_ledger": "Prevents editing of past accounting entries by locking the ledger for a period.",
      "check_supplier_invoice_uniqueness": "Enforces that supplier invoice numbers must be unique across the system.",
      "automatically_fetch_payment_terms": "Automatically fetches and applies default payment terms from master data.",
      "enable_common_party_accounting": "Allows using a shared account for a party acting as both supplier and customer.",
      "allow_multi_currency_invoices_against_single_party_account": "Enables invoices in different currencies for the same party account.",
      "merge_similar_account_heads": "Allows combining entries under the same account head during posting.",
      "book_deferred_entries_based_on": "Determines the trigger (invoice or delivery) for booking deferred revenue or expense.",
      "automatically_process_deferred_accounting_entry": "If enabled, deferred revenue or expense is posted automatically.",
      "book_deferred_entries_via_journal_entry": "If on, deferred accounting is handled through journal entries.",
      "submit_journal_entries": "Automatically submits journal entries when triggered by other documents.",
      "determine_address_tax_category_from": "Chooses how tax categories are determined based on addresses.",
      "add_taxes_from_item_tax_template": "Adds applicable taxes from the item tax template to documents.",
      "book_tax_discount_loss": "Controls if tax-related discounts that were not availed should be booked as a loss.",
      "round_row_wise_tax": "Enables rounding taxes row-by-row instead of on the total.",
      "show_inclusive_tax_in_print": "Displays taxes included in item rates in printed documents.",
      "show_taxes_as_table_in_print": "Shows taxes as a detailed table in printed invoice formats.",
      "show_payment_schedule_in_print": "Displays payment schedule in the printed version of the invoice.",
      "allow_stale": "Controls whether stale (expired) documents can still be submitted.",
      "stale_days": "Number of days after which a document is considered stale.",
      "auto_reconcile_payments": "If enabled, system will automatically reconcile payments with invoices.",
      "auto_reconciliation_job_trigger": "Defines how and when the auto-reconciliation job should run.",
      "reconciliation_queue_size": "Sets how many entries are handled at a time in the reconciliation queue.",
      "exchange_gain_loss_posting_date": "Sets the posting date for gain/loss entries due to currency exchange differences.",
      "over_billing_allowance": "Specifies how much overbilling is allowed beyond the original order or invoice.",
      "role_allowed_to_over_bill": "Defines which user role can approve overbilling.",
      "credit_controller": "Specifies the role or person responsible for credit control.",
      "make_payment_via_journal_entry": "Enables making payments using journal entries instead of payment entry.",
      "post_change_gl_entries": "If enabled, new GL entries are posted when changes are made to finalized documents.",
      "calculate_depr_using_total_days": "Uses total number of calendar days (instead of months) to calculate asset depreciation.",
      "book_asset_depreciation_entry_automatically": "Automatically creates journal entries for asset depreciation at the right time.",
      "acc_frozen_upto": "Sets the date until which all accounts are frozen for any changes.",
      "ignore_account_closing_balance": "Allows ignoring opening balances during closing balance checks.",
      "frozen_accounts_modifier": "User role allowed to modify frozen accounts if needed.",
      "show_balance_in_coa": "Shows real-time balances in the Chart of Accounts view.",
      "enable_party_matching": "Activates party-level matching logic during reconciliation.",
      "enable_fuzzy_matching": "Allows approximate name or number matching during party reconciliation.",
      "general_ledger_remarks_length": "Specifies the character limit for remarks in GL entries.",
      "receivable_payable_remarks_length": "Defines length limit for remarks in receivable/payable ledgers.",
      "create_pr_in_draft_status": "Enables creation of Purchase Receipts in draft mode instead of submitted directly."
    },
    "meta_text": "This doctype helps answer questions about how your accounting system handles invoice cancellations, payment matching, currency conversion, automatic journal entries, tax display, depreciation booking, and party/account matching logic."
  },
 
  "Landed Cost Taxes and Charges": {
    "module": "Stock",
    "description": "Manages taxes and charges added to the landed cost of stock items, such as import duties, freight, and other additional expenses in logistics.",
    "fields": {
      "expense_account": "Account where the landed cost expense is recorded, like import duties or freight charges.",
      "account_currency": "The currency used for the expense account.",
      "exchange_rate": "Conversion rate between the document currency and the company base currency.",
      "description": "Details or remarks about the specific tax or landed cost charge.",
      "amount": "The tax or charge amount in the document’s currency.",
      "base_amount": "The amount of the tax or charge converted into the base currency.",
      "has_corrective_cost": "Indicates whether this charge corrects a previous landed cost allocation."
    },
    "meta_text": "This doctype is used for calculating and allocating additional costs such as import taxes, shipping, or customs fees to stock items. It helps track expense accounts, exchange rates, and financial impact through amount and base_amount fields. Useful in understanding how landed cost is calculated in detail."
  }, 
"CRM Settings": {
    "module": "CRM",
    "description": "Controls default behaviors and automation in managing leads, opportunities, campaigns, and customer communications within the CRM workflow.",
    "fields": {
      "campaign_naming_by": "Defines how campaigns are named automatically (e.g., based on lead source or custom pattern).",
      "allow_lead_duplication_based_on_emails": "Controls whether the system should allow duplicate leads if they share the same email address.",
      "auto_creation_of_contact": "If enabled, a contact record will be auto-created when a new lead is added.",
      "close_opportunity_after_days": "Specifies the number of days after which an open opportunity should be auto-closed.",
      "default_valid_till": "Sets the default validity date for opportunities and quotations.",
      "carry_forward_communication_and_comments": "Ensures that comments and communications from one document are carried over to linked CRM records.",
      "update_timestamp_on_new_communication": "Automatically refreshes the communication timestamp when a new message or note is added."
    },
    "meta_text": "This settings doctype allows you to control automation in lead and opportunity handling, manage naming rules for campaigns, prevent duplicate entries, and streamline CRM follow-ups. It supports better communication tracking and ensures CRM activities stay up-to-date with time-based rules."
  },
  "Serial No": {
    "module": "Stock",
    "description": "Represents a uniquely identifiable unit of an item that can be tracked through inventory, delivery, asset, and warranty processes.",
    "fields": {
      "serial_no": "The unique serial number assigned to the item unit.",
      "item_code": "The code of the item this serial number belongs to.",
      "batch_no": "The batch number the item is part of, if applicable.",
      "warehouse": "The current warehouse where this serialized item is stored.",
      "purchase_rate": "The rate at which the item was purchased.",
      "status": "The current status of the item (e.g., active, delivered, returned).",
      "item_name": "The display name or label of the item.",
      "description": "Details or description of the serialized item.",
      "item_group": "The group or category the item belongs to.",
      "brand": "The brand of the item.",
      "asset_details": "Linked asset information if this item was capitalized.",
      "asset": "The asset record created for this serial number.",
      "asset_status": "The current status of the asset linked to the item.",
      "location": "Physical location of the serialized item.",
      "employee": "Employee assigned to or using this item.",
      "warranty_amc_details": "Details of the warranty or AMC linked to this item.",
      "warranty_expiry_date": "The date the item's warranty expires.",
      "amc_expiry_date": "Expiry date of the item's AMC (Annual Maintenance Contract).",
      "maintenance_status": "Current status of any maintenance activity.",
      "warranty_period": "The warranty period duration assigned to this item.",
      "company": "The company that owns this item.",
      "work_order": "The work order linked to the creation or use of this item.",
      "purchase_document_no": "The purchase document through which this item was received."
    },
    "meta_text": "Used to track individual items using serial numbers. Helps answer questions about the item's current location, status, warranty, linked asset, employee assignments, and related transactions."
  },

  "Stock Entry Type": {
    "module": "Stock",
    "description": "Defines different types of stock movements such as transfers, receipts, issues, or returns.",
    "fields": {
      "purpose": "The type of stock entry (e.g., Material Transfer, Receipt, Issue).",
      "add_to_transit": "Indicates whether items are moved to a transit warehouse.",
      "is_standard": "Marks the entry type as a system default or standard entry."
    },
    "meta_text": "Helps categorize and configure types of stock movements. Answers questions about whether an entry is for receipt, issue, or transfer and if it adds to a transit warehouse."
  },

  "Purchase Invoice": {
    "module": "Accounts",
    "description": "Represents a formal document recording goods or services purchased from suppliers, including tax, payment, and accounting details.",
    "fields": {
      "title": "Title of the invoice document.",
      "naming_series": "Series used for auto-naming the invoice.",
      "supplier": "The supplier from whom the goods or services were purchased.",
      "supplier_name": "Full name of the supplier.",
      "tax_id": "The tax registration number of the supplier.",
      "company": "The company for which the invoice was created.",
      "posting_date": "The date the invoice is posted in the system.",
      "posting_time": "Exact time the invoice is recorded.",
      "set_posting_time": "Whether the user set a manual posting time.",
      "due_date": "The date payment is due for the invoice.",
      "is_paid": "Indicates whether the invoice is fully paid.",
      "is_return": "Specifies if the invoice is a return.",
      "return_against": "References the original invoice in case of a return.",
      "update_outstanding_for_self": "If enabled, adjusts outstanding amounts directly.",
      "update_billed_amount_in_purchase_order": "Updates billed amounts in the linked purchase order.",
      "update_billed_amount_in_purchase_receipt": "Updates billed amounts in the linked receipt.",
      "apply_tds": "Whether tax deducted at source is applied.",
      "tax_withholding_category": "The type of TDS category applied.",
      "amended_from": "Indicates if this invoice amends an earlier one.",
      "supplier_invoice_details": "Additional details from the supplier’s original invoice.",
      "bill_no": "The invoice number provided by the supplier.",
      "bill_date": "The date mentioned on the supplier’s invoice.",
      "cost_center": "Cost center against which this purchase is recorded.",
      "project": "Project this purchase is linked to.",
      "currency": "Currency used for the invoice.",
      "conversion_rate": "Exchange rate to convert to company base currency.",
      "buying_price_list": "Price list used for buying rate references.",
      "price_list_currency": "Currency of the buying price list.",
      "plc_conversion_rate": "Rate used to convert price list values.",
      "ignore_pricing_rule": "If enabled, bypasses standard pricing rules.",
      "sec_warehouse": "Secondary warehouse used in stock update.",
      "scan_barcode": "Barcode used to scan item or document.",
      "update_stock": "Whether stock levels are affected by this invoice.",
      "set_warehouse": "Warehouse where purchased items are stored.",
      "is_subcontracted": "Marks if the purchase involves subcontracting.",
      "rejected_warehouse": "Warehouse where rejected items are sent.",
      "supplier_warehouse": "Warehouse used by the supplier.",
      "items": "Table containing item-level invoice details.",
      "total_qty": "Total quantity of all items in the invoice.",
      "total_net_weight": "Combined net weight of all items.",
      "base_total": "Total amount in base currency before taxes.",
      "base_net_total": "Net total excluding taxes in base currency.",
      "total": "Total amount in the invoice currency.",
      "net_total": "Net total excluding taxes in invoice currency.",
      "tax_withholding_net_total": "Net total after TDS applied.",
      "base_tax_withholding_net_total": "Base currency net total after TDS.",
      "taxes": "List of applied taxes and charges.",
      "base_total_taxes_and_charges": "Total tax amount in base currency.",
      "taxes_and_charges_added": "Tax amounts added to the base.",
      "taxes_and_charges_deducted": "Tax amounts deducted from the base.",
      "base_grand_total": "Final total in base currency.",
      "base_rounding_adjustment": "Adjustment applied for rounding in base currency.",
      "base_rounded_total": "Rounded total in base currency.",
      "grand_total": "Final total in invoice currency.",
      "rounding_adjustment": "Rounding adjustment in invoice currency.",
      "total_advance": "Total amount advanced before invoice.",
      "outstanding_amount": "Remaining balance after payments and advances.",
      "apply_discount_on": "Specifies whether discount is on net or grand total.",
      "base_discount_amount": "Discount value in base currency.",
      "additional_discount_percentage": "Extra discount as a percentage.",
      "discount_amount": "Flat discount applied.",
      "tax_withheld_vouchers": "Linked tax withholding vouchers.",
      "pricing_rule_details": "Applied pricing rules and conditions.",
      "raw_materials_supplied": "Details of any raw material linked to subcontracting.",
      "supplied_items": "List of supplied items if subcontracted.",
      "mode_of_payment": "The payment method used (e.g., cash, bank).",
      "base_paid_amount": "Amount paid in base currency.",
      "clearance_date": "Date payment was cleared by bank.",
      "cash_bank_account": "Account used for making the payment.",
      "paid_amount": "Total amount paid in invoice currency.",
      "advances": "Advance payments applied to the invoice.",
      "advance_tax": "Tax portion on advance payments.",
      "write_off": "Whether part of the balance is written off.",
      "write_off_amount": "Amount being written off.",
      "write_off_account": "Account used for the write-off entry.",
      "write_off_cost_center": "Cost center for the write-off.",
      "supplier_address": "Address of the supplier.",
      "contact_person": "Supplier’s contact person.",
      "contact_mobile": "Contact person’s mobile number.",
      "contact_email": "Contact person’s email.",
      "shipping_address": "Where goods are shipped to.",
      "shipping_address_display": "Formatted version of the shipping address.",
      "billing_address": "Billing address of the buyer.",
      "billing_address_display": "Formatted version of the billing address.",
      "payment_schedule": "Planned payment milestones and dates.",
      "terms": "Terms and conditions for the purchase.",
      "status": "Current status of the invoice (e.g., Draft, Paid, Overdue).",
      "per_received": "Percentage of items received against invoice.",
      "credit_to": "The account where credit is applied.",
      "party_account_currency": "Currency of the supplier account.",
      "is_opening": "Marks if it’s an opening balance invoice.",
      "against_expense_account": "Account against which expenses are recorded.",
      "unrealized_profit_loss_account": "Account for unrealized gains/losses.",
      "subscription": "Subscription reference if recurring.",
      "auto_repeat": "Template used for repeating this invoice automatically.",
      "from_date": "Start date of the service or subscription.",
      "to_date": "End date of the service or subscription.",
      "letter_head": "Letterhead used in the printed invoice.",
      "select_print_heading": "Custom heading used in the invoice print format.",
      "language": "Language for this document.",
      "on_hold": "Marks if the invoice is on hold.",
      "release_date": "Date on which the hold was or will be released.",
      "hold_comment": "Reason or comment for putting the invoice on hold.",
      "is_internal_supplier": "Marks whether this supplier is from within the organization.",
      "represents_company": "Company being represented in internal transactions.",
      "supplier_group": "Group or classification of the supplier.",
      "inter_company_invoice_reference": "Reference to linked invoice in an inter-company transaction.",
      "remarks": "Any additional notes or comments on the invoice."
    },
    "meta_text": "The 'Purchase Invoice' doctype records all financial and logistical aspects of purchases from suppliers — including amounts, taxes, payments, and linked addresses. Helps answer questions about supplier info, payments made, invoice totals, delivery timelines, and tax applications."
  },
  "Payment Entry Reference": {
    "module": "Accounts",
    "description": "Links a payment entry to a referenced document like an invoice, bill, or order, helping manage reconciliation and payment tracking.",
    "fields": {
      "reference_doctype": "The type of document being paid, such as Sales Invoice or Purchase Invoice.",
      "reference_name": "The exact document ID or number being referenced by the payment.",
      "due_date": "The date by which payment for the referenced document is due.",
      "bill_no": "The original bill number from the supplier or customer.",
      "payment_term": "The payment term applied to the referenced document (e.g., Net 30).",
      "payment_term_outstanding": "Amount that remains unpaid under a specific payment term.",
      "account_type": "Type of account involved in the transaction (e.g., Receivable, Payable).",
      "payment_type": "Indicates whether the payment is incoming or outgoing.",
      "reconcile_effect_on": "Specifies the document or ledger affected by reconciliation.",
      "total_amount": "The full amount of the referenced document.",
      "outstanding_amount": "The remaining balance yet to be paid.",
      "allocated_amount": "Amount from the payment entry applied toward this reference.",
      "exchange_rate": "Currency exchange rate applied to this payment.",
      "exchange_gain_loss": "Any gain or loss resulting from currency fluctuations.",
      "account": "The general ledger account linked to the payment reference.",
      "payment_request": "The payment request associated with this reference, if any.",
      "payment_request_outstanding": "Amount still due under the associated payment request."
    },
    "meta_text": "This doctype helps answer questions about which invoice or document a payment entry is for, how much was paid, what remains outstanding, and any currency-related effects. It supports reconciliation workflows, payment tracking, and financial clarity in ERPNext."
  },
  "Company": {
    "module": "Setup",
    "description": "Represents a legal business entity or organizational unit with its own chart of accounts, financial rules, tax details, and structure in ERPNext.",
    "fields": {
      "company_name": "The official name of the company.",
      "abbr": "Short abbreviation used across naming series and ledger accounts.",
      "default_currency": "Currency used by this company for accounting.",
      "country": "Country where the company is registered.",
      "tax_id": "Tax registration number (e.g., VAT, GST, PAN).",
      "date_of_establishment": "Date when the company was legally established.",
      "date_of_incorporation": "Date when the company was officially incorporated.",
      "date_of_commencement": "Date the company began operations.",
      "parent_company": "If this is a child company, this field links it to its parent.",
      "company_description": "Textual overview or summary about the company.",
      "phone_no": "Company's main contact phone number.",
      "email": "Official company email address.",
      "fax": "Company’s fax number, if applicable.",
      "website": "URL to the company’s website.",
      "address_html": "Formatted company address used in documents.",
      "company_logo": "Logo used on letterheads and reports.",
      "default_bank_account": "Default bank account used for receiving or making payments.",
      "default_cash_account": "Default account for handling petty cash or cash transactions.",
      "default_receivable_account": "Default account used to record receivables from customers.",
      "default_payable_account": "Default account used to track payables to suppliers.",
      "write_off_account": "Account used when writing off bad debts or rounding differences.",
      "unrealized_profit_loss_account": "Account used for temporary gains/losses on foreign currency.",
      "default_expense_account": "Primary account where general expenses are recorded.",
      "default_income_account": "Main revenue account used for income tracking.",
      "default_discount_account": "Account used to record sales or purchase discounts.",
      "default_advance_received_account": "Account for advance payments received from customers.",
      "default_advance_paid_account": "Account for advance payments made to suppliers.",
      "exchange_gain_loss_account": "Account used to record currency gain/loss during conversion.",
      "unrealized_exchange_gain_loss_account": "Holds gains/losses from currency not yet settled.",
      "round_off_account": "Account used for rounding differences in invoices.",
      "round_off_cost_center": "Cost center where rounding adjustments are booked.",
      "round_off_for_opening": "Controls rounding for opening entries.",
      "default_deferred_revenue_account": "Account used to hold deferred income.",
      "default_deferred_expense_account": "Account used for expenses that will be recognized later.",
      "book_advance_payments_in_separate_party_account": "If enabled, books advance payments in separate ledger accounts.",
      "reconcile_on_advance_payment_date": "Sets reconciliation to occur on the advance payment date.",
      "reconciliation_takes_effect_on": "Specifies when reconciliation effects are applied (e.g., on posting date).",
      "auto_exchange_rate_revaluation": "Automatically re-evaluates accounts affected by exchange rate changes.",
      "auto_err_frequency": "Frequency setting for running automatic exchange rate revaluation jobs.",
      "submit_err_jv": "Determines if journal entries from revaluation should be auto-submitted.",
      "accumulated_depreciation_account": "Account where asset depreciation is accumulated over time.",
      "depreciation_expense_account": "Account where periodic depreciation expenses are recorded.",
      "series_for_depreciation_entry": "Naming series pattern for asset depreciation journal entries.",
      "expenses_included_in_asset_valuation": "Expenses that should be factored into asset cost valuation.",
      "disposal_account": "Account where asset disposal gains/losses are recorded.",
      "depreciation_cost_center": "Cost center used when booking depreciation expenses.",
      "capital_work_in_progress_account": "Account used for assets under development or construction.",
      "asset_received_but_not_billed": "Account used when assets are received but the invoice is pending.",
      "enable_perpetual_inventory": "Turns on real-time stock accounting tied to the ledger.",
      "default_inventory_account": "Account where stock/inventory value is maintained.",
      "stock_adjustment_account": "Account for adjustments in stock valuation or quantity.",
      "default_in_transit_warehouse": "Warehouse used to hold items that are in transfer.",
      "stock_received_but_not_billed": "Account used when stock is received but invoice is pending.",
      "default_provisional_account": "Interim account used for provisional stock transactions.",
      "expenses_included_in_valuation": "Additional costs (freight, duties) to include in item valuation.",
      "default_operating_cost_account": "Default account for ongoing operating expenses.",
      "default_holiday_list": "Holiday calendar linked to this company for scheduling.",
      "default_letter_head": "Default letterhead used on documents issued by the company.",
      "create_chart_of_accounts_based_on": "Template used when setting up the company’s chart of accounts.",
      "credit_limit": "Total credit allowed for customers under this company.",
      "monthly_sales_target": "Sales revenue target defined per month.",
      "total_monthly_sales": "Actual sales achieved in the current month.",
      "exception_budget_approver_role": "Role allowed to override budget-related restrictions.",
      "default_buying_terms": "Default terms and conditions for purchase documents.",
      "default_selling_terms": "Standard sales terms shown in sales documents.",
      "default_warehouse_for_sales_return": "Warehouse where returned sales items are stored.",
      "enable_provisional_accounting_for_non_stock_items": "Allows provisional accounting for services and non-stock goods."
    },
    "meta_text": "This doctype helps answer questions about a company’s structure, financial defaults, taxation setup, advance payment logic, depreciation rules, inventory treatment, and auto-revaluation preferences. It serves as the foundation for all financial and operational transactions in ERPNext for a specific legal entity."
  },
 "Asset Capitalization": {
    "module": "Assets",
    "description": "Manages the conversion of multiple cost sources (stock, service, asset items) into a capitalized fixed asset for accounting and compliance purposes.",
    "fields": {
      "title": "Title or label for the asset capitalization record.",
      "naming_series": "Series pattern used to generate the capitalization record ID.",
      "capitalization_method": "Defines how capitalization is calculated or triggered (manual or based on item type).",
      "target_item_code": "Item code of the final capitalized asset.",
      "target_item_name": "Display name of the target capitalized item.",
      "target_asset": "The asset document to which the cost will be consolidated.",
      "target_asset_name": "Human-readable name of the target asset.",
      "target_qty": "Quantity of assets being capitalized.",
      "target_asset_location": "Physical location of the resulting asset.",
      "company": "Company for which the asset is being capitalized.",
      "posting_date": "Date when capitalization is recorded.",
      "posting_time": "Exact time the capitalization entry was posted.",
      "set_posting_time": "Indicates whether posting time was manually set.",
      "finance_book": "Financial book under which this capitalization is recorded.",
      "target_batch_no": "Batch number associated with the final capitalized item.",
      "target_serial_no": "Serial number associated with the capitalized item.",
      "amended_from": "Link to the original document if this is an amendment.",
      "target_is_fixed_asset": "Indicates whether the resulting item is a fixed asset.",
      "target_has_batch_no": "Marks if the capitalized item uses batch numbers.",
      "target_has_serial_no": "Marks if the capitalized item uses serial numbers.",
      "stock_items": "Table of raw materials or stock items used for capitalization.",
      "stock_items_total": "Total value of stock items being capitalized.",
      "asset_items": "List of existing assets used to form the new asset.",
      "asset_items_total": "Total value of existing asset items being consolidated.",
      "service_items": "Services (like installation) that contribute to capitalization.",
      "service_items_total": "Total cost of service items.",
      "total_value": "Overall capitalization value from all sources.",
      "target_incoming_rate": "Valuation rate of the resulting capitalized asset.",
      "cost_center": "Cost center under which the capitalization is recorded.",
      "target_fixed_asset_account": "Ledger account where the capitalized asset is booked."
    },
    "meta_text": "This doctype helps track the creation of fixed assets by combining costs from stock, services, or other assets. It defines how much is capitalized, where it is recorded, and how the resulting asset is managed in accounts and inventory."
  },

  "Process Payment Reconciliation Log": {
    "module": "Accounts",
    "description": "Captures the outcome and logs of each payment reconciliation attempt, including total allocations, actual reconciliation, and any errors.",
    "fields": {
      "process_pr": "Link to the parent reconciliation process that triggered this log.",
      "status": "Current status of the reconciliation log (e.g., Completed, Failed).",
      "allocated": "Total payment amount that was supposed to be allocated.",
      "reconciled": "Actual amount that was successfully reconciled.",
      "total_allocations": "Count of individual payment allocations attempted.",
      "reconciled_entries": "List of successfully matched entries.",
      "error_log": "Any errors or mismatches encountered during the process.",
      "allocations": "Details of how the payment was allocated across references."
    },
    "meta_text": "Used to audit the reconciliation process, this doctype logs how much was intended vs. actually reconciled, and records any mismatches or allocation errors. Helpful for finance teams to validate reconciliation operations and resolve discrepancies."
  },

  "Process Payment Reconciliation": {
    "module": "Accounts",
    "description": "Facilitates the automated or manual reconciliation of payments against invoices, including filtering by party, account, and date ranges.",
    "fields": {
      "company": "The company where reconciliation is being performed.",
      "party_type": "Type of entity (Customer or Supplier) being reconciled.",
      "party": "The specific party (e.g., customer name) whose payments are being matched.",
      "receivable_payable_account": "The account involved in receiving or paying out funds.",
      "default_advance_account": "Advance payment account used if no invoice is matched.",
      "from_invoice_date": "Start date range for eligible invoices to be reconciled.",
      "to_invoice_date": "End date range for eligible invoices.",
      "from_payment_date": "Start date range for payments to be considered.",
      "to_payment_date": "End date range for payments.",
      "cost_center": "Cost center under which the reconciliation is tracked.",
      "bank_cash_account": "Bank or cash account linked to the payment.",
      "status": "Status of the reconciliation (e.g., Draft, Submitted, Cancelled).",
      "error_log": "Logs any errors or issues found during the reconciliation.",
      "amended_from": "Reference to the previous version if this is an amended record."
    },
    "meta_text": "This doctype helps match payments to outstanding invoices for suppliers or customers. It filters entries by party, date, and account, and logs any mismatches for resolution. It’s central to automating and verifying payment reconciliation workflows in ERPNext."
},

  "Raven Message Reaction": {
    "module": "Raven Messaging",
    "description": "Tracks emoji or symbolic reactions applied to messages within a channel in Raven Messaging.",
    "fields": {
      "reaction": "The emoji or symbol used as a reaction (e.g., 👍, 😀).",
      "reaction_escaped": "HTML-escaped version of the reaction emoji, used for rendering.",
      "message": "The specific message the reaction was added to.",
      "channel_id": "Identifier of the channel where the message and reaction reside.",
      "is_custom": "Marks whether the emoji used is a custom-defined one."
    },
    "meta_text": "Used to track which emoji reactions were added to which messages within Raven Messaging channels. Useful for interaction analytics, channel engagement, and emoji customization workflows."
  },
  "Raven Custom Emoji": {
    "module": "Raven Messaging",
    "description": "Manages custom emoji assets including their names and search tags for use in messages.",
    "fields": {
      "image": "The emoji graphic or image file used in messaging.",
      "emoji_name": "The short name or alias assigned to the custom emoji.",
      "keywords": "Searchable tags associated with the emoji to help find it quickly."
    },
    "meta_text": "Enables users to define and use custom emojis across Raven Messaging channels. It supports branding, personalization, and expressive communication within internal teams."
  },

  "Payment Request": {
    "module": "Accounts",
    "description": "Used to formally request or initiate payments from or to a party, including all relevant financial, party, and banking details.",
    "fields": {
      "payment_request_type": "Specifies whether the request is for sending or receiving a payment.",
      "transaction_date": "The date the payment request was created or recorded.",
      "naming_series": "Auto-naming pattern used for this payment request.",
      "company": "The company issuing the payment request.",
      "mode_of_payment": "Method intended for payment (e.g., bank transfer, credit card).",
      "party_type": "Defines the role of the party (Customer, Supplier, etc.).",
      "party": "The entity being paid or from whom payment is requested.",
      "party_name": "Full name of the party involved.",
      "reference_doctype": "Linked document type this payment refers to (e.g., Sales Order).",
      "reference_name": "Specific document ID that the payment request is based on.",
      "grand_total": "Total amount requested for payment.",
      "currency": "Currency in which the payment is requested.",
      "is_a_subscription": "Indicates whether this payment request is linked to a recurring subscription.",
      "outstanding_amount": "Amount still pending for payment.",
      "party_account_currency": "Currency of the party's ledger account.",
      "subscription_plans": "Linked subscription plan if applicable.",
      "bank_account": "The bank account details for receiving or making the payment.",
      "bank": "Name of the bank handling the payment.",
      "bank_account_no": "The bank account number for the transaction.",
      "account": "General ledger account related to the transaction.",
      "iban": "International Bank Account Number for the party.",
      "branch_code": "Bank branch code for identifying location.",
      "swift_number": "SWIFT/BIC code for international transfers.",
      "cost_center": "Cost center under which this payment request is tracked.",
      "project": "Project associated with this payment transaction.",
      "print_format": "The template used for printing the payment request.",
      "email_to": "Email address where the request should be sent.",
      "subject": "Subject line for the email or request message.",
      "payment_gateway_account": "Payment gateway account used for online payments.",
      "status": "Current status of the payment request (e.g., Draft, Sent, Paid).",
      "make_sales_invoice": "Whether a Sales Invoice should be created from this request.",
      "message": "Message body or instructions included with the payment request.",
      "mute_email": "Prevents email notifications from being sent.",
      "payment_url": "Online payment URL for the recipient to complete payment.",
      "payment_gateway": "Gateway platform being used for the transaction (e.g., Razorpay).",
      "payment_account": "The account to which payment will be posted.",
      "payment_channel": "Defines the channel used (online, offline, manual, etc.).",
      "payment_order": "Linked payment order document, if applicable.",
      "amended_from": "Reference to the document this record was amended from.",
      "phone_number": "Phone number of the party involved in the request."
    },
    "meta_text": "This doctype captures all the details for generating and managing payment requests — including party info, payment mode, gateway details, and financial accounts. It helps automate payment collection and tracking workflows across ERP transactions."
  },

  "Stock Ledger Entry": {
    "module": "Stock",
    "description": "Logs every transaction that affects stock levels or valuation — such as receipts, issues, and adjustments — and plays a critical role in inventory and cost accuracy.",
    "fields": {
      "item_code": "Code of the item being moved in or out of stock.",
      "warehouse": "Warehouse where the transaction occurred.",
      "posting_date": "Date the stock transaction was recorded.",
      "posting_time": "Time the transaction was logged.",
      "posting_datetime": "Combined timestamp of posting date and time.",
      "is_adjustment_entry": "Marks whether this entry is a stock adjustment (vs. regular transaction).",
      "auto_created_serial_and_batch_bundle": "If enabled, auto-creates a serial/batch bundle document.",
      "voucher_type": "The type of source document (e.g., Purchase Receipt, Delivery Note).",
      "voucher_no": "The specific document number that caused this stock change.",
      "voucher_detail_no": "Line item reference within the voucher.",
      "serial_and_batch_bundle": "Linked document managing serial/batch numbers.",
      "dependant_sle_voucher_detail_no": "Dependent SLE line number, if this entry is tied to another.",
      "recalculate_rate": "Indicates whether valuation rate should be recalculated.",
      "actual_qty": "Quantity change (positive for receipt, negative for issue).",
      "qty_after_transaction": "Resulting quantity after the transaction.",
      "incoming_rate": "Rate used for items coming into stock.",
      "outgoing_rate": "Rate applied to items going out of stock.",
      "valuation_rate": "Final rate used to value the item after transaction.",
      "stock_value": "Total value of the stock after the transaction.",
      "stock_value_difference": "Change in value caused by the transaction.",
      "stock_queue": "Internal field that manages FIFO/LIFO queue for the item.",
      "company": "Company under which the transaction is logged.",
      "stock_uom": "Stock unit of measurement for the item.",
      "project": "Project under which this transaction falls.",
      "fiscal_year": "Fiscal year during which the entry is made.",
      "has_batch_no": "Marks if the item is batch-tracked.",
      "has_serial_no": "Marks if the item is serial number tracked.",
      "is_cancelled": "Indicates if this entry has been voided or reversed.",
      "to_rename": "Marks if the entry is queued for renaming.",
      "serial_no": "Serial number(s) of the item being tracked.",
      "batch_no": "Batch number for the items involved."
    },
    "meta_text": "This doctype is the backbone of inventory accounting. It provides detailed traceability of every stock movement — quantities, valuation, origin documents, and cost impact — across warehouses, companies, and time periods."
  },
  "Purchase Invoice Advance": {
    "module": "Accounts",
    "description": "Tracks advance payments made to suppliers, allowing reconciliation against future purchase invoices.",
    "fields": {
      "reference_type": "Document type the advance is linked to (e.g., Purchase Invoice).",
      "reference_name": "Specific document name or ID being referenced.",
      "remarks": "Comments or notes about the advance entry.",
      "reference_row": "Row number in the referenced document, if applicable.",
      "advance_amount": "Total advance amount paid to the supplier.",
      "allocated_amount": "Portion of the advance applied to the purchase invoice.",
      "exchange_gain_loss": "Currency gain or loss resulting from exchange rate differences.",
      "ref_exchange_rate": "Exchange rate used for the referenced document.",
      "difference_posting_date": "Date when gain/loss differences are posted to the ledger."
    },
    "meta_text": "Used to track and reconcile prepayments to suppliers, ensuring they are accurately applied to future purchase invoices. Helps manage cash flow and currency adjustments in procurement."
  },

  "Sales Invoice Advance": {
    "module": "Accounts",
    "description": "Tracks advance payments received from customers to be applied to future sales invoices.",
    "fields": {
      "reference_type": "Document type the advance relates to (e.g., Sales Invoice).",
      "reference_name": "Specific document being referenced by this advance.",
      "remarks": "Comments about the advance payment received.",
      "reference_row": "Line number in the referenced document (if relevant).",
      "advance_amount": "Amount received as advance from the customer.",
      "allocated_amount": "Portion of the advance matched to a sales invoice.",
      "exchange_gain_loss": "Currency fluctuation impact between payment and invoice.",
      "ref_exchange_rate": "Exchange rate used for the reference document.",
      "difference_posting_date": "Date of posting the currency difference adjustment."
    },
    "meta_text": "This doctype allows tracking of advance payments from customers, allocation to invoices, and accounting for currency variances. Ensures accurate revenue recognition and customer balance reconciliation."
  },

  "Closing Stock Balance": {
    "module": "Stock",
    "description": "Captures inventory levels at the end of a reporting period for stock valuation and financial closing.",
    "fields": {
      "naming_series": "Auto-generated identifier pattern for the record.",
      "company": "The company this stock balance applies to.",
      "status": "Current status of the record (e.g., Draft, Submitted).",
      "from_date": "Start date for evaluating stock balance.",
      "to_date": "End date for evaluating stock balance.",
      "item_code": "Specific item being evaluated.",
      "item_group": "Group or category of the item.",
      "include_uom": "Whether to include unit of measure in the report.",
      "warehouse": "Warehouse location being evaluated.",
      "warehouse_type": "Type or category of the warehouse (e.g., Finished Goods).",
      "amended_from": "Reference to a previous version of the document."
    },
    "meta_text": "Provides a financial snapshot of stock levels at period-end. Key for stock valuation, inventory auditing, and accurate accounting of closing balances."
  },

  "Raven Message": {
    "module": "Raven Messaging",
    "description": "Stores chat messages with optional media, threads, reactions, and bot interactions inside Raven Messaging.",
    "fields": {
      "channel_id": "ID of the messaging channel where the message was sent.",
      "text": "The plain text content of the message.",
      "json": "Structured data or payload linked to the message.",
      "message_reactions": "List of emoji reactions applied to the message.",
      "is_reply": "Indicates whether this message is a reply to another message.",
      "linked_message": "Reference to the original message being replied to.",
      "replied_message_details": "Snapshot of the message being replied to.",
      "is_thread": "Indicates if this message starts a new thread.",
      "message_type": "Defines the message format (e.g., text, media, system).",
      "content": "Rich content (e.g., HTML, Markdown) used in the message.",
      "file": "Attached file or document sent with the message.",
      "image_width": "Width of the image if file is a graphic.",
      "image_height": "Height of the image if applicable.",
      "file_thumbnail": "Thumbnail preview of the file/image.",
      "thumbnail_width": "Width of the preview image.",
      "thumbnail_height": "Height of the preview image.",
      "link_doctype": "Linked ERP document type, if any.",
      "link_document": "Specific ERP document this message refers to.",
      "is_edited": "Marks whether the message has been edited after sending.",
      "is_forwarded": "Indicates if the message was forwarded.",
      "mentions": "List of users mentioned in the message.",
      "poll_id": "If this message is part of a poll, this field holds the poll reference.",
      "is_bot_message": "Marks whether the message was sent by a bot.",
      "bot": "Bot that sent the message, if applicable.",
      "hide_link_preview": "Prevents link previews from rendering.",
      "notification": "Controls whether this message triggers a user notification."
    },
    "meta_text": "Captures all message interactions including replies, file attachments, mentions, and bot activity within Raven Messaging. Central to building collaborative chat experiences with ERP document linking."
  },

  "Raven Document Notification": {
    "module": "Raven Integrations",
    "description": "Sets up document-based notifications to be sent via chat or external platforms based on user-defined conditions.",
    "fields": {
      "notification_name": "Custom name for the notification configuration.",
      "enabled": "Marks whether the notification rule is active.",
      "sender": "The user or bot account sending the message.",
      "send_alert_on": "The trigger event (e.g., Submit, Cancel) for sending the alert.",
      "document_type": "ERP document type being monitored for changes.",
      "condition": "Custom logic to determine when the alert should be triggered.",
      "recipients": "List of recipients to be notified when the condition is met.",
      "message": "Message template or content that will be sent."
    },
    "meta_text": "Automates alerts when ERP documents are submitted, updated, or cancelled. Helps keep teams informed via chat integrations using custom triggers and dynamic message content."
  },

  "Raven Document Notification Recipients": {
    "module": "Raven Integrations",
    "description": "Defines who should receive document-based alerts and how those alerts are delivered (e.g., Slack, email, Raven channel).",
    "fields": {
      "channel_type": "The type of channel to send the alert (e.g., Email, Slack, Raven).",
      "variable_type": "Whether the recipient is static (fixed) or dynamic (from document fields).",
      "value": "The actual recipient identifier such as email address, Slack ID, or channel name."
    },
    "meta_text": "Supports defining fixed or dynamic recipients for Raven-integrated alerts. Allows users to route notifications through different messaging platforms and channels."
  },

  "Subcontracting Order Item": {
    "module": "Subcontracting",
    "description": "Represents individual components or services in a subcontracting order, including BOM references, cost breakdowns, and warehouse tracking.",
    "fields": {
      "item_code": "Code of the item being subcontracted.",
      "item_name": "Name or description of the item.",
      "bom": "Linked Bill of Materials for this item.",
      "include_exploded_items": "Whether to include sub-assemblies in the BOM hierarchy.",
      "schedule_date": "Planned date for the subcontractor to start work.",
      "expected_delivery_date": "When the item is expected to be delivered after subcontracting.",
      "description": "Detailed description of the item or service.",
      "qty": "Quantity ordered from the subcontractor.",
      "received_qty": "Quantity received back from the subcontractor.",
      "returned_qty": "Quantity returned due to quality or other issues.",
      "stock_uom": "Stock unit of measurement.",
      "conversion_factor": "UOM conversion multiplier.",
      "rate": "Cost per unit being subcontracted.",
      "amount": "Total subcontracting cost for the item.",
      "rm_cost_per_qty": "Raw material cost per unit of output.",
      "service_cost_per_qty": "Service charge per unit billed by the subcontractor.",
      "additional_cost_per_qty": "Any additional per-unit cost (e.g., packing, labor).",
      "warehouse": "Warehouse where the finished goods will be received.",
      "expense_account": "Account to which the service expense is booked.",
      "manufacturer": "The subcontracting company or service provider.",
      "manufacturer_part_no": "Manufacturer's part number for reference.",
      "material_request": "Linked material request if this was auto-generated.",
      "material_request_item": "Specific item row from the material request.",
      "cost_center": "Cost center that will absorb the expense.",
      "project": "Project associated with this subcontracting activity.",
      "purchase_order_item": "Linked purchase order item, if applicable."
    },
    "meta_text": "Used for line-level tracking in subcontracting workflows. Helps calculate service and material costs, trace BOM usage, and manage item-level production logistics tied to external vendors."
  },

  "Asset Finance Book": {
    "module": "Assets",
    "description": "Defines how depreciation is handled for a specific asset, including methods, frequency, and accounting impact.",
    "fields": {
      "finance_book": "Book under which depreciation is being recorded.",
      "depreciation_method": "Method used for depreciation (e.g., Straight Line, Reducing Balance).",
      "total_number_of_depreciations": "Total number of depreciation cycles planned.",
      "total_number_of_booked_depreciations": "How many depreciation entries have already been booked.",
      "daily_prorata_based": "If enabled, calculates depreciation on a daily basis.",
      "shift_based": "Enables depreciation based on asset shifts or working hours.",
      "frequency_of_depreciation": "Interval at which depreciation is recorded (e.g., Monthly, Quarterly).",
      "depreciation_start_date": "Date when depreciation begins.",
      "salvage_value_percentage": "Expected salvage value expressed as a percentage.",
      "expected_value_after_useful_life": "Asset’s estimated value after depreciation ends.",
      "value_after_depreciation": "Final value of the asset after depreciation is complete.",
      "rate_of_depreciation": "Annual depreciation rate applied to the asset."
    },
    "meta_text": "This doctype captures depreciation logic, frequency, and accounting for assets. It defines how values are reduced over time and ensures compliance with financial reporting standards."
  },

  "Quotation Item": {
    "module": "Selling",
    "description": "Stores detailed product and pricing information for each line item in a sales quotation.",
    "fields": {
      "item_code": "Code of the item being quoted.",
      "customer_item_code": "Customer-specific reference for the item.",
      "item_name": "Name of the quoted item.",
      "description": "Item description for the quotation.",
      "item_group": "Group or category the item belongs to.",
      "brand": "Brand of the item.",
      "image": "Image of the product, if any.",
      "qty": "Quantity quoted to the customer.",
      "stock_uom": "Unit of measurement used for stock.",
      "uom": "Unit of measure shown to customer.",
      "conversion_factor": "UOM to stock UOM multiplier.",
      "stock_qty": "Total quantity in stock UOM.",
      "actual_qty": "Available quantity in warehouse.",
      "company_total_stock": "Total stock across company warehouses.",
      "price_list_rate": "Price from the selected price list.",
      "base_price_list_rate": "Base currency price from price list.",
      "margin_type": "Whether margin is percentage or fixed.",
      "margin_rate_or_amount": "Value of the margin applied.",
      "rate_with_margin": "Final rate after applying margin.",
      "discount_percentage": "Percent discount on item.",
      "discount_amount": "Fixed discount amount.",
      "rate": "Quoted rate per unit after discount.",
      "net_rate": "Final net rate per unit.",
      "amount": "Total amount before tax.",
      "net_amount": "Amount after discount, before tax.",
      "item_tax_template": "Tax template applicable to the item.",
      "base_rate": "Rate in base currency.",
      "base_net_rate": "Net rate in base currency.",
      "base_amount": "Total in base currency.",
      "base_net_amount": "Net amount in base currency.",
      "pricing_rules": "Pricing rule applied to the item.",
      "stock_uom_rate": "Rate adjusted for stock UOM.",
      "is_free_item": "Marks if the item is free of cost.",
      "is_alternative": "Indicates if the item is an alternative offer.",
      "has_alternative_item": "Marks if there is a recommended alternative.",
      "valuation_rate": "Value used for stock valuation.",
      "gross_profit": "Gross profit calculated on the quote.",
      "weight_per_unit": "Weight of a single unit.",
      "total_weight": "Total weight based on quantity.",
      "weight_uom": "Unit of weight (e.g., kg, lb).",
      "warehouse": "Warehouse from which the item will be delivered.",
      "against_blanket_order": "Links this quote to a blanket order.",
      "blanket_order": "Blanket order reference if applicable.",
      "blanket_order_rate": "Rate from the blanket order.",
      "prevdoc_doctype": "Previous document type used for reference.",
      "prevdoc_docname": "Previous document name.",
      "item_balance": "Balance quantity of the item available.",
      "projected_qty": "System-projected available quantity.",
      "stock_balance": "Real-time stock balance.",
      "item_tax_rate": "Item-specific tax rate.",
      "additional_notes": "Extra remarks or comments about the item."
    },
    "meta_text": "Defines each line in a quotation including pricing, stock, taxes, discounts, and reference documents. Supports sales forecasting, margin calculations, and delivery planning."
  },
  "Process Statement Of Accounts CC": {
    "module": "Accounts",
    "description": "Stores email addresses that should be copied (CC) when statements of accounts are sent via email.",
    "fields": {
      "cc": "The email address that will receive a CC of the statement email."
    },
    "meta_text": "Used to ensure key stakeholders receive copies of statement of account emails. Commonly used to loop in finance team members or partners."
  },

  "Competitor": {
    "module": "CRM",
    "description": "Captures information about competitors, such as their name and website, to aid sales strategy.",
    "fields": {
      "competitor_name": "Name of the competing business.",
      "website": "URL of the competitor’s website."
    },
    "meta_text": "Allows CRM users to track and compare competitors. Helps in market analysis, strategic positioning, and win-loss tracking."
  },

  "Quotation Lost Reason": {
    "module": "Setup",
    "description": "Stores the reasons for losing a quotation, supporting sales performance analysis.",
    "fields": {
      "order_lost_reason": "Specific reason for the lost quotation (e.g., price too high, delayed delivery)."
    },
    "meta_text": "Helps sales teams log and analyze why deals are lost. Useful for improving quotation strategies and reducing sales losses."
  },

  "Raven Channel": {
    "module": "Raven Channel Management",
    "description": "Defines communication channels for conversations, direct messages, and threads in the Raven Messaging platform.",
    "fields": {
      "channel_name": "Name of the messaging channel.",
      "channel_description": "Optional description of the channel’s purpose.",
      "type": "Type of channel (e.g., public, direct message, thread).",
      "is_synced": "Marks whether the channel is synced with external sources.",
      "linked_doctype": "ERP document type linked to this channel.",
      "linked_document": "Specific ERP document linked to the conversation.",
      "workspace": "Workspace in which the channel exists.",
      "is_direct_message": "Indicates if the channel is a one-on-one direct message.",
      "is_thread": "Marks if the channel is a threaded discussion.",
      "is_dm_thread": "Specifies if the thread is part of a direct message.",
      "is_self_message": "Indicates if the user is messaging themselves.",
      "is_archived": "Marks the channel as archived (inactive).",
      "last_message_timestamp": "Timestamp of the latest message in the channel.",
      "last_message_details": "Content or summary of the last message.",
      "pinned_messages": "List of messages pinned in this channel.",
      "pinned_messages_string": "Concatenated view of all pinned messages.",
      "is_ai_thread": "Marks whether the channel includes an AI bot.",
      "openai_thread_id": "Reference to the linked OpenAI thread.",
      "thread_bot": "Bot managing responses within this thread."
    },
    "meta_text": "Organizes and manages structured conversations in Raven Messaging. Supports AI-powered threads, document-linked chats, and direct communication workflows."
  },

  "Raven AI Function": {
    "module": "Raven AI",
    "description": "Defines AI-based backend functions that can be called by bots or users to perform automated tasks.",
    "fields": {
      "function_name": "Identifier name for the AI function.",
      "description": "Description of what the function does.",
      "function_path": "Import path where the function is implemented.",
      "type": "Type of function (e.g., transformation, fetch, validation).",
      "reference_doctype": "Optional ERP document the function is associated with.",
      "pass_parameters_as_json": "Whether input parameters are passed as a single JSON object.",
      "requires_write_permissions": "If enabled, the function requires document write access.",
      "strict": "Marks whether strict validation is required before execution.",
      "parameters": "Structured definition of expected inputs.",
      "params": "List of parameter values provided to the function.",
      "function_definition": "The actual logic or code of the function."
    },
    "meta_text": "Enables AI-driven automations by defining executable backend logic with custom parameters, security enforcement, and integration with ERPNext modules."
  },

  "Raven Bot Functions": {
    "module": "Raven AI",
    "description": "Links backend AI functions with bots to automate responses and perform defined tasks.",
    "fields": {
      "function": "Name of the function that the bot will execute.",
      "type": "Type or category of the bot function.",
      "description": "Description of the logic handled by this function."
    },
    "meta_text": "Helps bots perform specific automated tasks when triggered by messages or actions. Supports modular, scalable bot logic across chat use cases."
  },

  "Raven Bot AI Prompt": {
    "module": "Raven AI",
    "description": "Defines AI prompt templates for Raven Bots to use when generating responses to user inputs.",
    "fields": {
      "prompt": "Text prompt or instruction to the AI model.",
      "naming_series": "Naming pattern for auto-generating prompt IDs.",
      "raven_bot": "Bot to which this prompt belongs.",
      "is_global": "Whether the prompt is available across all bots."
    },
    "meta_text": "Standardizes the AI instructions used by bots, enabling consistent and intelligent responses. Prompts can be shared across multiple bots or scoped individually."
  },

  "Raven Bot Instruction Template": {
    "module": "Raven AI",
    "description": "Provides reusable templates of instructions for Raven Bots, supporting dynamic content generation.",
    "fields": {
      "template_name": "Name of the instruction template.",
      "dynamic_instructions": "Text or logic used to generate real-time context-aware prompts.",
      "instruction": "Static or base instruction content."
    },
    "meta_text": "Templates improve bot response quality by structuring tasks with repeatable instructions. Useful for scenarios like reminders, task creation, or user guidance."
  },

  "Raven Bot": {
    "module": "Raven Bot",
    "description": "Defines a Raven Bot, including its configuration, AI capabilities, permissions, and response logic.",
    "fields": {
      "bot_name": "Name or title of the bot.",
      "image": "Bot profile picture or avatar.",
      "raven_user": "User profile linked to this bot.",
      "is_standard": "Indicates if the bot is a system-provided standard bot.",
      "module": "ERP module the bot belongs to (e.g., CRM, Projects).",
      "is_ai_bot": "Marks if the bot uses AI for generating responses.",
      "debug_mode": "Enables debug output for development or monitoring.",
      "openai_assistant_id": "ID of the OpenAI assistant used by this bot.",
      "enable_code_interpreter": "Allows the bot to use a code interpreter during tasks.",
      "allow_bot_to_write_documents": "If enabled, bot can create or update ERP documents.",
      "enable_file_search": "Allows the bot to search through file-based content.",
      "instruction": "Base instruction for guiding the bot's behavior.",
      "dynamic_instructions": "Logic that updates bot instructions based on context.",
      "bot_functions": "Functions or capabilities assigned to the bot."
    },
    "meta_text": "Defines smart, configurable assistants within Raven. Bots can be AI-enabled, interact with ERP documents, and respond intelligently based on dynamic instruction sets."
  },
"Raven Scheduler Event": {
    "module": "Raven Integrations",
    "description": "Schedules recurring or one-time events in the Raven system, typically for automating messages or bot actions.",
    "fields": {
      "event_name": "Name used to identify the scheduled task.",
      "event_frequency": "Predefined frequency (e.g., hourly, daily, weekly) of the event.",
      "cron_expression": "Custom cron syntax used for precise scheduling.",
      "bot": "The bot that will perform the scheduled task.",
      "send_to": "Target recipient or group for the scheduled content.",
      "channel": "Raven channel where the scheduled message will be posted.",
      "dm": "Specifies if the message is sent as a direct message.",
      "content": "Text or message content to be delivered.",
      "scheduler_event_id": "System-generated ID for internal tracking of the event."
    },
    "meta_text": "Used to define automated bot behavior through timed events. Supports both interval-based and cron-based execution for workflows like reminders, reports, or alerts in Raven."
  },

  "Raven Message Action": {
    "module": "Raven Integrations",
    "description": "Defines actions that users or bots can trigger from messages, enabling backend logic or UI dialogs.",
    "fields": {
      "action_name": "Label for the user-visible action (e.g., Approve, Open Form).",
      "enabled": "Marks whether the action is active.",
      "action": "Defines what type of action it performs (e.g., run script, open dialog).",
      "document_type": "The ERP document type that this action is associated with.",
      "custom_function_path": "Backend path to the function triggered by this action.",
      "title": "Title of any dialog or response triggered.",
      "description": "Description or tooltip explaining the action.",
      "success_message": "Message shown after successful execution.",
      "fields": "Input fields required from the user, if any."
    },
    "meta_text": "Enables interactive messaging with smart actions like approvals, form launches, or data updates. Used widely in Raven bots and notifications to streamline user workflows directly within chat."
  },

  "Raven HR Company Workspace": {
    "module": "Raven Integrations",
    "description": "Connects a company's HR records with a Raven messaging workspace to support integrated communication.",
    "fields": {
      "company": "The ERP company that the workspace is linked to.",
      "raven_workspace": "The Raven workspace used by this company for HR or collaboration."
    },
    "meta_text": "Allows companies to integrate HR activities like onboarding or policy updates with Raven chat workflows. Ensures synchronized communication within designated Raven workspaces."
  },

  "Subcontracting Receipt": {
    "module": "Subcontracting",
    "description": "Records goods or services received from subcontractors and tracks the associated costs and materials.",
    "fields": {
      "title": "Label or name for the subcontracting receipt.",
      "naming_series": "Auto-generated ID format for this record.",
      "supplier": "Vendor from whom the materials/services were received.",
      "supplier_name": "Full name of the supplier.",
      "supplier_delivery_note": "Reference delivery note from the supplier.",
      "company": "The company receiving the items/services.",
      "posting_date": "Date of receiving goods/services.",
      "posting_time": "Time of entry or posting.",
      "is_return": "Indicates if this is a return against a previous receipt.",
      "return_against": "Reference to the receipt being returned.",
      "cost_center": "Cost center associated with the receipt.",
      "project": "Project tied to this subcontracting activity.",
      "set_warehouse": "Default warehouse where items are stored.",
      "rejected_warehouse": "Warehouse used for rejected items.",
      "supplier_warehouse": "Supplier-side warehouse reference.",
      "items": "List of received items.",
      "get_scrap_items": "Fetch scrap items if applicable.",
      "raw_material_details": "Raw material consumption linked to this receipt.",
      "supplied_items": "List of components or parts supplied to the subcontractor.",
      "total_qty": "Total quantity of items received.",
      "total": "Total value of the receipt.",
      "in_words": "Total in word format for display.",
      "bill_no": "Supplier bill/invoice number.",
      "bill_date": "Date on the supplier's bill.",
      "supplier_address": "Address of the vendor.",
      "contact_person": "Vendor contact person.",
      "contact_mobile": "Vendor mobile number.",
      "shipping_address": "Address to which goods were delivered.",
      "billing_address": "Address used for invoice generation.",
      "additional_costs": "Extra charges included with this receipt.",
      "total_additional_costs": "Sum of all additional costs.",
      "instructions": "Instructions related to the receipt or delivery.",
      "status": "Current document status (e.g., Draft, Submitted).",
      "per_returned": "Percentage of items returned.",
      "auto_repeat": "Linked recurring configuration, if any.",
      "remarks": "Additional notes.",
      "transporter_name": "Name of the transporter used.",
      "lr_no": "Lorry receipt number.",
      "lr_date": "Date of the lorry receipt."
    },
    "meta_text": "Used for tracking what was received from subcontractors, along with linked raw materials, billing details, and return handling. Ensures traceability and accurate valuation in subcontracting operations."
  },

  "Subcontracting Receipt Item": {
    "module": "Subcontracting",
    "description": "Captures item-level details for goods or services received from a subcontractor, including quantities and inspections.",
    "fields": {
      "item_code": "Identifier of the item received.",
      "item_name": "Name or label of the item.",
      "received_qty": "Quantity received from the subcontractor.",
      "qty": "Ordered or expected quantity.",
      "rejected_qty": "Quantity rejected after inspection.",
      "returned_qty": "Quantity returned to subcontractor.",
      "stock_uom": "Unit of measure used in stock.",
      "conversion_factor": "Multiplier between UOM and stock UOM.",
      "rate": "Cost per unit of the item.",
      "amount": "Total cost based on quantity and rate.",
      "rm_cost_per_qty": "Raw material cost per unit.",
      "service_cost_per_qty": "Service component cost per unit.",
      "warehouse": "Warehouse receiving the item.",
      "subcontracting_order": "Link to the originating subcontracting order.",
      "bom": "Bill of Materials used for this item.",
      "quality_inspection": "Inspection document used for validation.",
      "serial_no": "Serial number, if applicable.",
      "batch_no": "Batch number of the item.",
      "expense_account": "GL account used for booking this cost.",
      "cost_center": "Cost center where the cost is booked.",
      "project": "Linked project, if any.",
      "purchase_order": "Purchase order associated with this item.",
      "purchase_order_item": "Line item from the purchase order."
    },
    "meta_text": "Enables line-level tracking of subcontracted items including costs, BOMs, quality inspections, and returns. Critical for financial accuracy and inventory control in subcontracting processes."
  },

  "Subcontracting Order": {
    "module": "Subcontracting",
    "description": "Official record of a purchase placed with a subcontractor to produce or deliver items/services.",
    "fields": {
      "title": "Name or title for the subcontracting order.",
      "naming_series": "ID pattern used for creating this document.",
      "purchase_order": "Linked purchase order, if any.",
      "supplier": "Vendor receiving the subcontracting order.",
      "supplier_name": "Full supplier name.",
      "supplier_warehouse": "Warehouse at the supplier’s end.",
      "company": "Company issuing the order.",
      "transaction_date": "Date when the order is created.",
      "schedule_date": "Planned date for delivery.",
      "amended_from": "Reference to an amended order.",
      "cost_center": "Cost center linked to this order.",
      "project": "Associated project.",
      "set_warehouse": "Default warehouse for received items.",
      "items": "Items being subcontracted.",
      "total_qty": "Total quantity ordered.",
      "total": "Total value of the subcontracting order.",
      "service_items": "Services included in this order.",
      "supplied_items": "Items supplied to the vendor.",
      "supplier_address": "Address of the vendor.",
      "contact_person": "Contact person at the supplier.",
      "contact_mobile": "Contact phone number.",
      "contact_email": "Email address for communication.",
      "shipping_address": "Where the goods will be received.",
      "billing_address": "Billing location for financial tracking.",
      "distribute_additional_costs_based_on": "Logic to distribute any extra costs (e.g., by qty, value).",
      "additional_costs": "List of any added charges.",
      "total_additional_costs": "Total of the extra charges.",
      "status": "Current status (Draft, Submitted, etc.).",
      "per_received": "Percentage of items received against the order.",
      "select_print_heading": "Custom print heading to use.",
      "letter_head": "Letterhead for printed documents."
    },
    "meta_text": "Controls how subcontracted orders are placed and tracked. Supports fulfillment monitoring, supplier communication, and proper cost allocation in production workflows."
  },
  "Subcontracting Order Service Item": {
    "module": "Subcontracting",
    "description": "Captures the service-based components of a subcontracting order, including finished goods linkage and cost details.",
    "fields": {
      "item_code": "Code identifying the service item.",
      "item_name": "Name or label of the service item.",
      "qty": "Quantity of the service being requested.",
      "rate": "Rate charged per service unit.",
      "amount": "Total amount calculated as qty × rate.",
      "fg_item": "Finished good item this service is linked to.",
      "fg_item_qty": "Quantity of finished goods expected.",
      "purchase_order_item": "Reference to the purchase order item, if any.",
      "material_request": "Linked material request, if applicable.",
      "material_request_item": "Specific row from the material request document."
    },
    "meta_text": "Used to manage the service aspect of subcontracting — connecting services to finished goods and tracking them against purchase orders or material requests. Supports accurate subcontracting expense and planning."
  },

  "Blanket Order": {
    "module": "Manufacturing",
    "description": "Used to create long-term contracts with suppliers or customers for recurring deliveries over time.",
    "fields": {
      "naming_series": "Pattern used to generate the order ID.",
      "blanket_order_type": "Type of the agreement (e.g., Customer or Supplier).",
      "customer": "Customer involved in the agreement.",
      "customer_name": "Full name of the customer.",
      "supplier": "Supplier participating in the agreement.",
      "supplier_name": "Full name of the supplier.",
      "order_no": "Unique reference number for this order.",
      "order_date": "Date when the agreement is created.",
      "from_date": "Start date of the blanket order validity.",
      "to_date": "End date of the agreement’s validity.",
      "company": "Company executing the order.",
      "items": "List of items covered under this agreement.",
      "amended_from": "Reference to an earlier version if amended.",
      "tc_name": "Terms and conditions template used.",
      "terms": "Full terms and conditions applied to the agreement."
    },
    "meta_text": "Blanket Orders are used for strategic procurement or sales where recurring delivery is expected. It improves planning by securing fixed terms over time for both suppliers and customers."
  },

  "Production Plan": {
    "module": "Manufacturing",
    "description": "Creates a consolidated plan for production based on demand from sales orders or material requirements.",
    "fields": {
      "naming_series": "Naming pattern for auto-generating plan ID.",
      "company": "Company for which production is being planned.",
      "get_items_from": "Source from which demand is fetched (e.g., Sales Orders).",
      "posting_date": "Date the plan is recorded.",
      "filters": "Filtering options used during planning.",
      "item_code": "Specific item being planned for.",
      "customer": "Customer associated with the demand.",
      "warehouse": "Target warehouse for finished goods.",
      "project": "Project tied to the production activity.",
      "sales_order_status": "Status filter for the sales orders considered.",
      "from_date": "Start date for demand consideration.",
      "to_date": "End date for demand consideration.",
      "sales_orders": "List of sales orders selected.",
      "material_requests": "List of generated material requests.",
      "sub_assembly_warehouse": "Warehouse to store sub-assemblies.",
      "skip_available_sub_assembly_item": "If true, excludes sub-assemblies already in stock.",
      "get_sub_assembly_items": "Enables fetching sub-assembly components.",
      "material_request_planning": "Settings for planning raw material requests.",
      "include_non_stock_items": "Includes non-stock items in planning.",
      "include_subcontracted_items": "Accounts for subcontracted items.",
      "include_safety_stock": "If enabled, includes safety stock in requirement planning.",
      "transfer_materials": "Whether materials should be transferred to the production site.",
      "total_planned_qty": "Total quantity planned across items.",
      "total_produced_qty": "Total quantity already produced.",
      "status": "Current status of the plan (e.g., Draft, Completed).",
      "warehouses": "List of warehouses involved.",
      "amended_from": "Link to a previous version of the plan, if amended."
    },
    "meta_text": "Supports end-to-end production planning by considering existing orders, safety stock, and sub-assembly requirements. Helps manufacturers avoid shortages or overproduction by centralizing demand data."
  },

  "Raven Channel Member": {
    "module": "Raven Channel Management",
    "description": "Tracks user membership and permissions within Raven chat channels.",
    "fields": {
      "channel_id": "ID of the Raven channel.",
      "user_id": "Unique ID of the user who is a member.",
      "is_admin": "Marks whether the user is an admin for the channel.",
      "last_visit": "Timestamp of the user’s most recent access.",
      "is_synced": "Marks if this member's data is synced with external systems.",
      "linked_doctype": "ERP document type this user-channel membership relates to.",
      "linked_document": "Specific ERP document tied to the channel membership.",
      "allow_notifications": "Specifies whether the user receives notifications from this channel."
    },
    "meta_text": "Used to define user access to messaging channels in Raven. Supports permission management, message notification settings, and ERP document-linked collaborations."
  },

  "Item Variant Attribute": {
    "module": "Stock",
    "description": "Defines a variant characteristic and its value for a specific item variant (e.g., Size = L).",
    "fields": {
      "variant_of": "Parent item to which this variant belongs.",
      "attribute": "Name of the attribute (e.g., Size, Color).",
      "attribute_value": "Specific value of the attribute for the variant.",
      "numeric_values": "If numeric, holds the actual value(s).",
      "disabled": "Marks the attribute as inactive.",
      "from_range": "Lower bound value for ranged attributes.",
      "increment": "Step increment for generating range-based variants.",
      "to_range": "Upper bound value for numeric range."
    },
    "meta_text": "Links a parent item to a specific attribute and its value, enabling variant creation like Size=L or Weight=5kg. Especially useful for managing complex product catalogs with color, size, or dimension combinations."
  },

  "Item Attribute": {
    "module": "Stock",
    "description": "Defines possible characteristics of items used for filtering, variant generation, and cataloging.",
    "fields": {
      "attribute_name": "Name of the attribute (e.g., Color, Size).",
      "numeric_values": "Marks if the attribute supports numeric values.",
      "disabled": "Marks the attribute as inactive.",
      "from_range": "Start of numeric value range.",
      "increment": "Increment value for numeric range.",
      "to_range": "End of numeric value range.",
      "item_attribute_values": "List of possible values for this attribute."
    },
    "meta_text": "Supports attribute-based inventory setups. Attributes like Color, Width, or Voltage help generate item variants and allow better filtering in sales, purchasing, or manufacturing workflows."
  },

"Dunning": {
  "module": "Accounts",
  "description": "Used to manage overdue payments and related charges, including interest and fee calculations.",
  "fields": [
    "naming_series", "customer", "customer_name", "company", "posting_date", "posting_time", 
    "status", "currency", "conversion_rate", "dunning_type", "rate_of_interest", "overdue_payments", 
    "total_interest", "dunning_fee", "dunning_amount", "base_dunning_amount", "total_outstanding", 
    "grand_total", "language", "body_text", "letter_head", "closing_text", "income_account", "cost_center", 
    "amended_from", "customer_address", "address_display", "contact_person", "contact_display", "contact_mobile", 
    "contact_email", "company_address", "company_address_display"
  ],
  "meta_text": "The 'Dunning' doctype is part of the Accounts module and is used to manage overdue receivables by applying penalties and sending follow-up notices. Common fields include rate_of_interest (used for interest calculations), dunning_fee (fixed charges), and overdue_payments (list of unpaid invoices). It supports automated reminders, custom letter templates, and calculation of total outstanding balances."
},
 "POS Invoice": {
    "module": "Accounts",
    "description": "Used to generate real-time invoices at retail checkout (point of sale), including payment capture and inventory adjustment.",
    "fields": {
      "title": "Display title for the invoice.",
      "naming_series": "Pattern for generating invoice numbers.",
      "customer": "Linked customer making the purchase.",
      "customer_name": "Full name of the customer.",
      "tax_id": "Tax registration ID of the customer.",
      "pos_profile": "POS profile settings used during billing.",
      "consolidated_invoice": "Whether this is a grouped invoice.",
      "is_pos": "Marks this invoice as a point-of-sale type.",
      "is_return": "Indicates if this is a return invoice.",
      "update_billed_amount_in_sales_order": "Whether sales order totals are updated.",
      "company": "Company generating the invoice.",
      "posting_date": "Date of invoice entry.",
      "posting_time": "Time of invoice entry.",
      "due_date": "Date when payment is due.",
      "amended_from": "Previous version, if this is amended.",
      "return_against": "Reference invoice for returns.",
      "project": "Project linked to the sale.",
      "cost_center": "Cost center where the sale is recorded.",
      "po_no": "Customer’s purchase order number.",
      "po_date": "Date of the customer PO.",
      "customer_address": "Address of the buyer.",
      "contact_person": "Contact person for this sale.",
      "contact_mobile": "Mobile number of the contact.",
      "shipping_address_name": "Name of the delivery address.",
      "shipping_address": "Address where goods are delivered.",
      "company_address": "Address of the seller’s company.",
      "currency": "Currency used in the invoice.",
      "conversion_rate": "Rate to convert to base currency.",
      "selling_price_list": "Price list used for item rates.",
      "update_stock": "Indicates if stock should be updated.",
      "scan_barcode": "Scan-to-add feature for products.",
      "total_qty": "Total quantity of items sold.",
      "total": "Total billed amount before tax/discount.",
      "net_total": "Amount after applying item discounts.",
      "taxes_and_charges": "Taxes and charges template.",
      "total_taxes_and_charges": "Total tax amount applied.",
      "loyalty_points": "Loyalty points redeemed in the invoice.",
      "loyalty_amount": "Cash equivalent of loyalty points.",
      "apply_discount_on": "Discount based on net total or grand total.",
      "discount_amount": "Overall discount value applied.",
      "grand_total": "Final amount after tax and discount.",
      "rounding_adjustment": "Rounding difference, if any.",
      "in_words": "Invoice total written in words.",
      "total_advance": "Total advance payments adjusted.",
      "outstanding_amount": "Remaining amount to be paid.",
      "advances": "Advance payment details applied.",
      "cash_bank_account": "Cash/bank account receiving payment.",
      "base_paid_amount": "Amount paid in base currency.",
      "paid_amount": "Amount received at POS.",
      "write_off_amount": "Amount written off (unpaid).",
      "write_off_account": "Account for recording the write-off.",
      "write_off_cost_center": "Cost center related to write-off.",
      "tc_name": "Terms and conditions template name.",
      "terms": "Detailed sale terms and conditions.",
      "letter_head": "Letterhead used in the print format.",
      "language": "Preferred language for printing.",
      "auto_repeat": "Linked recurring billing setting.",
      "update_auto_repeat_reference": "Whether reference links are updated.",
      "remarks": "General comments or notes.",
      "sales_partner": "Partner associated with this sale.",
      "commission_rate": "Commission percentage applied.",
      "total_commission": "Total commission value calculated."
    },
    "meta_text": "Used at retail checkout to create sales invoices instantly. Tracks payments, stock, customer details, and loyalty points while supporting return handling and inter-company accounting."
  },

  "Delivery Note": {
    "module": "Stock",
    "description": "Handles physical delivery of goods to customers, updating stock and capturing delivery-related data.",
    "fields": {
      "title": "Title of the delivery note.",
      "naming_series": "Series pattern for auto-generating IDs.",
      "customer": "Customer receiving the goods.",
      "tax_id": "Customer’s tax ID for compliance.",
      "customer_name": "Full name of the customer.",
      "posting_date": "Date of goods delivery.",
      "posting_time": "Time when delivery was logged.",
      "company": "Company delivering the goods.",
      "amended_from": "Original document being amended.",
      "is_return": "Indicates a goods return.",
      "issue_credit_note": "If a credit note is issued for the return.",
      "return_against": "Reference to original delivery note.",
      "cost_center": "Cost center used for stock value tracking.",
      "project": "Associated project.",
      "currency": "Currency used in the transaction.",
      "conversion_rate": "Currency conversion rate to base.",
      "selling_price_list": "Price list used for rate determination.",
      "scan_barcode": "Allows item scanning during delivery.",
      "pick_list": "Reference pick list used for item picking.",
      "set_warehouse": "Default warehouse for item dispatch.",
      "items": "List of goods being delivered.",
      "total_qty": "Sum of all quantities.",
      "total_net_weight": "Total weight of all items.",
      "base_total": "Total before taxes in base currency.",
      "base_net_total": "Total after discount but before taxes.",
      "total": "Invoice total in document currency.",
      "net_total": "Discounted total in document currency.",
      "tax_category": "Tax category applicable to this sale.",
      "taxes_and_charges": "Template of taxes applied.",
      "shipping_rule": "Predefined shipping configuration.",
      "incoterm": "International trade term (e.g., FOB, CIF).",
      "taxes": "List of applied tax entries.",
      "base_total_taxes_and_charges": "Base currency value of taxes.",
      "total_taxes_and_charges": "Currency total of taxes.",
      "grand_total": "Invoice total including all charges.",
      "rounding_adjustment": "Adjustment added to match rounding.",
      "rounded_total": "Final amount after rounding.",
      "apply_discount_on": "Indicates if discount is applied on net or grand total.",
      "base_discount_amount": "Discount amount in base currency.",
      "discount_amount": "Total discount amount.",
      "packing_list": "List of packing instructions.",
      "packed_items": "Items that are already packed.",
      "product_bundle_help": "Info on bundled items.",
      "pricing_rules": "Pricing rules used for calculation.",
      "customer_address": "Address of the customer.",
      "contact_person": "Contact person at the customer site.",
      "shipping_address_name": "Shipping address identifier.",
      "shipping_address": "Actual shipping address.",
      "dispatch_address_name": "Dispatch origin name.",
      "dispatch_address": "Dispatch origin address.",
      "company_address": "Company’s registered address.",
      "company_address_display": "Formatted display address.",
      "company_contact_person": "Point of contact at the company.",
      "tc_name": "Terms & conditions name.",
      "terms": "Detailed terms of transaction.",
      "status": "Document status.",
      "transporter": "Transporter used for logistics.",
      "driver": "Driver responsible for shipment.",
      "lr_no": "Lorry receipt number.",
      "vehicle_no": "Vehicle used for delivery.",
      "transporter_name": "Name of the transport company.",
      "driver_name": "Name of the driver.",
      "lr_date": "Date of lorry receipt.",
      "po_no": "Customer PO number for the delivery.",
      "sales_partner": "Partner involved in the delivery.",
      "commission_rate": "Rate of commission offered.",
      "total_commission": "Total value of partner commission.",
      "sales_team": "Sales team involved.",
      "auto_repeat": "Recurring setting if delivery is repeated.",
      "letter_head": "Letterhead used for printed version.",
      "print_without_amount": "Whether to hide pricing in print.",
      "group_same_items": "Indicates grouping identical items.",
      "language": "Preferred language.",
      "is_internal_customer": "Internal customer toggle.",
      "represents_company": "Alternate company on behalf of which delivery is made.",
      "inter_company_reference": "Reference for intercompany transaction.",
      "customer_group": "Group classification of the customer.",
      "territory": "Geographical region for delivery.",
      "source": "Source of the sale (e.g., Web, Campaign).",
      "campaign": "Linked marketing campaign.",
      "instructions": "Delivery instructions or notes."
    },
    "meta_text": "Helps track outbound delivery, link it to orders, manage inventory deduction, apply taxes, and log transporter and shipment details. Essential for order fulfillment workflows."
  },

  "Quotation": {
    "module": "Selling",
    "description": "Creates formal price offers to customers before sales orders are finalized.",
    "fields": {
      "title": "Label for the quotation.",
      "quotation_to": "Whether this quotation is for a Customer or Lead.",
      "party_name": "Customer or lead receiving the quotation.",
      "transaction_date": "Date when the quote is issued.",
      "valid_till": "Expiration date of the offer.",
      "company": "Company making the offer.",
      "currency": "Quotation currency.",
      "conversion_rate": "Exchange rate to base currency.",
      "selling_price_list": "Price list used in this quotation.",
      "items": "List of quoted products/services.",
      "total_qty": "Total number of items.",
      "total": "Total amount before discount and taxes.",
      "net_total": "Amount after discount, before tax.",
      "tax_category": "Tax category applied.",
      "taxes_and_charges": "Tax template used.",
      "shipping_rule": "Shipping settings for this quote.",
      "incoterm": "International shipping responsibility (e.g., FOB).",
      "grand_total": "Final total including tax and charges.",
      "rounded_total": "Grand total after rounding.",
      "discount_amount": "Total discount applied.",
      "payment_terms_template": "Terms template selected.",
      "tc_name": "Terms and conditions name.",
      "terms": "Details of sales terms.",
      "customer_address": "Customer's address.",
      "contact_person": "Contact person at the customer end.",
      "shipping_address": "Where goods will be delivered.",
      "status": "Quotation status.",
      "customer_group": "Group the customer belongs to.",
      "territory": "Sales territory.",
      "campaign": "Marketing campaign this quotation is part of.",
      "source": "How this lead/quote originated.",
      "opportunity": "Opportunity this quote is tied to."
    },
    "meta_text": "Facilitates sales by allowing sales reps to share quotes with buyers. Tracks validity, pricing, taxes, and associated CRM activity like leads and opportunities."
  },

  "Sales Invoice Item": {
    "module": "Accounts",
    "description": "Represents individual line items in a sales invoice, showing what was sold and how much it cost.",
    "fields": {
      "item_code": "Unique identifier of the item.",
      "item_name": "Name of the item sold.",
      "description": "Detailed description shown on the invoice.",
      "item_group": "Category of the item.",
      "brand": "Item brand.",
      "qty": "Quantity of item sold.",
      "stock_uom": "Stock unit of measure.",
      "uom": "Unit of measure for sale.",
      "conversion_factor": "Factor between UOM and stock UOM.",
      "price_list_rate": "Rate from the price list.",
      "discount_percentage": "Percentage discount applied.",
      "discount_amount": "Flat amount discounted.",
      "rate": "Final sale rate per unit.",
      "amount": "Total before taxes (qty × rate).",
      "net_rate": "Rate after all discounts.",
      "net_amount": "Amount after discounts.",
      "base_net_rate": "Net rate in base currency.",
      "base_net_amount": "Net total in base currency.",
      "income_account": "Account where income is booked.",
      "cost_center": "Cost center associated with sale.",
      "project": "Project linked to the sale.",
      "warehouse": "Stock warehouse used.",
      "batch_no": "Batch number of item (if applicable).",
      "serial_no": "Serial number(s) associated.",
      "item_tax_template": "Item-specific tax rule.",
      "item_tax_rate": "Applied tax rate.",
      "is_free_item": "Marks item as free.",
      "delivered_by_supplier": "If item was shipped by supplier.",
      "delivery_note": "Delivery note reference.",
      "sales_order": "Sales order reference.",
      "purchase_order": "Customer PO reference."
    },
    "meta_text": "Tracks what was sold in an invoice, including pricing, discounts, taxes, and inventory info. Used for accounting, reporting, and compliance."
  },
  "Work Order Item": {
    "module": "Manufacturing",
    "description": "Tracks individual items required for production in a work order, including quantities, warehouse availability, and consumption.",
    "fields": {
      "operation": "The manufacturing operation this item is linked to.",
      "item_code": "Code of the component item required.",
      "source_warehouse": "Warehouse from where the item will be drawn.",
      "item_name": "Name of the item.",
      "description": "Details or specifications of the item.",
      "allow_alternative_item": "Marks if substitute items are permitted.",
      "include_item_in_manufacturing": "Whether to consider this item in production costing.",
      "required_qty": "Quantity required for the work order.",
      "stock_uom": "Unit of measure used for stock tracking.",
      "rate": "Unit cost of the item.",
      "amount": "Total cost based on quantity and rate.",
      "transferred_qty": "Amount already moved to production floor.",
      "consumed_qty": "Quantity actually consumed in production.",
      "returned_qty": "Quantity returned from work-in-progress.",
      "available_qty_at_source_warehouse": "Stock available at source warehouse.",
      "available_qty_at_wip_warehouse": "Stock available at work-in-progress warehouse."
    },
    "meta_text": "Used to manage BOM components within a work order. Tracks how much material is needed, transferred, used, and returned, helping ensure accurate production and stock reconciliation."
  },
  "Code List": {
    "module": "EDI",
    "description": "Stores standardized lists of codes used in external integrations and EDI workflows.",
    "fields": {
      "title": "Title of the code list.",
      "canonical_uri": "Unique identifier URI for referencing.",
      "url": "Web link for accessing or viewing the code list.",
      "default_common_code": "Default code used when no specific mapping exists.",
      "version": "Version number of this code list.",
      "publisher": "Organization or standard body publishing the codes.",
      "publisher_id": "Unique identifier for the publisher.",
      "description": "Explanation of the code list's purpose."
    },
    "meta_text": "Centralized store for standard codes used across electronic documents. Helps ensure interoperability between systems and traceability of data formats."
  },

  "Raven Workspace Member": {
    "module": "Raven",
    "description": "Defines user roles and workspace access for Raven collaboration environments.",
    "fields": {
      "user": "ERP system user who is a member of the workspace.",
      "is_admin": "Indicates if the user has admin privileges.",
      "workspace": "Name or reference to the Raven workspace."
    },
    "meta_text": "Controls user permissions in collaborative chat workspaces. Supports team assignments and role-based visibility."
  },

  "Purchase Receipt": {
    "module": "Stock",
    "description": "Logs receipt of goods or services from suppliers, updating stock and procurement records.",
    "fields": {
      "supplier": "Vendor from whom the items are received.",
      "supplier_name": "Full name of the supplier.",
      "supplier_delivery_note": "Reference to the supplier's delivery document.",
      "subcontracting_receipt": "Links to related subcontracting document, if applicable.",
      "posting_date": "Date when goods were received.",
      "posting_time": "Time of receipt entry.",
      "company": "Company receiving the goods.",
      "apply_putaway_rule": "Whether automatic placement rules are applied.",
      "is_return": "Indicates if this is a return document.",
      "return_against": "Original document against which return is made.",
      "cost_center": "Cost center receiving the goods.",
      "project": "Linked project for the receipt.",
      "currency": "Transaction currency.",
      "conversion_rate": "Rate to convert to base currency.",
      "buying_price_list": "Price list used for valuation.",
      "price_list_currency": "Currency of the price list.",
      "sec_warehouse": "Secondary warehouse for backup or overflow.",
      "scan_barcode": "Enables barcode scanning during entry.",
      "set_warehouse": "Default warehouse to store received goods.",
      "set_from_warehouse": "Warehouse from which goods are returned.",
      "items": "List of received items.",
      "total_qty": "Sum of item quantities received.",
      "total_net_weight": "Total weight of all items.",
      "base_total": "Base currency total before taxes.",
      "total": "Total in document currency.",
      "net_total": "Amount after discounts, before taxes.",
      "tax_withholding_net_total": "Taxable amount after deductions.",
      "taxes_and_charges": "Applied tax template.",
      "base_taxes_and_charges": "Tax amount in base currency.",
      "grand_total": "Final total after all charges.",
      "rounding_adjustment": "Rounding difference, if any.",
      "rounded_total": "Total after rounding adjustment.",
      "in_words": "Grand total written in words.",
      "apply_discount_on": "Rule for applying discounts (Net/Grand total).",
      "base_discount_amount": "Discount in base currency.",
      "discount_amount": "Discount value applied.",
      "supplier_address": "Address of the supplier.",
      "contact_person": "Supplier’s contact person.",
      "shipping_address": "Address where goods were delivered.",
      "billing_address": "Address used for billing.",
      "tc_name": "Terms and conditions template.",
      "terms": "Full list of terms and conditions.",
      "status": "Current status of the document.",
      "subscription_detail": "Linked recurring configuration.",
      "auto_repeat": "If document is part of recurring setup.",
      "printing_settings": "Settings related to print format.",
      "lr_no": "Logistics receipt number.",
      "lr_date": "Date on logistics receipt.",
      "instructions": "Notes or guidance for warehouse or finance team.",
      "other_details": "Miscellaneous comments."
    },
    "meta_text": "Used to acknowledge goods receipt, trigger inventory updates, and prepare for purchase invoice generation. Supports full warehouse, tax, and return handling."
  },

  "Newsletter": {
    "module": "Email",
    "description": "Creates email campaigns or periodic newsletters sent to subscribers, supporting scheduling and performance tracking.",
    "fields": {
      "email_sent_at": "Timestamp of when the email was sent.",
      "total_recipients": "Number of people who received it.",
      "total_views": "Number of times the email was opened.",
      "email_sent": "Marks whether the campaign was sent.",
      "sender_name": "Name shown as the sender.",
      "sender_email": "Sender’s email address.",
      "send_from": "Email account used to send the newsletter.",
      "recipients": "List of target emails or contacts.",
      "email_group": "Email group used for campaign.",
      "subject": "Subject line of the email.",
      "newsletter_content": "Main content of the newsletter.",
      "content_type": "Format of content (e.g., HTML, Markdown).",
      "message": "Full message body (raw format).",
      "message_md": "Message in Markdown format.",
      "message_html": "HTML-rendered message.",
      "campaign": "Marketing campaign this belongs to.",
      "attachments": "Files attached to the email.",
      "send_unsubscribe_link": "Adds unsubscribe link to the email.",
      "send_webview_link": "Includes a web version view link.",
      "scheduled_to_send": "Scheduled time for sending.",
      "schedule_sending": "Whether sending is scheduled.",
      "schedule_send": "Timestamp for actual send event.",
      "published": "Marks this newsletter as publicly visible.",
      "route": "Public URL route for the newsletter."
    },
    "meta_text": "Used to broadcast email content to customers or leads, with capabilities like analytics, scheduling, A/B testing, and HTML formatting."
  },
  "Common Code": {
    "module": "EDI",
    "description": "Stores reusable external reference codes for consistent mapping across EDI and ERP documents.",
    "fields": {
      "code_list": "Linked master code list that defines this code set.",
      "title": "Title or display label of the code.",
      "common_code": "Standardized code value used in external documents.",
      "description": "Clarifies the business meaning or purpose of this code.",
      "additional_data": "Any extra context or metadata for integration.",
      "applies_to": "List of documents, modules, or systems where this code applies."
    },
    "meta_text": "Manages standardized code mappings (e.g., region, vendor types) used for electronic data interchange. Ensures compatibility and unambiguous referencing between ERP and external systems."
  },

  "Payment Entry Deduction": {
    "module": "Accounts",
    "description": "Records any deductions such as discounts or exchange differences during payment processing.",
    "fields": {
      "account": "GL account where the deduction is posted.",
      "cost_center": "Cost center responsible for the deduction.",
      "amount": "Amount of the deduction applied.",
      "is_exchange_gain_loss": "Flag to indicate if this is a currency fluctuation adjustment.",
      "description": "Business justification or note for the deduction."
    },
    "meta_text": "Used in payment entries to capture adjustments like early-payment discounts or exchange differences. Ensures all deductions are properly booked and traceable in financial records."
  },

  "Advance Payment Ledger Entry": {
    "module": "Accounts",
    "description": "Tracks advance payments linked to accounting vouchers for reconciliation and reporting.",
    "fields": {
      "company": "Company to which this advance is related.",
      "voucher_type": "Type of the voucher where the advance originates.",
      "voucher_no": "Voucher number of the advance payment.",
      "against_voucher_type": "Type of document this advance is matched against.",
      "against_voucher_no": "Reference number of the matched document.",
      "amount": "Amount of the advance recorded.",
      "currency": "Currency in which the advance was paid.",
      "event": "Context or purpose (e.g., On Invoice, On Payment)."
    },
    "meta_text": "Enables structured reconciliation of advance payments against sales or purchase invoices. Essential for accurate ledgers, aging reports, and advance clearing."
  },

  "System Settings": {
    "module": "Core",
    "description": "Configures global ERP behavior, covering localization, security, email, backups, login methods, and user policy settings.",
    "fields": {
      "localization": "General regional and language settings.",
      "app_name": "Display name for the ERP application.",
      "country": "Country where the system is operated.",
      "language": "Default language used in the interface.",
      "time_zone": "System-wide time zone configuration.",
      "currency": "Default operational currency.",
      "enable_onboarding": "Show onboarding flows for new users.",
      "setup_complete": "Marks if initial ERP setup is done.",
      "disable_document_sharing": "Disables document-level sharing options.",
      "date_and_number_format": "Combined format control for all number/date display.",
      "date_format": "Format for displaying dates (e.g., dd-mm-yyyy).",
      "time_format": "24-hr or 12-hr time format.",
      "number_format": "Thousands/decimal separator format.",
      "use_number_format_from_currency": "Use currency-specific formatting for numbers.",
      "first_day_of_the_week": "Day considered as the start of the week (e.g., Monday).",
      "float_precision": "Decimal precision for float values.",
      "currency_precision": "Decimal precision for currency values.",
      "rounding_method": "System-wide method for rounding decimals.",
      "permissions": "Default permission scheme for documents.",
      "apply_strict_user_permissions": "Force strict enforcement of user permissions.",
      "allow_older_web_view_links": "Allow access to outdated document web links.",
      "security": "Master flag for toggling secure configurations.",
      "session_expiry": "Timeout duration for user login sessions.",
      "document_share_key_expiry": "How long shared document links remain valid.",
      "deny_multiple_sessions": "Blocks concurrent sessions for the same user.",
      "disable_user_pass_login": "Disable password-based logins.",
      "allow_login_using_mobile_number": "Permit login via mobile number.",
      "allow_login_using_user_name": "Permit login using username instead of email.",
      "login_with_email_link": "Allow login via emailed one-time links.",
      "login_with_email_link_expiry": "How long login links are valid.",
      "rate_limit_email_link_login": "Prevent spamming login link requests.",
      "allow_consecutive_login_attempts": "Permit rapid retry of login attempts.",
      "allow_login_after_fail": "Delay after failed login attempts.",
      "enable_two_factor_auth": "Toggle 2FA for added security.",
      "bypass_2fa_for_retricted_ip_users": "Allow login without 2FA on certain networks.",
      "bypass_restrict_ip_check_if_2fa_enabled": "Ignore IP restrictions if 2FA is active.",
      "two_factor_method": "Selected 2FA provider (e.g., OTP, Email).",
      "lifespan_qrcode_image": "Time a 2FA QR code remains valid.",
      "otp_issuer_name": "Label for 2FA app like Google Authenticator.",
      "logout_on_password_reset": "Force logout if password is reset.",
      "force_user_to_reset_password": "Policy to enforce user password changes.",
      "reset_password_link_expiry_duration": "Link expiry time for password resets.",
      "password_reset_limit": "Max reset attempts in a day.",
      "enable_password_policy": "Enable strength checks for user passwords.",
      "minimum_password_score": "Numeric strength score threshold for passwords.",
      "email_footer_address": "Footer content used in system emails.",
      "email_retry_limit": "Maximum email retries if sending fails.",
      "disable_standard_email_footer": "Option to turn off ERP default email footer.",
      "hide_footer_in_auto_email_reports": "Skip footers in automated reports.",
      "attach_view_link": "Attach public document link in emails.",
      "store_attached_pdf_document": "Keep a copy of sent PDFs for reference.",
      "welcome_email_template": "Template for welcome emails.",
      "reset_password_template": "Email format for password reset.",
      "max_file_size": "Upload limit per file (in MB).",
      "allow_guests_to_upload_files": "Enable file uploads for guest users.",
      "force_web_capture_mode_for_uploads": "Force camera mode for uploads on web.",
      "strip_exif_metadata_from_uploaded_images": "Remove metadata from image uploads for privacy.",
      "allowed_file_extensions": "Permitted file types (e.g., .pdf, .jpg).",
      "default_app": "Default module shown on login.",
      "disable_system_update_notification": "Turn off update alerts.",
      "disable_change_log_notification": "Hide change log popups post update.",
      "sec_backup_limit": "Retention policy for secondary backups.",
      "backup_limit": "Limit on number of total backups stored.",
      "encrypt_backup": "Encrypt backup files for added security.",
      "max_auto_email_report_per_user": "Limit for automated reports per user.",
      "background_workers": "Number of workers handling async jobs.",
      "enable_scheduler": "Toggle the system job scheduler.",
      "dormant_days": "Inactive days before account is considered dormant.",
      "allow_error_traceback": "Enable traceback debugging in logs.",
      "enable_telemetry": "Allow anonymous usage statistics collection.",
      "link_field_results_limit": "Limit on link field auto-suggestions."
    },
    "meta_text": "Controls global ERP settings. Manages localization, backups, login methods, security policies, email behavior, and usage telemetry—making it the core hub for administrators to customize ERP behavior system-wide."
  },
  "Bank Account": {
    "module": "Accounts",
    "description": "Manages financial bank accounts used by the company, including bank identifiers, party references, and integration details.",
    "fields": {
      "account_name": "Label or display name of the bank account.",
      "account": "Linked general ledger account representing this bank.",
      "bank": "Bank where the account is held.",
      "account_type": "Type of account (e.g., Savings, Current, Credit).",
      "account_subtype": "Further classification, if applicable (e.g., Payroll, Settlement).",
      "disabled": "Marks if the account is inactive or deprecated.",
      "is_default": "Flags this as the default account for transactions.",
      "is_company_account": "Indicates if the account belongs to the company directly.",
      "company": "The company this bank account is associated with.",
      "party_type": "The type of external party if not company-owned (e.g., Customer, Supplier).",
      "party": "The party linked to the bank account.",
      "iban": "International Bank Account Number for cross-border payments.",
      "branch_code": "Code identifying the specific branch of the bank.",
      "bank_account_no": "Primary account number for the bank.",
      "address_and_contact": "Reference to the associated address/contact document.",
      "address_html": "Rendered address in HTML format.",
      "contact_html": "Rendered contact details in HTML format.",
      "integration_id": "External system ID for integrations (e.g., banking APIs).",
      "last_integration_date": "Date of last successful sync with external system.",
      "mask": "Masked version of the account number for privacy (e.g., ****1234)."
    },
    "meta_text": "The 'Bank Account' doctype tracks and stores company and third-party bank account details. It's essential for enabling accurate financial operations, including reconciliation, payment processing, and integration with external banking systems. Key fields include IBAN, account_type, company, and integration_id."
  },

  "Payment Reconciliation Payment": {
    "module": "Accounts",
    "description": "Links incoming or outgoing payments to their matching invoices or references during reconciliation.",
    "fields": {
      "reference_type": "Document type being reconciled (e.g., Sales Invoice, Purchase Invoice).",
      "reference_name": "Unique ID or name of the document being matched.",
      "posting_date": "Date of the transaction used in the journal.",
      "is_advance": "Indicates whether this payment is an advance.",
      "reference_row": "Row reference if linked to a specific line item in the source document.",
      "amount": "The payment amount being reconciled.",
      "difference_amount": "Any unmatched amount remaining after reconciliation.",
      "remarks": "Optional comments or reconciliation notes.",
      "currency": "Currency of the reconciled amount.",
      "exchange_rate": "Currency exchange rate used for valuation.",
      "cost_center": "Cost center to which this payment activity belongs."
    },
    "meta_text": "The 'Payment Reconciliation Payment' doctype is used during the reconciliation process to associate actual payments with invoices or advances. It supports advance payments, multi-currency transactions, and detailed financial reporting. Fields like reference_type, amount, and exchange_rate are essential for proper ledger matching and compliance."
  },
  "Purchase Invoice Item": {
    "module": "Accounts",
    "description": "Captures individual item-level purchase details within a purchase invoice, including quantity, pricing, taxes, and accounting impact.",
    "fields": {
      "item_code": "Unique identifier for the purchased item.",
      "product_bundle": "Indicates if the item is part of a product bundle.",
      "item_name": "Name of the item as displayed.",
      "description": "Detailed description of the item or service.",
      "item_group": "Category or classification of the item.",
      "brand": "Brand associated with the product.",
      "received_qty": "Quantity received from supplier.",
      "qty": "Quantity being invoiced.",
      "uom": "Unit of measure used for billing.",
      "conversion_factor": "Multiplier between stock UOM and invoice UOM.",
      "stock_uom": "Unit of measure used for inventory management.",
      "price_list_rate": "Item rate as per the price list.",
      "base_price_list_rate": "Price list rate in base currency.",
      "margin_type": "Type of margin applied (e.g., percentage, amount).",
      "rate_with_margin": "Rate after applying margin.",
      "discount_percentage": "Discount applied as a percentage.",
      "discount_amount": "Total discount applied.",
      "rate": "Final unit rate after discount and margin.",
      "amount": "Total amount = rate × qty.",
      "item_tax_template": "Template defining applicable item-level taxes.",
      "base_rate": "Unit rate in base currency.",
      "base_amount": "Amount in base currency.",
      "is_free_item": "Marks whether this item is free of charge.",
      "net_rate": "Rate after discount and before taxes.",
      "net_amount": "Net total amount before taxes.",
      "base_net_rate": "Net rate in base currency.",
      "base_net_amount": "Net amount in base currency.",
      "valuation_rate": "Inventory valuation rate per unit.",
      "item_tax_amount": "Amount of tax applied to this item.",
      "warehouse": "Warehouse receiving the stock (if applicable).",
      "quality_inspection": "Linked quality inspection document.",
      "serial_no": "Serial number(s) for tracking.",
      "batch_no": "Batch number for stock tracking.",
      "manufacturer": "Manufacturer or vendor name.",
      "expense_account": "GL account charged for this item.",
      "wip_composite_asset": "Whether linked to WIP in asset accounting.",
      "is_fixed_asset": "Indicates if this is a capital item.",
      "asset_location": "Where the asset is located after purchase.",
      "asset_category": "Category to which the fixed asset belongs.",
      "deferred_expense_account": "Account used for deferred expense handling.",
      "service_start_date": "Start of the service period (if applicable).",
      "service_end_date": "End of the service period (if applicable).",
      "reference": "Custom external or internal reference field.",
      "item_tax_rate": "Specific tax rate applied to the item.",
      "bom": "Bill of materials used for bundled or assembly items.",
      "include_exploded_items": "Flag to include child items of a bundle.",
      "purchase_invoice_item": "Self-reference for split items.",
      "purchase_order": "Linked Purchase Order document.",
      "purchase_receipt": "Linked Purchase Receipt document.",
      "sales_invoice_item": "Cross-reference with sales if applicable.",
      "material_request": "Linked Material Request document.",
      "material_request_item": "Specific item row in the material request.",
      "weight_per_unit": "Weight of a single unit of the item.",
      "total_weight": "Cumulative weight of the quantity purchased.",
      "weight_uom": "Weight unit of measurement.",
      "cost_center": "Cost center to which this item is charged."
    },
    "meta_text": "Tracks item-wise billing in a purchase invoice. Includes quantity, pricing, UOM conversion, discounts, tax calculations, warehouse details, and references to upstream documents like Purchase Orders and Receipts. Essential for granular accounting and stock updates."
  },

  "Webhook": {
    "module": "Integrations",
    "description": "Triggers automated HTTP requests to external systems when events occur on ERPNext documents.",
    "fields": {
      "webhook_doctype": "Target doctype for which the webhook is set up.",
      "webhook_docevent": "Document event that triggers the webhook (e.g., on_submit, on_update).",
      "enabled": "Status flag to activate or deactivate the webhook.",
      "condition": "Optional condition (Python expression) that determines execution.",
      "request_url": "URL where the webhook data should be sent.",
      "is_dynamic_url": "If enabled, constructs the URL dynamically using document data.",
      "timeout": "Request timeout duration in seconds.",
      "background_jobs_queue": "Queue used for async background processing.",
      "request_method": "HTTP method to use (e.g., POST, PUT).",
      "request_structure": "Format of the payload (e.g., JSON, Form).",
      "enable_security": "Toggle for authentication and signing headers.",
      "webhook_secret": "Secret key used to sign the request for security validation.",
      "webhook_headers": "Custom headers to include in the webhook request.",
      "webhook_data": "Data or fields to include in the payload.",
      "webhook_json": "Raw JSON payload (used in advanced scenarios).",
      "meets_condition": "Boolean flag indicating if condition was met (used in logs).",
      "preview_request_body": "Payload preview for testing and validation."
    },
    "meta_text": "Enables outbound data flow by sending payloads to external apps when document events occur in ERPNext. Supports secure RESTful calls, custom headers, dynamic URLs, condition-based firing, and async job handling."
  },

  "Raven User": {
    "module": "Raven",
    "description": "Handles identity, preferences, and bot roles for users interacting within the Raven messaging platform.",
    "fields": {
      "type": "User type such as human, bot, or system.",
      "user": "ERPNext user linked to this Raven user.",
      "bot": "Indicates if this profile belongs to a bot.",
      "enabled": "Status of the user for Raven.",
      "full_name": "Full display name of the user.",
      "first_name": "First name used in profile.",
      "user_image": "Profile picture used in chat.",
      "pinned_channels": "Channels that are pinned for quick access.",
      "availability_status": "User's current presence (e.g., online, away).",
      "custom_status": "Optional custom status (e.g., In a meeting).",
      "chat_style": "Theme or visual preference for messaging UI."
    },
    "meta_text": "Used to configure a person's or bot's presence in the Raven chat system. It includes chat preferences, current status, image, and access management for Raven features like channels and bots."
  },
  "Web Form": {
    "module": "Website",
    "description": "Creates customizable website-based forms to collect structured user input and submit data into ERPNext documents.",
    "fields": {
      "title": "The displayed name of the form.",
      "route": "Web URL where the form is accessed.",
      "published": "Indicates if the form is visible publicly.",
      "doc_type": "Target ERPNext doctype where form data is saved.",
      "module": "Module where the form belongs.",
      "is_standard": "Flag for system-defined forms.",
      "introduction_text": "Text shown to users before the form.",
      "web_form_fields": "Structure and configuration of input fields.",
      "anonymous": "Allow users without login to submit.",
      "login_required": "Restrict form to logged-in users only.",
      "apply_document_permissions": "Apply standard doctype permission rules.",
      "allow_edit": "Allow users to edit submitted records.",
      "allow_multiple": "Permit multiple submissions from a user.",
      "allow_delete": "Enable record deletion by the user.",
      "allow_incomplete": "Allow partial form save.",
      "allow_comments": "Enable user comments on the form.",
      "allow_print": "Show print option after submission.",
      "print_format": "Template used for print layout.",
      "max_attachment_size": "File size limit for uploads.",
      "show_attachments": "Display attached files.",
      "condition_description": "Explanation of conditional display logic.",
      "condition_json": "Conditional logic in JSON format.",
      "list_title": "Title used for listing submissions.",
      "list_columns": "Columns to display in listing.",
      "show_sidebar": "Toggle visibility of sidebar in UI.",
      "website_sidebar": "Assigned sidebar element.",
      "button_label": "Submit button label.",
      "banner_image": "Header image for branding.",
      "success_title": "Success screen heading.",
      "success_url": "Redirect URL after submission.",
      "success_message": "Thank-you or confirmation message.",
      "meta_title": "SEO page title.",
      "meta_description": "SEO description for the form page.",
      "meta_image": "Social media/SEO preview image.",
      "client_script": "Custom JS to run on form events.",
      "custom_css": "Custom styling rules for form layout."
    },
    "meta_text": "Web Form is used to create customizable public or internal-facing forms in ERPNext that collect structured input and map it to target doctypes like Lead, Contact, or Support Ticket. You can set field behavior, permissions, route, and success handling, supporting use cases like surveys, registrations, or issue reporting."
  },

  "Raven Message Action Fields": {
    "module": "Raven Integrations",
    "description": "Defines the dynamic input fields shown as part of message actions triggered in Raven bots or interactive chat messages.",
    "fields": {
      "fieldname": "Internal name of the field.",
      "label": "Display name of the field.",
      "helper_text": "Tooltip or UI hint shown next to the field.",
      "is_required": "Marks whether user input is mandatory.",
      "type": "Data type (e.g., Text, Select, Date).",
      "options": "Dropdown choices or autocomplete options.",
      "default_value_type": "Type of default value (e.g., fixed, dynamic).",
      "default_value": "Pre-filled value if not entered by user."
    },
    "meta_text": "Raven Message Action Fields define how users interact with messages or bot prompts. These input definitions enable Raven to gather structured responses for downstream automation or logic execution."
  },

  "Raven Pinned Messages": {
    "module": "Raven",
    "description": "Tracks and stores references to important chat messages that users pin in Raven channels for visibility.",
    "fields": {
      "message_id": "Unique ID of the pinned chat message."
    },
    "meta_text": "Pinned Messages are a collaboration feature in Raven that lets users mark critical messages for quick access. It helps organize important updates or discussions across chat threads."
  },

  "Unreconcile Payment": {
    "module": "Accounts",
    "description": "Captures payments that have not yet been matched against a specific invoice or voucher, used for reconciliation tracking.",
    "fields": {
      "company": "Company associated with the payment.",
      "voucher_type": "Type of document the payment came from.",
      "voucher_no": "Document number linked to the transaction.",
      "allocations": "Pending allocations or unmatched payment lines."
    },
    "meta_text": "Used for handling advance payments or partial reconciliations where a payment is received but not linked to any specific invoice yet. Enables finance teams to monitor unallocated balances."
  },

  "DocField": {
    "module": "Core",
    "description": "Defines the schema and properties of individual fields used across ERPNext doctypes.",
    "fields": {
      "label": "Field label as seen by users.",
      "fieldtype": "Data type (e.g., Data, Link, Table).",
      "fieldname": "Unique backend identifier for the field.",
      "required": "Whether the field is mandatory.",
      "options": "Configuration options or linked doctype.",
      "default": "Default value used for new entries.",
      "description": "Explanation or help text for the field."
    },
    "meta_text": "DocField defines how each input field behaves inside a doctype. It includes validation, labels, types, and backend fieldnames. Used in customization, schema definitions, and low-code interfaces."
  },

  "Raven AI Function Params": {
    "module": "Raven AI",
    "description": "Specifies structured parameters used in AI logic for Raven bots or functions, including type and default values.",
    "fields": {
      "fieldname": "Parameter name.",
      "child_table_name": "Link to child table if param is nested.",
      "required": "Indicates if parameter is mandatory.",
      "do_not_ask_ai": "Prevents prompting for this value via AI.",
      "default_value": "Default fallback value if not supplied.",
      "options": "Available options or lookup list.",
      "type": "Expected data type (e.g., string, int, list).",
      "description": "Purpose or explanation of the parameter."
    },
    "meta_text": "AI Function Params configure arguments used by Raven AI logic, making prompts dynamic, secure, and reusable. This structure is essential for parameterized bots or integrations that call business logic."
  },

  "Customize Form Field": {
    "module": "Custom",
    "description": "Enables admins to add or modify fields on ERPNext forms without altering core doctypes, including label, behavior, and visibility settings.",
    "fields": {
      "is_system_generated": "Whether the field was auto-created.",
      "label": "UI label displayed to users.",
      "fieldtype": "Type of field (e.g., Select, Check).",
      "fieldname": "Backend name for this custom field.",
      "reqd": "If set, field is mandatory.",
      "unique": "Enforces unique values in records.",
      "options": "Dropdown values or linked doctype.",
      "default": "Initial field value.",
      "precision": "Number formatting precision.",
      "length": "Character limit for inputs.",
      "fetch_from": "Auto-fetch value from another field.",
      "fetch_if_empty": "Only fetch if the current value is blank.",
      "permissions": "Custom permission rules.",
      "depends_on": "Logic to show/hide field conditionally.",
      "permlevel": "Access level required to edit this field.",
      "hidden": "If true, field is not shown.",
      "read_only": "Marks field as non-editable.",
      "collapsible": "Makes section collapsible in UI.",
      "allow_bulk_edit": "Enables multi-row editing.",
      "description": "Tooltip or help text.",
      "placeholder": "Hint text inside the input field.",
      "print_hide": "Exclude from printed reports.",
      "columns": "Width in grid layout.",
      "width": "Field width in pixels or percent.",
      "is_custom_field": "Flags whether this is a user-defined field."
    },
    "meta_text": "Customize Form Field allows extending ERPNext forms by injecting custom fields with full control over behavior, visibility, validation, and permissions without touching the base schema."
  },

  "Custom Field": {
    "module": "Custom",
    "description": "Adds a new field to an existing ERPNext document for capturing additional information.",
    "fields": {
      "is_system_generated": "Whether this field was added automatically.",
      "dt": "Doctype this field is attached to.",
      "module": "Module the field belongs to.",
      "label": "User-facing name of the field.",
      "placeholder": "Placeholder value in input box.",
      "fieldname": "Internal identifier for this field.",
      "insert_after": "Name of the field after which this should be placed.",
      "length": "Maximum input length.",
      "link_filters": "Conditions to apply when linking records.",
      "fieldtype": "Input type (e.g., Int, Link, Check).",
      "precision": "Decimal precision for number fields.",
      "options": "Extra configuration or linked data source.",
      "fetch_from": "Auto-fetch logic (source.field).",
      "fetch_if_empty": "Only fetch if the current field is empty.",
      "collapsible": "Flag to allow collapse in UI.",
      "default": "Default value for this field.",
      "depends_on": "Display condition logic.",
      "mandatory_depends_on": "Logic to enforce required state.",
      "read_only_depends_on": "Conditional logic for read-only behavior.",
      "non_negative": "Prevent negative values.",
      "reqd": "Marks the field as required.",
      "unique": "Marks the field as unique in table.",
      "is_virtual": "Indicates this is a computed/virtual field.",
      "read_only": "Marks field as non-editable.",
      "hidden": "Hide field from UI.",
      "print_hide": "Hide field in print view.",
      "print_width": "Width of field in printed layout.",
      "in_list_view": "Show in list view.",
      "in_standard_filter": "Allow filtering in reports.",
      "in_global_search": "Include in search index.",
      "in_preview": "Show in preview layout.",
      "bold": "Make field label bold.",
      "description": "Help text for field.",
      "permlevel": "Field-level access restriction.",
      "width": "Pixel or percent-based width.",
      "columns": "Grid column size."
    },
    "meta_text": "Custom Field enables addition of user-defined fields to any standard document. It allows advanced configurations for UI placement, validation, automation, and access control to extend ERPNext capabilities."
  },

  "User": {
    "module": "Core",
    "description": "Represents people who can log in to the system, including their roles, preferences, and access credentials.",
    "fields": {
      "enabled": "Indicates if the user is active.",
      "email": "User's email address for login.",
      "first_name": "First name of the user.",
      "middle_name": "Optional middle name.",
      "last_name": "Surname or family name.",
      "full_name": "Auto-generated full name.",
      "username": "Custom system identifier.",
      "language": "Preferred language for UI.",
      "time_zone": "User's local timezone.",
      "send_welcome_email": "Toggle for welcome notification.",
      "roles": "Permissions assigned via roles.",
      "user_image": "Profile photo.",
      "desk_theme": "Visual theme for the desk UI.",
      "user_type": "System User or Website User.",
      "last_login": "Timestamp of last login.",
      "mobile_no": "Primary mobile number.",
      "api_access": "If API credentials are enabled.",
      "api_key": "System-generated API key.",
      "api_secret": "System-generated secret key."
    },
    "meta_text": "User manages access and personalization for individuals using ERPNext. Roles define permissions, while other fields track login credentials, security settings, and workspace preferences."
  },
  "Period Closing Voucher": {
    "module": "Accounts",
    "description": "Used to transfer balances from income and expense accounts to a closing account at the end of a fiscal period.",
    "fields": {
      "transaction_date": "The date the closing entry is made.",
      "company": "The company for which the books are being closed.",
      "fiscal_year": "The fiscal year associated with the period.",
      "period_start_date": "Start date of the period to be closed.",
      "period_end_date": "End date of the period being closed.",
      "closing_account_head": "The account where final balances are posted.",
      "gle_processing_status": "Processing status of the General Ledger entry.",
      "remarks": "Additional notes or justifications for closing.",
      "error_message": "Captures any issues during posting.",
      "amended_from": "Link to the document if this is an amendment."
    },
    "meta_text": "Used to finalize financial results by shifting income and expense totals into a closing account. Common in year-end or quarter-end procedures to ensure clean ledgers."
  },

  "Workspace Link": {
    "module": "Desk",
    "description": "Creates shortcut links within ERPNext workspaces to access doctypes, reports, or actions quickly.",
    "fields": {
      "type": "Type of link like DocType, Report, Page, etc.",
      "label": "The visible label for the link.",
      "icon": "Icon shown next to the link.",
      "description": "Additional info about what this link does.",
      "hidden": "Whether to hide the link by default.",
      "link_type": "The kind of item being linked (DocType, Report, etc.).",
      "link_to": "The target document or resource.",
      "report_ref_doctype": "Used if linking to a report based on a doctype.",
      "dependencies": "Conditions that determine when the link shows.",
      "only_for": "Restrict visibility based on user role or state.",
      "onboard": "Used in onboarding flows.",
      "is_query_report": "Specifies if the linked report is of type Query.",
      "link_count": "How many records the link references."
    },
    "meta_text": "Used to organize navigation within modules like Selling, Buying, Stock, etc., and helps structure dashboards or workspaces for user experience."
  },

  "Social Login Key": {
    "module": "Integrations",
    "description": "Stores the OAuth client credentials needed for social logins like Google, GitHub, Facebook, etc.",
    "fields": {
      "enable_social_login": "Enable/disable this login provider.",
      "social_login_provider": "The provider name (e.g., Google, Facebook).",
      "client_id": "OAuth client ID from the provider.",
      "provider_name": "Friendly label for the provider.",
      "client_secret": "Secret key used with the OAuth provider.",
      "icon": "Icon displayed on login screen.",
      "base_url": "Base URL of the provider (if custom).",
      "sign_ups": "Enable sign-up through this method.",
      "client_urls": "Client redirection URLs (optional).",
      "authorize_url": "Authorization endpoint of the provider.",
      "access_token_url": "Endpoint to obtain access token.",
      "redirect_url": "ERP URL to handle redirect response.",
      "api_endpoint": "User info endpoint from the provider.",
      "custom_base_url": "Optional override for API base.",
      "api_endpoint_args": "Extra args for user info call.",
      "auth_url_data": "Custom parameters to send in auth request.",
      "user_id_property": "Key in response that uniquely identifies the user."
    },
    "meta_text": "Social Login Key is critical for enabling single sign-on (SSO) using external identity providers. It configures the full OAuth authentication flow for ERP logins."
  },

  "Report": {
    "module": "Core",
    "description": "Defines how reports are generated and rendered in ERPNext, either using custom SQL, scripts, or built-in templates.",
    "fields": {
      "report_name": "The name of the report shown to users.",
      "ref_doctype": "The doctype this report is based on.",
      "reference_report": "Reference to a parent or original report.",
      "is_standard": "Whether the report is built-in or custom.",
      "module": "The module this report belongs to.",
      "report_type": "How this report is generated (e.g., Query, Script, Custom).",
      "letter_head": "The print heading if printable.",
      "add_total_row": "Adds a totals row to tabular reports.",
      "disabled": "Whether this report is deactivated.",
      "prepared_report": "Flag for background generation.",
      "timeout": "Execution timeout for large queries.",
      "filters": "List of filter fields in the report UI.",
      "columns": "Column definitions for the table.",
      "query": "SQL query used in query reports.",
      "report_script": "Client-side JS for report logic.",
      "javascript": "Custom JS scripts for UI enhancement.",
      "json": "Configuration stored as JSON.",
      "permission_rules": "Permission-based report access.",
      "roles": "Roles allowed to view the report."
    },
    "meta_text": "Report is the core object for data analysis in ERPNext. It supports query reports, custom scripts, dashboards, and printable formats. Used for operational and financial insights."
  },

  "GL Entry": {
    "module": "Accounts",
    "description": "The lowest-level record of a financial transaction, representing the movement of value in ERPNext.",
    "fields": {
      "posting_date": "The date when the entry is posted.",
      "transaction_date": "The actual date of the transaction.",
      "fiscal_year": "Fiscal year for reporting.",
      "due_date": "Payment or clearing due date.",
      "account": "Ledger account affected.",
      "account_currency": "Currency of the account.",
      "against": "Opposing account name or reference.",
      "party_type": "If entry involves Customer or Supplier.",
      "party": "Name of the party (customer or supplier).",
      "voucher_type": "Document that triggered this entry.",
      "voucher_no": "Reference number of that document.",
      "voucher_subtype": "Subtype (if applicable).",
      "transaction_currency": "Currency of the transaction.",
      "against_voucher_type": "Linked opposing document type.",
      "against_voucher": "ID of linked voucher.",
      "voucher_detail_no": "Row-level reference from original doc.",
      "transaction_exchange_rate": "Currency rate used.",
      "debit_in_account_currency": "Debit in account's currency.",
      "debit": "Debit amount in base currency.",
      "debit_in_transaction_currency": "Debit in transaction currency.",
      "credit_in_account_currency": "Credit in account's currency.",
      "credit": "Credit amount in base currency.",
      "credit_in_transaction_currency": "Credit in transaction currency.",
      "cost_center": "Cost center for this line.",
      "project": "Project associated with entry.",
      "finance_book": "Book (e.g., GAAP, Tax) this entry affects.",
      "company": "The company this entry belongs to.",
      "is_opening": "Whether this is an opening balance entry.",
      "is_advance": "Marks if this entry is a prepayment.",
      "to_rename": "Used during renaming of linked docs.",
      "is_cancelled": "Marks if this entry is voided.",
      "remarks": "Free text comments or explanations."
    },
    "meta_text": "GL Entry is essential for all financial tracking in ERP. It captures the debit-credit flow at the most granular level, reflecting income, expense, assets, liabilities, and equity movements. It links to vouchers and enables audit-ready bookkeeping."
  },
  "List View Settings": {
    "module": "Desk",
    "description": "Controls customization options for how list views appear in ERPNext, including display controls, inline editing, and field-level visibility.",
    "fields": {
      "disable_count": "Prevents showing record count in the list view.",
      "disable_comment_count": "Hides comment count in list view rows.",
      "disable_sidebar_stats": "Disables statistics shown in the sidebar.",
      "disable_auto_refresh": "Stops automatic refreshing of list view.",
      "allow_edit": "Enables inline editing directly within the list view.",
      "total_fields": "Defines which numeric fields to total at the bottom.",
      "fields_html": "Custom HTML layout for the list view.",
      "fields": "List of fields shown in the list view grid."
    },
    "meta_text": "List View Settings is used to control how lists of documents are displayed, allowing UI tailoring by enabling or disabling totals, comment counts, editing, and layout."
  },

  "Brand": {
    "module": "Setup",
    "description": "Used to define brands for products to enable classification and defaults like pricing or tax rules.",
    "fields": {
      "brand": "Name of the brand (e.g., Samsung, Nike).",
      "image": "Image/logo representing the brand.",
      "description": "Optional description or notes about the brand.",
      "defaults": "System-wide default settings applied when the brand is used.",
      "brand_defaults": "More granular brand-specific defaults for items or pricing."
    },
    "meta_text": "The Brand doctype is useful for organizing products by brand and configuring default settings such as pricing, taxes, or warehouse rules when a brand is applied to an item."
  },

  "Opportunity": {
    "module": "CRM",
    "description": "Captures leads and potential deals that sales teams can track, qualify, and convert.",
    "fields": {
      "naming_series": "Auto-generated sequence for naming the opportunity.",
      "opportunity_from": "Origin source (Customer or Lead).",
      "party_name": "Name of the customer or lead.",
      "customer_name": "Customer’s full name (if available).",
      "status": "Current stage (e.g., Open, Quotation Sent, Lost).",
      "opportunity_type": "Deal type such as Sales or Service.",
      "source": "Lead source (e.g., Web, Call, Email).",
      "opportunity_owner": "Assigned sales executive or owner.",
      "sales_stage": "Stage in sales pipeline (e.g., Proposal, Negotiation).",
      "expected_closing": "Expected closing date for the deal.",
      "probability": "Estimated percentage chance of success.",
      "opportunity_amount": "Estimated monetary value of the opportunity.",
      "base_opportunity_amount": "Opportunity value in base currency.",
      "campaign": "Marketing campaign linked to this opportunity.",
      "items": "Items proposed or discussed as part of the deal."
    },
    "meta_text": "Opportunity represents potential sales engagements, allowing sales reps to record deal value, customer details, sales stage, source, and timeline. It integrates with campaigns and customer records to improve pipeline visibility."
  },

  "Account": {
    "module": "Accounts",
    "description": "Defines a ledger account in the Chart of Accounts, used for financial reporting and transaction classification.",
    "fields": {
      "account_name": "The display name for the account.",
      "account_number": "Unique account number if used.",
      "company": "The company this account belongs to.",
      "parent_account": "Parent node in the account hierarchy.",
      "is_group": "Indicates if this is a grouping account (no transactions).",
      "account_type": "Type of account (e.g., Asset, Expense).",
      "account_currency": "Currency in which transactions are recorded.",
      "tax_rate": "Applicable tax percentage, if any.",
      "report_type": "Financial report category (Profit and Loss, Balance Sheet).",
      "root_type": "Root level classification (e.g., Income, Liability).",
      "disabled": "Mark as inactive to prevent usage.",
      "freeze_account": "Lock to prevent further posting.",
      "balance_must_be": "Optional balance rule (e.g., Must be credit).",
      "include_in_gross": "Include in gross profit calculation."
    },
    "meta_text": "Account defines the financial structure for ERPNext. It determines where values are posted for income, expense, asset, or liability tracking, and forms the basis of all accounting operations."
  },

  "Warehouse": {
    "module": "Stock",
    "description": "Defines physical or logical inventory storage locations used in stock transactions and fulfillment.",
    "fields": {
      "warehouse_name": "Name of the warehouse or stock location.",
      "disabled": "Mark as inactive to prevent selection.",
      "is_group": "If this is a parent node (not a transactional warehouse).",
      "parent_warehouse": "Linked parent warehouse (if any).",
      "is_rejected_warehouse": "Marks it as a location for storing rejected goods.",
      "warehouse_type": "Custom tag to describe type (e.g., Main, Cold Storage).",
      "default_in_transit_warehouse": "Used for transit entries between warehouses.",
      "company": "Company the warehouse belongs to.",
      "account": "Default stock or valuation account for this warehouse.",
      "email_id": "Contact email for the warehouse manager or team.",
      "phone_no": "Telephone number for the warehouse.",
      "mobile_no": "Mobile contact number.",
      "address_line_1": "Primary address.",
      "address_line_2": "Secondary address (optional).",
      "city": "City where the warehouse is located.",
      "state": "State/province of the warehouse.",
      "pin": "Postal code or ZIP."
    },
    "meta_text": "Warehouse defines where stock is stored and moved during transactions. It's integral to purchase, delivery, transfer, and return workflows, and ties into valuation and logistics planning."
  },
  "Pick List": {
    "module": "Stock",
    "description": "Used to prepare a list of items that need to be physically picked from a warehouse for fulfilling delivery, production, or internal movement requests.",
    "fields": {
      "naming_series": "Naming template for the pick list.",
      "company": "The company responsible for the picking operation.",
      "purpose": "Reason for the pick (e.g., Delivery, Work Order).",
      "customer": "Customer for whom the items are being picked.",
      "customer_name": "Name of the customer.",
      "work_order": "Linked manufacturing work order, if applicable.",
      "material_request": "Reference to the material request.",
      "for_qty": "Total quantity of items to be picked.",
      "parent_warehouse": "Warehouse from which items are being picked.",
      "consider_rejected_warehouses": "Whether to include rejected warehouses.",
      "get_item_locations": "Triggers item location fetch.",
      "pick_manually": "Allows manual picking instead of automated suggestions.",
      "ignore_pricing_rule": "Whether to skip pricing rules for the pick list.",
      "scan_barcode": "Enable barcode scanning during picking.",
      "scan_mode": "Mode of scanning used.",
      "prompt_qty": "Prompts the user to enter quantity at time of pick.",
      "locations": "Details of where items should be picked from.",
      "status": "Status of the pick list (e.g., Draft, Completed)."
    },
    "meta_text": "Pick List is used for guiding warehouse staff to retrieve items for delivery or manufacturing. It provides source locations, quantities, and pick instructions based on sales or production documents."
  },

  "Stock Entry": {
    "module": "Stock",
    "description": "Captures all types of stock movements like transfers, material issues, returns, manufacturing entries, and adjustments.",
    "fields": {
      "stock_entry_type": "The type of stock transaction (e.g., Material Transfer).",
      "company": "The company executing the stock movement.",
      "posting_date": "Date of the stock entry transaction.",
      "from_warehouse": "Warehouse stock is taken from.",
      "to_warehouse": "Warehouse stock is moved to.",
      "items": "List of items involved in the transaction.",
      "bom_no": "Reference to the Bill of Materials (if applicable).",
      "total_outgoing_value": "Total value of items going out.",
      "total_incoming_value": "Total value of items coming in.",
      "value_difference": "Difference between incoming and outgoing value.",
      "remarks": "Additional notes regarding the entry.",
      "add_to_transit": "Whether to mark as 'In Transit'."
    },
    "meta_text": "Stock Entry logs all warehouse-level stock activities including transfers, production usage, returns, and write-offs. It supports tracking values, locations, and the purpose of each transaction through a flexible set of fields."
  },

  "Asset Value Adjustment": {
    "module": "Assets",
    "description": "Used to update the accounting book value of an asset due to correction, revaluation, or impairment.",
    "fields": {
      "asset": "Reference to the asset being revalued.",
      "current_asset_value": "Original value recorded in the books.",
      "new_asset_value": "Revised or updated asset value.",
      "difference_amount": "Difference between old and new values.",
      "difference_account": "Account impacted by the adjustment.",
      "journal_entry": "Link to journal entry recording the change.",
      "cost_center": "Cost center responsible for the asset."
    },
    "meta_text": "Asset Value Adjustment allows financial teams to correct or update asset values for accounting accuracy. It supports linking to journal entries and assigning financial impact to specific accounts and cost centers."
  },

  "Notification Log": {
    "module": "Desk",
    "description": "Tracks system alerts and user notifications for document updates, reminders, or actions that require attention.",
    "fields": {
      "subject": "Title or summary of the notification.",
      "for_user": "The user who receives the notification.",
      "type": "Notification type (e.g., Alert, Email).",
      "document_type": "ERPNext document that triggered the message.",
      "document_name": "Specific document reference.",
      "read": "Boolean flag indicating if user has read it.",
      "email_content": "Body of the notification email (if applicable).",
      "attachment_link": "Link to download any attached files.",
      "from_user": "User who triggered or sent the notification.",
      "link": "URL to directly open the referenced document."
    },
    "meta_text": "Notification Log helps users track system messages related to ERPNext documents. It stores metadata like message type, read status, linked documents, and who triggered the message. This doctype ensures users are informed and can follow up appropriately."
  },
  "Notification Log": {
    "module": "Desk",
    "description": "Tracks system-generated notifications sent to users, including document references, sender info, and read status.",
    "fields": {
      "subject": "Title of the notification.",
      "for_user": "Recipient of the notification.",
      "type": "Type of notification (e.g. Email, Alert).",
      "email_content": "Full message body or email content.",
      "document_type": "Linked document's doctype.",
      "document_name": "Name of the referenced document.",
      "read": "Indicates if the user has read it.",
      "attached_file": "Any attached document or file.",
      "attachment_link": "URL or reference link to the attachment.",
      "open_reference_document": "Link to open the associated document.",
      "from_user": "User who triggered or sent the notification.",
      "link": "Redirect link for user action or document access."
    },
    "meta_text": "Used to track alerts, emails, and system messages triggered by changes in documents or system events. It supports document linking, user delivery tracking, and viewing unread or important messages."
  },

  "Promotional Scheme Price Discount": {
    "module": "Accounts",
    "description": "Defines pricing rules for discounts applied under promotional schemes based on quantity, amount, or specific conditions.",
    "fields": {
      "disable": "Marks the rule as inactive.",
      "apply_multiple_pricing_rules": "Allow application of multiple rules.",
      "rule_description": "Textual description of the scheme.",
      "min_qty": "Minimum quantity threshold to trigger discount.",
      "max_qty": "Maximum quantity allowed for discount.",
      "min_amount": "Minimum billing amount for discount.",
      "max_amount": "Maximum billing amount for discount.",
      "rate_or_discount": "Flag to indicate whether rate or discount is applied.",
      "rate": "Fixed rate if applied instead of discount.",
      "discount_amount": "Flat discount value.",
      "discount_percentage": "Percentage-based discount value.",
      "for_price_list": "Applicable price list name.",
      "warehouse": "Applicable warehouse if discount is location-specific.",
      "threshold_percentage": "Threshold percentage for applying rules.",
      "validate_applied_rule": "Enforces rule validation logic.",
      "priority": "Priority in case of multiple rules.",
      "apply_discount_on_rate": "Indicates if discount is based on listed rate."
    },
    "meta_text": "Defines price-based discount rules under promotional campaigns. Rules are based on thresholds like quantity and billing amount. Applicable rates or discounts are enforced conditionally per price list or warehouse."
  },

  "Promotional Scheme Product Discount": {
    "module": "Accounts",
    "description": "Defines rules for product-based discounts within promotional schemes, including free items, quantity thresholds, and recursion behavior.",
    "fields": {
      "disable": "Marks the rule as inactive.",
      "apply_multiple_pricing_rules": "Allow multiple product discount rules.",
      "rule_description": "Explanation of discount strategy.",
      "min_qty": "Minimum quantity required for the free item.",
      "max_qty": "Maximum quantity eligible for discount.",
      "min_amount": "Minimum transaction amount for eligibility.",
      "max_amount": "Maximum transaction amount for eligibility.",
      "same_item": "Indicates if the free item is the same as the purchased one.",
      "free_item": "Item code of the free item.",
      "free_qty": "Quantity of the free item to be given.",
      "free_item_uom": "Unit of measure for the free item.",
      "free_item_rate": "Rate applied to the free item (can be zero).",
      "round_free_qty": "Flag to enable rounding off free quantity.",
      "warehouse": "Applicable warehouse for free item allocation.",
      "threshold_percentage": "Percent threshold used for application control.",
      "priority": "Execution order if multiple rules are eligible.",
      "is_recursive": "Indicates if the rule can apply repeatedly.",
      "recurse_for": "Defines number of recursions allowed.",
      "apply_recursion_over": "Defines the basis (qty or amount) for recursion."
    },
    "meta_text": "Specifies quantity-based free item promotions. Supports same-product or cross-product offers and handles recursive gifting logic with limits. Enhances marketing campaigns through automated giveaway setups."
  },

  "Purchase Receipt Item": {
    "module": "Stock",
    "description": "Represents each line item in a Purchase Receipt, detailing received quantities, pricing, tax, warehouse, and inventory handling.",
    "fields": {
      "item_code": "Item being received.",
      "received_qty": "Quantity actually received.",
      "qty": "Expected quantity for comparison.",
      "rejected_qty": "Quantity rejected during quality inspection.",
      "warehouse": "Warehouse to store received items.",
      "rate": "Rate per item as agreed with the supplier.",
      "net_amount": "Total amount after applying discounts.",
      "serial_no": "Serial number for serialized items.",
      "batch_no": "Batch number if applicable.",
      "valuation_rate": "Rate used for valuing inventory.",
      "item_tax_template": "Template defining applicable taxes.",
      "quality_inspection": "Link to quality inspection record.",
      "is_free_item": "Flag indicating if item is free of cost.",
      "item_tax_rate": "Effective tax rate applied.",
      "project": "Project associated with the item if any.",
      "cost_center": "Cost center used for financial accounting.",
      "sales_order": "Linked sales order reference.",
      "purchase_order": "Linked purchase order reference.",
      "purchase_invoice": "Linked purchase invoice reference.",
      "subcontracting_receipt_item": "Associated subcontracting receipt."
    },
    "meta_text": "Captures all product and pricing information in a goods receipt. Fields support valuation, tax setup, quality checks, and batch tracking. This ensures goods are accurately accounted in stock and finance systems."
  },
  "Journal Entry": {
    "module": "Accounts",
    "description": "Used to record general ledger entries, supporting multi-currency, deferred accounting, and write-offs.",
    "fields": {
      "company": "The company under which the entry is made.",
      "posting_date": "Date the journal entry is recorded.",
      "voucher_type": "Specifies the category (e.g., Bank Entry, Cash Entry).",
      "accounts": "List of debit and credit ledger accounts with amounts.",
      "finance_book": "Used for maintaining alternate books for reporting.",
      "write_off_amount": "Amount written off in this transaction.",
      "clearance_date": "Date the cheque or transaction cleared.",
      "is_opening": "Indicates if the entry is for opening balances.",
      "cheque_no": "Cheque number if applicable.",
      "multi_currency": "Flag to handle multiple currencies in the entry."
    },
    "meta_text": "Journal Entries capture double-entry accounting transactions like adjustments, reversals, and transfers. They affect balance sheets and profit/loss statements and are essential for audit trails and financial compliance."
  },
  "User Document Type": {
    "module": "Core",
    "description": "Manages per-user access control across DocTypes.",
    "fields": {
      "document_type": "The specific document type (e.g., Sales Invoice).",
      "read": "Permission to view documents.",
      "write": "Permission to modify documents.",
      "create": "Permission to create new entries.",
      "submit": "Permission to submit documents for approval.",
      "cancel": "Permission to cancel submitted entries.",
      "delete": "Permission to remove documents.",
      "email": "Permission to send documents via email.",
      "share": "Permission to share documents.",
      "print": "Permission to print documents."
    },
    "meta_text": "Allows fine-grained control over which actions a user can perform on specific document types, enhancing security and workflow control."
  },

  "Putaway Rule": {
    "module": "Stock",
    "description": "Defines storage placement rules for items.",
    "fields": {
      "item_code": "The item to which the rule applies.",
      "warehouse": "Target warehouse for stock placement.",
      "capacity": "Max capacity allowed by the rule.",
      "priority": "Order of rule application.",
      "conversion_factor": "Multiplier for unit conversion from UOM to stock UOM.",
      "stock_uom": "Default stock unit of measure."
    },
    "meta_text": "Putaway Rules guide automated warehouse logistics, ensuring that items are stored correctly based on volume, priority, or other business constraints."
  },

  "Inventory Dimension": {
    "module": "Stock",
    "description": "Adds custom fields to track inventory transactions by dimensions like region or category.",
    "fields": {
      "dimension_name": "Name of the custom dimension (e.g., Region, Brand).",
      "reference_document": "Document where the dimension is applied.",
      "source_fieldname": "Field from which value is fetched.",
      "target_fieldname": "Field to which value is mapped.",
      "apply_to_all_doctypes": "Apply this dimension universally if true.",
      "validate_negative_stock": "Block transactions that cause negative stock under this dimension."
    },
    "meta_text": "Inventory Dimensions enable custom segmentation in inventory reports and validations by capturing extra attributes like region, team, or business unit."
  },

  "Notification": {
    "module": "Email",
    "description": "Defines rules for sending alerts on document events.",
    "fields": {
      "event": "Trigger event such as New, Submit, or Cancel.",
      "document_type": "Doctype that this rule applies to.",
      "subject": "Subject of the email or notification.",
      "channel": "Delivery method like Email or Slack.",
      "message": "Template or fixed message to send.",
      "condition": "Custom condition to evaluate before sending.",
      "recipients": "Users or roles that should receive the alert.",
      "attach_print": "Whether to attach a print format.",
      "print_format": "Which print format to use, if any."
    },
    "meta_text": "Enables automated, rule-based communication within ERP workflows by emailing users or notifying channels when key events occur on documents."
  },

  "Repost Item Valuation": {
    "module": "Stock",
    "description": "Recomputes item valuations due to rate or stock discrepancies.",
    "fields": {
      "item_code": "Affected item.",
      "voucher_type": "Document type causing the repost (e.g., Stock Entry).",
      "warehouse": "Warehouse where the discrepancy occurred.",
      "posting_date": "Date of the new valuation post.",
      "allow_negative_stock": "If true, allows transactions that would reduce stock below zero.",
      "error_log": "Captures issues during processing.",
      "affected_transactions": "List of linked documents impacted by valuation changes."
    },
    "meta_text": "Reposts are used when backdated entries or corrections affect item costs. This doctype ensures proper valuation continuity and financial accuracy."
  },

  "Asset Capitalization Stock Item": {
    "module": "Assets",
    "description": "Lists individual stock items grouped into an asset capitalization entry.",
    "fields": {
      "item_code": "Item being capitalized.",
      "warehouse": "Warehouse from which the stock item was drawn.",
      "stock_qty": "Quantity of item capitalized.",
      "stock_uom": "Unit of measure for inventory tracking.",
      "valuation_rate": "Per-unit cost basis.",
      "amount": "Total valuation (qty × rate).",
      "serial_no": "Serial number if applicable.",
      "batch_no": "Batch number for traceability.",
      "cost_center": "Accounting dimension for cost tracking."
    },
    "meta_text": "Defines physical components being converted into fixed assets, with financial and warehouse attribution for accurate balance sheet reflection."
  },
  "Bank Statement Import": {
    "module": "Accounts",
    "description": "Used to import and reconcile bank statement transactions in ERPNext from files or Google Sheets.",
    "fields": {
      "company": "Company whose bank statement is being imported.",
      "bank_account": "Bank account being reconciled.",
      "google_sheets_url": "URL of the Google Sheet containing the bank data.",
      "import_file": "File uploaded for import.",
      "template_options": "Field mapping or template selection for structured import.",
      "submit_after_import": "Whether to auto-submit records after import.",
      "mute_emails": "Option to disable email notifications during import."
    },
    "meta_text": "Facilitates quick and structured importing of bank transactions to ERPNext. Supports file-based and Google Sheets-based imports, custom delimiters, and log previews for efficient bank reconciliation."
  },

  "Workstation": {
    "module": "Manufacturing",
    "description": "Defines operational stations within a plant for manufacturing tasks, including capacity, costing, and scheduling.",
    "fields": {
      "workstation_name": "Unique name of the workstation.",
      "production_capacity": "The output capacity of the station.",
      "hour_rate": "Total hourly rate for this workstation.",
      "warehouse": "Warehouse linked to the workstation for materials.",
      "plant_floor": "Plant area where the workstation is physically located.",
      "working_hours": "Total available working time based on holidays and shifts."
    },
    "meta_text": "Used to represent production units like machines or work areas. Tracks availability, costing, and scheduling for MRP and capacity planning."
  },

  "Customer": {
    "module": "Selling",
    "description": "Represents a business or individual buying goods or services. Stores CRM, address, pricing, and financial configuration.",
    "fields": {
      "customer_name": "The name of the customer.",
      "customer_type": "Defines whether the customer is an individual or company.",
      "territory": "Geographic region of operation.",
      "loyalty_program": "Loyalty rewards program associated with this customer.",
      "tax_id": "Tax identification number for compliance.",
      "sales_team": "Salespersons assigned to this customer."
    },
    "meta_text": "Manages contact, financial, and sales configuration for customers. Central to quotations, sales orders, invoices, and CRM pipeline management."
  },

  "Asset Repair": {
    "module": "Assets",
    "description": "Logs maintenance and repair of fixed assets, including cost tracking, stock usage, and asset life adjustment.",
    "fields": {
      "asset": "Asset undergoing repair.",
      "repair_cost": "Total cost for repair work.",
      "capitalize_repair_cost": "Flag to indicate whether cost is capitalized.",
      "increase_in_asset_life": "Extended useful life of the asset post-repair.",
      "stock_items": "List of inventory used during repair.",
      "completion_date": "Date repair was completed."
    },
    "meta_text": "Records repair history for assets with links to stock and accounting. Enables compliance, cost tracking, and depreciation accuracy."
  },

  "Asset Repair Consumed Item": {
    "module": "Assets",
    "description": "Tracks materials or stock items used during an asset repair process.",
    "fields": {
      "item_code": "Item used during the repair.",
      "consumed_quantity": "Number of units consumed.",
      "total_value": "Total cost of consumed items.",
      "warehouse": "Source location of the items.",
      "serial_no": "Serial number for tracking used items."
    },
    "meta_text": "Captures actual material usage for asset maintenance, supporting valuation accuracy and audit tracking."
  },

  "Department": {
    "module": "Setup",
    "description": "Defines company departments for HR, costing, and workflow segmentation.",
    "fields": {
      "department_name": "Name of the department.",
      "parent_department": "Hierarchy configuration for department grouping.",
      "company": "Associated company.",
      "is_group": "Flag to indicate grouping (not a leaf node)."
    },
    "meta_text": "Supports HR organization and approval routing. Used in employee profiles, expense claims, and project accounting."
  },
  "Language": {
    "module": "Core",
    "description": "Defines available languages used in the ERP system interface, allowing multilingual support for users and localized content.",
    "fields": {
      "enabled": "Whether this language is available for use.",
      "language_code": "Unique code representing the language (e.g., en, fr).",
      "language_name": "Display name of the language.",
      "flag": "Visual representation or icon (e.g., flag) for the language.",
      "based_on": "Specifies another language this one inherits from."
    },
    "meta_text": "Enables multilingual UI support and content localization by managing ERP language availability and inheritance."
  },

  "Repost Accounting Ledger Settings": {
    "module": "Accounts",
    "description": "Controls which types of accounting entries can be reposted in the general ledger, ensuring safe financial reprocessing.",
    "fields": {
      "allowed_types": "Document types allowed for ledger reposting (e.g., Sales Invoice, Journal Entry)."
    },
    "meta_text": "Defines allowed voucher types for ledger reposting to safeguard financial consistency and restrict unauthorized corrections."
  },

  "BOM Creator Item": {
    "module": "Manufacturing",
    "description": "Represents individual items in a BOM creation process, detailing quantity, sourcing, warehouse, and instructions.",
    "fields": {
      "item_code": "Code of the component or raw material.",
      "fg_item": "The finished good this item contributes to.",
      "qty": "Required quantity of the component.",
      "rate": "Rate per unit.",
      "source_warehouse": "Stock location from which item will be sourced.",
      "instruction": "Notes or steps relevant to this item during production."
    },
    "meta_text": "Supports dynamic BOM building by capturing stock, costing, and sourcing details for each input item during BOM creation."
  },

  "Repost Payment Ledger": {
    "module": "Accounts",
    "description": "Allows correction and reprocessing of payment-related entries in the accounting ledger to maintain financial accuracy.",
    "fields": {
      "company": "Target company for reposting.",
      "posting_date": "Effective date of the reposted ledger entry.",
      "voucher_type": "Document type to be reposted (e.g., Payment Entry).",
      "repost_vouchers": "List of specific vouchers to be included.",
      "repost_status": "Current processing state (e.g., Success, Error).",
      "repost_error_log": "Any error messages generated during processing."
    },
    "meta_text": "Used to fix incorrect or outdated ledger entries by selecting specific payment vouchers for reprocessing, improving reconciliation and reporting integrity."
  },

  "BOM": {
    "module": "Manufacturing",
    "description": "Defines the materials, operations, costs, and scrap components needed to manufacture a finished product.",
    "fields": {
      "item": "The finished product being manufactured.",
      "items": "List of raw materials and subassemblies.",
      "operations": "Workstations and steps involved in production.",
      "quantity": "Production batch size.",
      "total_cost": "Combined cost of materials and operations.",
      "routing": "Custom routing configuration, if used."
    },
    "meta_text": "The backbone of manufacturing planning in ERPNext, the BOM outlines materials, workstations, costs, and processes required to produce a product."
  },

  "Dashboard Chart": {
    "module": "Desk",
    "description": "Creates visual charts for ERP dashboards based on reports or document data, enabling insights and decision-making.",
    "fields": {
      "chart_name": "Title of the chart.",
      "chart_type": "Type of chart (e.g., Bar, Line, Heatmap).",
      "document_type": "Source doctype for chart data.",
      "based_on": "Field to aggregate values (e.g., Total, Count).",
      "filters_json": "Predefined filter conditions for the chart.",
      "time_interval": "Granularity (e.g., Daily, Weekly, Monthly)."
    },
    "meta_text": "Enables data-driven decision-making by visualizing trends and metrics from ERP documents or reports in customizable dashboard charts."
  },

  "Production Plan Item": {
    "module": "Manufacturing",
    "description": "Tracks each item planned for production within a production plan, linking demand to BOMs, sales orders, and stock availability.",
    "fields": {
      "item_code": "Product to be manufactured.",
      "bom_no": "Associated Bill of Materials for the item.",
      "planned_qty": "Quantity planned for production.",
      "warehouse": "Destination warehouse for finished goods.",
      "sales_order": "Reference to originating sales order.",
      "produced_qty": "Actual quantity already produced."
    },
    "meta_text": "Provides a structured view of items within a production plan, linking them to BOMs, demand sources, and execution metrics."
  },
  "Vehicle": {
    "module": "Setup",
    "description": "Tracks company-owned or employee-assigned vehicles, including license details, insurance, and specifications for fleet or asset management.",
    "fields": {
      "license_plate": "Vehicle registration number.",
      "make": "Manufacturer brand (e.g., Toyota).",
      "model": "Model of the vehicle.",
      "chassis_no": "Unique chassis identifier.",
      "employee": "Employee responsible or assigned driver.",
      "vehicle_value": "Current value or acquisition cost of the vehicle.",
      "insurance_company": "Insurer’s name.",
      "policy_no": "Insurance policy number.",
      "fuel_type": "Fuel category (e.g., Petrol, Diesel, Electric)."
    },
    "meta_text": "Used for managing company vehicle records, compliance (insurance/fuel checks), and integrating transportation details into ERP processes."
  },

  "Stock Reconciliation Item": {
    "module": "Stock",
    "description": "Captures adjustments to item quantities and valuation during physical stock audits and reconciliations.",
    "fields": {
      "item_code": "Item being reconciled.",
      "warehouse": "Location where the adjustment occurs.",
      "qty": "Updated physical count.",
      "valuation_rate": "Updated cost per unit.",
      "serial_no": "Associated serial numbers, if applicable.",
      "quantity_difference": "Difference between system and actual quantity."
    },
    "meta_text": "Allows granular item-level reconciliation for correcting mismatches in stock records with batch, serial, and value accuracy."
  },

  "Workspace": {
    "module": "Desk",
    "description": "Defines personalized dashboards or landing pages with charts, links, and shortcuts for user roles or individuals.",
    "fields": {
      "label": "Workspace title displayed to users.",
      "module": "ERP module this workspace is linked to.",
      "charts": "Charts visualized within this workspace.",
      "shortcuts": "Quick links to actions or forms.",
      "roles": "User roles allowed to access this workspace."
    },
    "meta_text": "Central UI configuration for building role-based dashboards that organize ERP content, reports, and visualizations."
  },

  "Fiscal Year": {
    "module": "Accounts",
    "description": "Defines the start and end dates for a financial year, ensuring all financial transactions are tagged and grouped correctly.",
    "fields": {
      "year": "Display name for the fiscal year.",
      "year_start_date": "Start date of the accounting year.",
      "year_end_date": "End date of the accounting year.",
      "companies": "Applicable companies for this fiscal year."
    },
    "meta_text": "Used to structure financial reporting, tax computation, and compliance according to the accounting calendar year."
  },

  "Job Card Time Log": {
    "module": "Manufacturing",
    "description": "Records time spent by employees on specific operations in a manufacturing job card.",
    "fields": {
      "employee": "Worker who performed the task.",
      "from_time": "Start timestamp.",
      "to_time": "End timestamp.",
      "completed_qty": "Units completed during the logged time."
    },
    "meta_text": "Supports labor cost analysis, performance monitoring, and shop floor time tracking during manufacturing execution."
  },

  "Recorder Suggested Index": {
    "module": "Core",
    "description": "Stores database indexing suggestions based on system profiler insights to improve query speed.",
    "fields": {
      "table": "Database table that needs an index.",
      "column": "Specific column to index for performance."
    },
    "meta_text": "Helps developers identify slow-performing queries and apply indexing optimizations for improved backend performance."
  },

  "Recorder": {
    "module": "Core",
    "description": "Captures full system request and query metadata, supporting performance debugging and profiling in ERPNext.",
    "fields": {
      "cmd": "Executed command or method.",
      "number_of_queries": "SQL queries run during request.",
      "duration": "Total time taken for the request.",
      "suggested_indexes": "System-proposed database indexes."
    },
    "meta_text": "Provides insights into request flow, query volume, and bottlenecks. Essential for developers optimizing ERP performance."
  },

  "Recorder Query": {
    "module": "Core",
    "description": "Logs individual SQL queries executed during a system request, with profiling data for performance analysis.",
    "fields": {
      "query": "The raw SQL executed.",
      "duration": "Time taken to execute the query.",
      "normalized_query": "Pattern-abstracted version of the query.",
      "explain_result": "SQL explain output for optimization insights."
    },
    "meta_text": "Captures slow or high-frequency queries and their characteristics for tuning indexes or query structure."
  },
  "File": {
    "module": "Core",
    "description": "Manages uploaded files and attachments across ERPNext with support for secure storage, preview, and document linking.",
    "fields": {
      "file_name": "Name of the uploaded file including extension.",
      "is_private": "If checked, file is accessible only to logged-in users.",
      "file_type": "MIME type or file format of the uploaded file.",
      "preview": "System-generated visual preview of the file.",
      "preview_html": "HTML representation for previewing the file in the UI.",
      "is_home_folder": "Marks the file as the root folder for a user.",
      "is_attachments_folder": "Indicates if the folder is for storing document attachments.",
      "file_size": "Size of the uploaded file in bytes.",
      "file_url": "URL path used to retrieve or download the file.",
      "thumbnail_url": "Thumbnail preview image URL for the file.",
      "folder": "The folder path where this file resides.",
      "is_folder": "True if the record represents a folder instead of a file.",
      "attached_to_doctype": "The ERP document type the file is linked to.",
      "attached_to_name": "The name of the specific document the file is attached to.",
      "attached_to_field": "Specific field in the document where the file is attached.",
      "old_parent": "Previous parent folder or location for this file.",
      "content_hash": "Hash value for the file contents to detect duplicates.",
      "uploaded_to_dropbox": "Indicates whether the file was synced to Dropbox.",
      "uploaded_to_google_drive": "Indicates whether the file was uploaded to Google Drive."
    },
    "meta_text": "The 'File' doctype is used to manage document and media uploads in ERPNext. It supports secure access, folder organization, cloud integration, and linking to ERP records."
  },
  "Supplier": {
    "module": "Buying",
    "description": "Supplier of goods or services, including organizational attributes, financial configuration, contact details, and transaction rules.",
    "fields": {
      "naming_series": "Defines the auto-naming pattern for supplier records.",
      "supplier_name": "The official name of the supplier.",
      "country": "Country where the supplier is based.",
      "supplier_group": "Classification category the supplier belongs to (e.g. Local, International).",
      "supplier_type": "Type of supplier such as Company or Individual.",
      "is_transporter": "Indicates whether the supplier provides transport services.",
      "image": "Profile or logo image representing the supplier.",
      "default_currency": "Default currency used for transactions with this supplier.",
      "default_bank_account": "Bank account to which payments are made by default.",
      "default_price_list": "Default price list to be used in purchase transactions.",
      "is_internal_supplier": "Indicates if the supplier is part of the same organization (used for inter-company transactions).",
      "represents_company": "Specifies the internal company that this supplier is representing.",
      "companies": "List of companies within your organization that transact with this supplier.",
      "website": "Supplier’s website URL.",
      "language": "Preferred communication language with this supplier.",
      "tax_id": "The tax identification number of the supplier.",
      "tax_category": "Tax category used to determine applicable tax rules for transactions.",
      "tax_withholding_category": "Category for tax withholding applicable to the supplier.",
      "address_contacts": "List of addresses and contacts linked to the supplier.",
      "address_html": "Formatted primary address of the supplier (HTML view).",
      "contact_html": "Formatted primary contact information (HTML view).",
      "supplier_primary_address": "Link to the supplier’s main address record.",
      "primary_address": "Formatted display of the main address.",
      "supplier_primary_contact": "Link to the supplier’s main contact person.",
      "mobile_no": "Primary mobile number for the supplier.",
      "email_id": "Primary email address for the supplier.",
      "payment_terms": "Defines the payment terms or credit period applicable to the supplier.",
      "accounts": "List of default ledger accounts used when booking transactions with this supplier.",
      "allow_purchase_invoice_creation_without_purchase_order": "Allows creation of purchase invoices without referencing a purchase order.",
      "allow_purchase_invoice_creation_without_purchase_receipt": "Allows creation of purchase invoices without referencing a purchase receipt.",
      "is_frozen": "Prevents any further transactions or changes for this supplier if enabled.",
      "disabled": "Marks the supplier as inactive or no longer in use.",
      "warn_rfqs": "Displays a warning when creating a Request for Quotation (RFQ) for this supplier.",
      "warn_pos": "Displays a warning during Point of Sale (POS) operations involving this supplier.",
      "prevent_rfqs": "Blocks RFQs from being created for this supplier.",
      "prevent_pos": "Blocks POS transactions involving this supplier.",
      "on_hold": "Indicates if the supplier is currently on hold, preventing transactions.",
      "hold_type": "Specifies the reason or type of hold applied to the supplier.",
      "release_date": "Date when the supplier hold will be lifted automatically.",
      "portal_users": "List of user accounts linked to this supplier for accessing the portal."
    },
    "meta_text": "The 'Supplier' doctype is part of the Buying module and stores detailed information about external vendors. It supports classification, tax configuration, default accounts, payment rules, and allows linking of addresses, contacts, and portal users. Additional flags support operational controls like transaction holds and policy enforcement, enabling complete vendor governance in purchasing workflows."
  },
  "POS Invoice Item": {
    "module": "Accounts",
    "description": "Represents each line item in a POS (Point of Sale) invoice, capturing product, pricing, tax, inventory, and accounting details for real-time transaction processing.",
    "fields": {
      "barcode": "Barcode associated with the item for scanning at the POS terminal.",
      "has_item_scanned": "Indicates whether the item was added via barcode scanning.",
      "item_code": "Unique code identifying the item being sold.",
      "item_name": "Display name of the item on the invoice.",
      "customer_item_code": "Custom item code used by the customer, if applicable.",
      "description": "Item description shown on the invoice for clarification.",
      "item_group": "Category or classification the item belongs to.",
      "brand": "Brand associated with the item.",
      "image": "Image representation of the item for visual identification.",
      "image_view": "Preview or thumbnail of the item image.",
      "qty": "Quantity of the item sold in the transaction.",
      "stock_uom": "Stock unit of measure used to manage inventory.",
      "uom": "Unit of measure in which the item is sold (e.g., pieces, kg).",
      "conversion_factor": "Conversion ratio between stock UOM and sales UOM.",
      "stock_qty": "Equivalent quantity in stock UOM for inventory deduction.",
      "price_list_rate": "Rate of the item as defined in the price list.",
      "base_price_list_rate": "Base currency equivalent of the price list rate.",
      "margin_type": "Specifies whether margin is applied as amount or percentage.",
      "margin_rate_or_amount": "Value of the margin applied based on the margin type.",
      "rate_with_margin": "Final rate after applying the margin.",
      "discount_percentage": "Percentage discount applied to the item.",
      "discount_amount": "Absolute discount value applied.",
      "base_rate_with_margin": "Rate after margin in base currency.",
      "rate": "Final unit selling rate of the item.",
      "amount": "Total amount for the line item before taxes and discounts.",
      "item_tax_template": "Tax template that defines applicable taxes for this item.",
      "base_rate": "Rate per unit in base currency before margin or discount.",
      "base_amount": "Total item amount in base currency.",
      "pricing_rules": "Rules or conditions that influenced pricing of this item.",
      "is_free_item": "Indicates if the item was provided free of cost.",
      "grant_commission": "Whether commission is granted on this item’s sale.",
      "net_rate": "Rate after applying discounts but before taxes.",
      "net_amount": "Total amount after applying discounts, before taxes.",
      "base_net_rate": "Net rate in base currency.",
      "base_net_amount": "Net amount in base currency.",
      "drop_ship": "Marks if the item is to be shipped directly from supplier to customer.",
      "delivered_by_supplier": "Indicates if supplier is responsible for delivering the item.",
      "income_account": "Ledger account to which the revenue from this item will be posted.",
      "is_fixed_asset": "Indicates if the item qualifies as a fixed asset.",
      "asset": "Reference to the asset record created from this item, if applicable.",
      "finance_book": "Accounting book used for financial reporting of this item.",
      "expense_account": "Account to which cost of the item is booked if needed.",
      "deferred_revenue": "Indicates if revenue should be recognized over a period.",
      "deferred_revenue_account": "Account where deferred revenue is recorded.",
      "service_stop_date": "End date for service if item is a subscription or service-based product.",
      "enable_deferred_revenue": "Enables deferred revenue feature for this item.",
      "service_start_date": "Start date for the provided service.",
      "service_end_date": "End date for the provided service.",
      "weight_per_unit": "Weight of a single unit of the item.",
      "total_weight": "Total weight of the quantity being sold.",
      "weight_uom": "Unit of measure for the item’s weight.",
      "warehouse": "Warehouse from which stock is deducted.",
      "target_warehouse": "Destination warehouse if the item is being transferred.",
      "quality_inspection": "Reference to a quality inspection record, if applicable.",
      "serial_and_batch_bundle": "Group of serial/batch details related to this item.",
      "use_serial_batch_fields": "Flag to activate serial/batch input fields.",
      "allow_zero_valuation_rate": "Permits items with zero valuation rate to be billed.",
      "item_tax_rate": "Specific tax rate applied to this item.",
      "actual_batch_qty": "Actual quantity pulled from batch-managed inventory.",
      "actual_qty": "Actual quantity issued during the transaction.",
      "serial_no": "Serial numbers associated with the item being sold.",
      "batch_no": "Batch number for the item if batch tracking is enabled.",
      "sales_order": "Reference to the originating sales order, if applicable.",
      "so_detail": "Line-level reference to the sales order item.",
      "pos_invoice_item": "Reference to this item in a parent POS invoice document.",
      "delivery_note": "Linked delivery note record, if any.",
      "dn_detail": "Reference to the delivery note item line.",
      "delivered_qty": "Quantity already delivered for this item.",
      "cost_center": "Cost center to which this item’s revenue or expense is assigned.",
      "project": "Project associated with the item sale, if any."
    },
    "meta_text": "The 'POS Invoice Item' doctype is part of the Accounts module and manages each individual item entry in a point-of-sale invoice. It captures critical attributes like item details, pricing logic, tax configuration, inventory management, financial accounting, asset handling, and project linkage. This ensures accurate and real-time billing, stock movement, and revenue recording at the retail level."
  },
"Pick List Item": {
  "module": "Stock",
  "description": "Standard ERPNext doctype for Pick List Item",
  "fields": [
    "item_code", "item_name", "column_break_2", "description", "item_group", "section_break_5", "warehouse",
    "quantity_section", "qty", "stock_qty", "picked_qty", "stock_reserved_qty", "column_break_11", "uom",
    "conversion_factor", "stock_uom", "serial_no_and_batch_section", "pick_serial_and_batch", "serial_and_batch_bundle",
    "use_serial_batch_fields", "column_break_20", "section_break_ecxc", "serial_no", "column_break_belw", "batch_no",
    "column_break_15", "sales_order", "sales_order_item", "product_bundle_item", "material_request",
    "material_request_item"
  ],
  "meta_text": "The 'Pick List Item' doctype is part of the Stock module and is used to define individual items in a pick list. Key fields include `item_code`, `qty`, and `warehouse` for specifying what needs to be picked and from where. It tracks picking progress through `picked_qty` and manages reserved stock via `stock_reserved_qty`. Fields like `serial_no`, `batch_no`, and `serial_and_batch_bundle` ensure traceability in batch and serial-tracked inventory. The doctype also links back to source documents such as Sales Orders and Material Requests. It is crucial for optimizing warehouse picking efficiency and ensuring order fulfillment accuracy."
},
"PSOA Cost Center": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for PSOA Cost Center",
  "fields": [
    "cost_center_name"
  ],
  "meta_text": "The 'PSOA Cost Center' doctype is part of the Accounts module and is used to define cost center records specific to PSOA configurations. It contains the key field `cost_center_name`, which identifies the name of the cost center. This doctype helps businesses assign and track expenses or revenues to designated cost centers within financial reporting workflows."
},
"System Health Report": {
  "module": "Desk",
  "description": "Standard ERPNext doctype for System Health Report",
  "fields": [
    "background_jobs_tab", "background_jobs_section", "total_background_workers", "column_break_klex", "background_jobs_check",
    "test_job_id", "section_break_djoz", "queue_status", "column_break_wjoz", "background_workers", "scheduler_section",
    "scheduler_status", "column_break_bxog", "oldest_unscheduled_job", "section_break_vpuw", "failing_scheduled_jobs",
    "database_section", "database", "database_version", "db_storage_usage", "column_break_auhv", "top_db_tables",
    "mariadb_variables_section", "bufferpool_size", "column_break_vztw", "binary_logging", "cache_section", "cache_keys",
    "column_break_ccov", "cache_memory_usage", "realtime_socketio_section", "socketio_ping_check", "column_break_hgay",
    "socketio_transport_mode", "section_break_ryki", "storage_usage_column", "public_files_size", "column_break_jnkt",
    "private_files_size", "backups_section", "backups_column", "onsite_backups", "column_break_luox", "backups_size",
    "users_section", "total_users", "new_users", "failed_logins", "active_sessions", "column_break_yfwd",
    "last_10_active_users", "section_break_udjs", "outgoing_emails_column", "total_outgoing_emails", "pending_emails",
    "failed_emails", "incoming_emails_last_7_days_column", "handled_emails", "unhandled_emails",
    "errors_generated_in_last_1_day_section", "total_errors", "top_errors", "column_break_fzke"
  ],
  "meta_text": "The 'System Health Report' doctype is part of the Desk module and provides a comprehensive overview of system performance and infrastructure metrics. It monitors components such as background jobs (`background_jobs_check`, `queue_status`), scheduler status, database health (`db_storage_usage`, `top_db_tables`), caching performance, file storage (`public_files_size`, `private_files_size`), backups, user activity, and email processing. This report helps administrators diagnose system issues, monitor workloads, and maintain optimal server performance for ERPNext deployments."
},
"Navbar Settings": {
  "module": "Core",
  "description": "Standard ERPNext doctype for Navbar Settings",
  "fields": [
    "logo_section", "app_logo", "section_break_2", "settings_dropdown", "help_dropdown",
    "announcements_section", "announcement_widget"
  ],
  "meta_text": "The 'Navbar Settings' doctype is part of the Core module and is used to customize the appearance and functionality of the ERPNext navigation bar. Key fields include `app_logo` for uploading a custom logo, and dropdown configurations like `settings_dropdown` and `help_dropdown`. It also supports announcements via the `announcement_widget`, making it useful for branding, usability improvements, and user engagement through the ERP interface."
},
"Tax Withholding Account": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Tax Withholding Account",
  "fields": ["company", "account"],
  "meta_text": "The 'Tax Withholding Account' doctype is part of the Accounts module and is used to link a company with a designated account for withholding tax purposes. The fields `company` and `account` help map the tax withholding to the appropriate ledger account, enabling accurate tax accounting and compliance tracking within ERPNext."
},
"Data Import Log": {
  "module": "Core",
  "description": "Standard ERPNext doctype for Data Import Log",
  "fields": ["data_import", "row_indexes", "success", "docname", "messages", "exception", "log_index"],
  "meta_text": "The 'Data Import Log' doctype is part of the Core module and is used to record the status of each row during data import operations. It logs the `data_import` reference, whether the row import was a `success`, and any associated `messages` or `exceptions`. This doctype helps administrators troubleshoot data migration and ensure clean data entry into the ERP system."
},
"OAuth Client Role": {
  "module": "Integrations",
  "description": "Standard ERPNext doctype for OAuth Client Role",
  "fields": ["role"],
  "meta_text": "The 'OAuth Client Role' doctype is part of the Integrations module and is used to define specific user roles that are allowed for OAuth clients. The single field `role` identifies the permitted role, which is essential for managing API access and enforcing authorization scopes across external applications."
},
"OAuth Client": {
  "module": "Integrations",
  "description": "Standard ERPNext doctype for OAuth Client",
  "fields": [
    "client_id", "app_name", "user", "allowed_roles", "cb_1", "client_secret",
    "skip_authorization", "sb_1", "scopes", "cb_3", "redirect_uris",
    "default_redirect_uri", "sb_advanced", "grant_type", "cb_2", "response_type"
  ],
  "meta_text": "The 'OAuth Client' doctype is part of the Integrations module and is used to register external applications that connect to ERPNext using OAuth2. Key fields like `client_id`, `client_secret`, and `redirect_uris` define how clients authenticate and where tokens are sent. Fields such as `allowed_roles` and `scopes` control access permissions, while `grant_type` and `response_type` define how authentication flows are managed. This doctype is essential for secure and controlled API integrations."
},
"Bank Reconciliation Tool": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Bank Reconciliation Tool",
  "fields": [
    "company", "bank_account", "column_break_1", "bank_statement_from_date", "bank_statement_to_date",
    "from_reference_date", "to_reference_date", "filter_by_reference_date", "column_break_2",
    "account_currency", "account_opening_balance", "bank_statement_closing_balance",
    "section_break_1", "reconciliation_tool_cards", "reconciliation_tool_dt", "no_bank_transactions"
  ],
  "meta_text": "The 'Bank Reconciliation Tool' doctype is part of the Accounts module and is used to reconcile ERPNext bank account entries with bank statements. Fields like `bank_account`, `bank_statement_from_date`, and `bank_statement_closing_balance` help users match bank transactions to ledger entries. It also supports filtering by `reference_date` and tracks unmatched or missing transactions. This tool is crucial for maintaining accurate cash flow records and identifying discrepancies."
},
"Raven Pinned Channels": {
  "module": "Raven",
  "description": "Standard ERPNext doctype for Raven Pinned Channels",
  "fields": ["channel_id"],
  "meta_text": "The 'Raven Pinned Channels' doctype is part of the Raven module and is used to store channels that a user has pinned for quick access. The field `channel_id` identifies the pinned conversation or group. This enhances user experience by allowing important channels to remain readily accessible within the messaging interface."
},
"Stock Reposting Settings": {
  "module": "Stock",
  "description": "Standard ERPNext doctype for Stock Reposting Settings",
  "fields": [
    "scheduling_section", "limit_reposting_timeslot", "start_time", "end_time", "limits_dont_apply_on",
    "item_based_reposting", "do_reposting_for_each_stock_transaction",
    "errors_notification_section", "notify_reposting_error_to_role"
  ],
  "meta_text": "The 'Stock Reposting Settings' doctype is part of the Stock module and is used to configure how and when stock values are reposted in ERPNext. Fields like `start_time`, `end_time`, and `limit_reposting_timeslot` define the time window for allowed reposts. It supports `item_based_reposting`, automatic reposting per transaction, and error notifications via role-based alerts. This doctype helps ensure accurate inventory valuation while avoiding performance issues during peak system hours."
},
"Project": {
  "module": "Projects",
  "description": "Standard ERPNext doctype for Project",
  "fields": [
    "naming_series", "project_name", "status", "project_type", "is_active", "percent_complete_method", "percent_complete",
    "project_template", "expected_start_date", "expected_end_date", "priority", "department", "customer", "sales_order",
    "users", "actual_start_date", "actual_end_date", "estimated_costing", "total_costing_amount", "total_purchase_cost",
    "total_sales_amount", "total_billable_amount", "total_billed_amount", "total_consumed_material_cost", "company",
    "cost_center", "gross_margin", "per_gross_margin", "monitor_progress", "holiday_list", "frequency"
  ],
  "meta_text": "The 'Project' doctype is part of the Projects module and is used to manage customer or internal projects. It tracks timelines (`expected_start_date`, `expected_end_date`), budgets (`total_costing_amount`, `total_sales_amount`), and status (`percent_complete`, `status`). Fields like `customer`, `sales_order`, and `users` enable collaboration and linking with sales. Cost tracking is integrated via `cost_center` and margin fields, making this doctype essential for planning, executing, and analyzing projects."
},
"Cost Center": {
  "module": "Accounts",
  "description": "Track separate Income and Expense for product verticals or divisions.",
  "fields": [
    "cost_center_name", "cost_center_number", "parent_cost_center", "company", "is_group",
    "disabled", "lft", "rgt", "old_parent"
  ],
  "meta_text": "The 'Cost Center' doctype is part of the Accounts module and is used to track financial transactions for different departments, divisions, or business units. Key fields like `cost_center_name`, `parent_cost_center`, and `company` define its scope and hierarchy. It supports tree structures for grouping (`is_group`, `lft`, `rgt`) and can be disabled or reassigned (`old_parent`). This doctype is crucial for internal reporting and budget allocation."
},
"Payment Reconciliation": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Payment Reconciliation",
  "fields": [
    "company", "party_type", "party", "receivable_payable_account", "default_advance_account",
    "from_invoice_date", "to_invoice_date", "from_payment_date", "to_payment_date",
    "invoice_limit", "payment_limit", "bank_cash_account", "cost_center", "invoice_name", "invoices",
    "payment_name", "payments", "allocation"
  ],
  "meta_text": "The 'Payment Reconciliation' doctype is part of the Accounts module and is used to match payments with invoices. It allows users to filter by date (`from_invoice_date`, `to_payment_date`) and set thresholds (`invoice_limit`, `payment_limit`). It supports reconciliation for customers or suppliers (`party_type`, `party`) and links payments and invoices directly. This doctype helps automate and streamline financial closing processes."
},
"System Health Report Failing Jobs": {
  "module": "Desk",
  "description": "Standard ERPNext doctype for System Health Report Failing Jobs",
  "fields": ["scheduled_job_type", "failure_rate"],
  "meta_text": "The 'System Health Report Failing Jobs' doctype is part of the Desk module and is used to track scheduled jobs with high failure rates. Fields like `scheduled_job_type` and `failure_rate` highlight system reliability issues, enabling administrators to take corrective actions. This doctype is essential for monitoring background task stability in ERPNext."
},
"System Health Report Errors": {
  "module": "Desk",
  "description": "Standard ERPNext doctype for System Health Report Errors",
  "fields": ["title", "occurrences"],
  "meta_text": "The 'System Health Report Errors' doctype is part of the Desk module and records the most frequent errors in ERPNext. Fields like `title` describe the error, and `occurrences` count how often it appears. This helps system administrators prioritize bug fixes and stability improvements."
},
"System Health Report Queue": {
  "module": "Desk",
  "description": "Standard ERPNext doctype for System Health Report Queue",
  "fields": ["queue", "pending_jobs"],
  "meta_text": "The 'System Health Report Queue' doctype is part of the Desk module and provides visibility into background job queues. The `queue` field identifies the queue type (e.g., default, short, long), and `pending_jobs` indicates how many tasks are waiting. This helps administrators assess system load and job processing health."
},
"System Health Report Tables": {
  "module": "Desk",
  "description": "Standard ERPNext doctype for System Health Report Tables",
  "fields": ["table", "size"],
  "meta_text": "The 'System Health Report Tables' doctype is part of the Desk module and lists database tables with their sizes. The `table` field holds the name of the table, while `size` tracks its storage usage. This is essential for monitoring database growth and optimizing storage."
},
"System Health Report Workers": {
  "module": "Desk",
  "description": "Standard ERPNext doctype for System Health Report Workers",
  "fields": ["queues", "count", "utilization", "failed_jobs"],
  "meta_text": "The 'System Health Report Workers' doctype belongs to the Desk module and tracks background workers in the ERPNext system. It captures `queues` assigned to workers, the number of active workers (`count`), their resource `utilization`, and any `failed_jobs`. This helps in identifying resource bottlenecks and job failures."
},
"Lower Deduction Certificate": {
  "module": "Regional",
  "description": "Standard ERPNext doctype for Lower Deduction Certificate",
  "fields": [
    "tax_withholding_category", "fiscal_year", "company", "certificate_no",
    "supplier", "pan_no", "valid_from", "valid_upto", "rate", "certificate_limit"
  ],
  "meta_text": "The 'Lower Deduction Certificate' doctype is part of the Regional module and is used to manage certificates that authorize lower TDS (Tax Deducted at Source) rates. It records information like `tax_withholding_category`, `supplier`, and certificate validity (`valid_from`, `valid_upto`). This doctype is essential for compliance with regional tax laws and for accurate withholding during payments."
},
"Web Form Field": {
  "module": "Website",
  "description": "Standard ERPNext doctype for Web Form Field",
  "fields": [
    "fieldname", "fieldtype", "label", "reqd", "read_only", "show_in_filter", "hidden",
    "options", "max_length", "depends_on", "mandatory_depends_on", "read_only_depends_on", "default"
  ],
  "meta_text": "The 'Web Form Field' doctype is part of the Website module and defines individual fields in a web form. It includes `fieldname` and `fieldtype` for technical setup, and `label`, `reqd`, `read_only`, and `default` for user-facing configuration. Fields like `depends_on` and `mandatory_depends_on` control dynamic behavior. This doctype enables flexible form customization on websites built with ERPNext."
},
"Web Page": {
  "module": "Website",
  "description": "Page to show on the website",
  "fields": ["section_title", "title", "route", "dynamic_route", "cb1", "published", "module", "sb1", "content_type", "slideshow", "dynamic_template", "main_section", "main_section_md", "main_section_html", "page_blocks", "scripting_tab", "context_section", "context_script", "custom_javascript", "javascript", "custom_css", "insert_style", "text_align", "css", "full_width", "show_title", "settings", "publishing_dates_section", "start_date", "column_break_30", "end_date", "metatags_section", "meta_title", "meta_description", "meta_image", "set_meta_tags", "section_break_17", "show_sidebar", "idx", "website_sidebar", "column_break_20", "enable_comments", "sb2", "header", "breadcrumbs"],
  "meta_text": "The 'Web Page' doctype is part of the Website module and is used to define and manage individual pages displayed on the website. Key fields like `title`, `route`, and `published` control the page name, URL path, and visibility status. Content can be entered using `main_section`, `main_section_md`, or `main_section_html`, or managed modularly with `page_blocks`. Design and behavior enhancements are possible through `custom_javascript`, `custom_css`, `context_script`, and layout controls like `text_align` and `full_width`. The doctype also supports scheduling visibility via `start_date` and `end_date`, SEO optimization through `meta_title`, `meta_description`, and `meta_image`, and user engagement options like `enable_comments` and `show_sidebar`. This doctype is essential for building flexible, content-rich pages within ERPNext's website module."
},
"Letter Head": {
  "module": "Printing",
  "description": "Standard ERPNext doctype for Letter Head",
  "fields": ["letter_head_name", "source", "footer_source", "column_break_3", "disabled", "is_default", "letter_head_image_section", "image", "image_height", "image_width", "align", "header_section", "content", "footer_section", "footer", "footer_image_section", "footer_image", "footer_image_height", "footer_image_width", "footer_align", "scripts_section", "header_script", "footer_script", "instructions"],
  "meta_text": "The 'Letter Head' doctype is part of the Printing module and is used to define letterhead templates for print formats. Key fields like `image`, `content`, and `footer` enable customization of the letterhead's header and footer. Users can also control formatting with `align`, `image_width`, `image_height`, and apply scripts using `header_script` and `footer_script`. This doctype supports enabling/disabling via `disabled` and setting a default using `is_default`. It is essential for creating branded and consistent printed documents in ERPNext."
},
"Ledger Health": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Ledger Health",
  "fields": ["voucher_type", "voucher_no", "checked_on", "debit_credit_mismatch", "general_and_payment_ledger_mismatch"],
  "meta_text": "The 'Ledger Health' doctype belongs to the Accounts module and is used to validate the consistency of ledger entries. Key fields such as `voucher_type` and `voucher_no` identify the transaction being checked, while `debit_credit_mismatch` and `general_and_payment_ledger_mismatch` flag discrepancies. This doctype helps ensure financial integrity by highlighting ledger issues that may need correction or further investigation."
},
"Purchase Taxes and Charges": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Purchase Taxes and Charges",
  "fields": [
    "category", "add_deduct_tax", "charge_type", "row_id", "included_in_print_rate", 
    "included_in_paid_amount", "account_head", "description", "is_tax_withholding_account", 
    "rate", "cost_center", "account_currency", "tax_amount", "tax_amount_after_discount_amount", 
    "total", "base_tax_amount", "base_total", "base_tax_amount_after_discount_amount", 
    "item_wise_tax_detail"
  ],
  "meta_text": "The 'Purchase Taxes and Charges' doctype is part of the Accounts module and defines tax and charge rules for purchase transactions. Key fields include `charge_type`, `rate`, and `account_head`, which specify the type, value, and posting account for the charge. Options like `included_in_print_rate` and `included_in_paid_amount` determine how taxes are reflected in print and payment values. This doctype supports both regular and withholding tax setups and enables detailed cost center tracking and item-wise tax configuration."
},
"Changelog Feed": {
  "module": "Desk",
  "description": "Standard ERPNext doctype for Changelog Feed",
  "fields": ["title", "app_name", "link", "posting_timestamp"],
  "meta_text": "The 'Changelog Feed' doctype belongs to the Desk module and captures updates or version logs for ERP apps. Each record stores a `title`, associated `app_name`, a `link` to full details, and a `posting_timestamp` for tracking when the change was published. It helps keep users informed of feature rollouts and bug fixes across modules."
},
"Server Script": {
  "module": "Core",
  "description": "Standard ERPNext doctype for Server Script",
  "fields": [
    "script_type", "reference_doctype", "event_frequency", "cron_format", "doctype_event",
    "api_method", "allow_guest", "module", "disabled", "script",
    "enable_rate_limit", "rate_limit_count", "rate_limit_seconds"
  ],
  "meta_text": "The 'Server Script' doctype in ERPNext allows developers to write and execute custom backend scripts directly within the ERP system. It supports multiple script types like DocType events, API methods, and scheduled (cron) jobs. Important fields include `script_type` (type of script), `reference_doctype` (target document), and `script` (the executable code). It also supports rate limiting with fields like `rate_limit_count` and `rate_limit_seconds`, and guest access control with `allow_guest`."
},

"Raven Poll Vote": {
  "module": "Raven Messaging",
  "description": "Standard ERPNext doctype for Raven Poll Vote",
  "fields": [
    "user_id", "poll_id", "option"
  ],
  "meta_text": "The 'Raven Poll Vote' doctype captures voting activity within the Raven Messaging system. Each entry links a `user_id` to a specific `poll_id` and stores the selected `option`. This doctype helps track participation and results in message-driven polls."
},
"Payment Terms Template": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Payment Terms Template",
  "fields": [
    "template_name",
    "allocate_payment_based_on_payment_terms",
    "terms"
  ],
  "meta_text": "The 'Payment Terms Template' doctype allows businesses to define structured payment plans for sales or purchases. Key fields include `template_name` (the title of the template), `allocate_payment_based_on_payment_terms` (which indicates if payments should be split as per defined terms), and `terms` (a child table detailing individual payment terms)."
},

"Item Price": {
  "module": "Stock",
  "description": "Log the selling and buying rate of an Item",
  "fields": [
    "item_code", "uom", "packing_unit", "item_name", "brand", "item_description",
    "price_list", "customer", "supplier", "batch_no", "buying", "selling",
    "currency", "price_list_rate", "valid_from", "valid_upto", "lead_time_days",
    "note", "reference"
  ],
  "meta_text": "The 'Item Price' doctype is used to record selling and buying prices of individual items in ERPNext. It supports pricing based on `price_list`, `customer`, or `supplier`, and includes fields like `price_list_rate`, `currency`, and `valid_from/valid_upto` for pricing validity. This doctype helps maintain accurate, time-bound price records tied to specific batches or units of measure."
},

"Raven Poll Option": {
  "module": "Raven Messaging",
  "description": "Standard ERPNext doctype for Raven Poll Option",
  "fields": [
    "option", "votes"
  ],
  "meta_text": "The 'Raven Poll Option' doctype defines individual options within a poll created in the Raven Messaging system. Each `option` field represents a selectable response, and `votes` tracks the number of votes it has received. This doctype is essential for handling user interactions in polls and summarizing results."
},
"Purchase Taxes and Charges": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Purchase Taxes and Charges",
  "fields": [
    "category", "add_deduct_tax", "charge_type", "account_head", "rate",
    "tax_amount", "base_tax_amount", "cost_center", "item_wise_tax_detail"
  ],
  "meta_text": "The 'Purchase Taxes and Charges' doctype is part of the Accounts module and defines how taxes and charges are applied on purchase transactions. Fields like `charge_type`, `rate`, and `account_head` control the tax computation, while `category` distinguishes the nature of the charge. `item_wise_tax_detail` helps allocate taxes per item, and `cost_center` links the charge to accounting dimensions."
},

"Changelog Feed": {
  "module": "Desk",
  "description": "Standard ERPNext doctype for Changelog Feed",
  "fields": [
    "title", "app_name", "link", "posting_timestamp"
  ],
  "meta_text": "The 'Changelog Feed' doctype stores update logs for ERPNext or custom apps. It includes `title` (summary of change), `app_name` (app updated), `link` (reference URL), and `posting_timestamp` (time of update). Useful for tracking feature additions and system improvements."
},

"Server Script": {
  "module": "Core",
  "description": "Standard ERPNext doctype for Server Script",
  "fields": [
    "script_type", "reference_doctype", "doctype_event", "api_method", "script",
    "event_frequency", "cron_format", "allow_guest", "enable_rate_limit"
  ],
  "meta_text": "The 'Server Script' doctype allows users to create custom backend logic in ERPNext. It supports various `script_type` modes like API, Scheduler, or DocType Event. Fields like `script`, `doctype_event`, and `api_method` define when and how the logic runs, while options like `allow_guest` and `enable_rate_limit` control access and performance."
},

"Raven Poll Vote": {
  "module": "Raven Messaging",
  "description": "Standard ERPNext doctype for Raven Poll Vote",
  "fields": [
    "user_id", "poll_id", "option"
  ],
  "meta_text": "The 'Raven Poll Vote' doctype records each user's vote in a Raven messaging system poll. Key fields include `user_id` (who voted), `poll_id` (which poll), and `option` (chosen response). This helps collect and analyze user feedback via polls."
},
"Payment Terms Template": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Payment Terms Template",
  "fields": [
    "template_name", "allocate_payment_based_on_payment_terms", "terms"
  ],
  "meta_text": "The 'Payment Terms Template' doctype is part of the Accounts module and is used to define structured payment schedules for invoices. It includes `template_name` (the name of the template), `terms` (the schedule of payments), and a flag `allocate_payment_based_on_payment_terms` to determine if allocation should happen automatically based on the terms. This ensures consistent payment tracking and accounting."
},

"Item Price": {
  "module": "Stock",
  "description": "Log the selling and buying rate of an Item",
  "fields": [
    "item_code", "item_name", "uom", "brand", "price_list", "buying", "selling", 
    "currency", "price_list_rate", "valid_from", "valid_upto", "note"
  ],
  "meta_text": "The 'Item Price' doctype is part of the Stock module and is used to log and manage the selling and buying rates of an item. Key fields include `item_code` (the item), `price_list` (associated price list), `currency`, and `price_list_rate`. The fields `buying` and `selling` specify the context, while `valid_from` and `valid_upto` define the validity period. This doctype helps maintain accurate and time-bound item pricing."
},

"Raven Poll Option": {
  "module": "Raven Messaging",
  "description": "Standard ERPNext doctype for Raven Poll Option",
  "fields": [
    "option", "votes"
  ],
  "meta_text": "The 'Raven Poll Option' doctype is part of the Raven Messaging module and defines possible answer choices in a poll. It includes the `option` (answer choice) and `votes` (number of votes received). This doctype helps track poll participation and analyze results effectively."
},
"Raven Poll": {
  "module": "Raven Messaging",
  "description": "Standard ERPNext doctype for Raven Poll",
  "fields": [
    "question", "options", "is_anonymous", "is_multi_choice", "is_disabled", "total_votes"
  ],
  "meta_text": "The 'Raven Poll' doctype is part of the Raven Messaging module and is used to create interactive polls. It includes the `question`, multiple `options`, and flags such as `is_anonymous` and `is_multi_choice` to control voting behavior. The `total_votes` field shows overall participation. This doctype supports collaborative feedback gathering in messaging workflows."
},

"Subcontracting Receipt Supplied Item": {
  "module": "Subcontracting",
  "description": "Standard ERPNext doctype for Subcontracting Receipt Supplied Item",
  "fields": [
    "main_item_code", "rm_item_code", "item_name", "description", "stock_uom", "conversion_factor", "rate", 
    "amount", "required_qty", "consumed_qty", "serial_no", "batch_no", "subcontracting_order"
  ],
  "meta_text": "The 'Subcontracting Receipt Supplied Item' doctype is part of the Subcontracting module and logs raw materials supplied to subcontractors. Key fields include `rm_item_code` (raw material), `required_qty`, `consumed_qty`, and cost fields like `rate` and `amount`. `serial_no` and `batch_no` support tracking, while `subcontracting_order` links it to the main process. This ensures material traceability and valuation during subcontracting."
},

"Supplier Quotation": {
  "module": "Buying",
  "description": "Standard ERPNext doctype for Supplier Quotation",
  "fields": [
    "title", "supplier", "company", "transaction_date", "valid_till", "currency", "conversion_rate", 
    "items", "total", "net_total", "taxes_and_charges", "grand_total", "rounded_total", "in_words", 
    "supplier_address", "contact_person", "shipping_address", "billing_address", "tc_name", "terms"
  ],
  "meta_text": "The 'Supplier Quotation' doctype is part of the Buying module and manages quotations received from suppliers. It includes core fields like `supplier`, `transaction_date`, `items`, and `taxes_and_charges`. Totals are computed through `grand_total`, `rounded_total`, and `in_words`. Address and contact fields support communication, while `tc_name` and `terms` handle compliance. It facilitates comparative supplier analysis and purchase planning."
},
"Ledger Health Monitor": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Ledger Health Monitor",
  "fields": ["enable_health_monitor", "monitor_for_last_x_days", "debit_credit_mismatch", "general_and_payment_ledger_mismatch", "companies"],
  "meta_text": "The 'Ledger Health Monitor' doctype is part of the Accounts module and is used to monitor ledger health over a specified number of days. It tracks mismatches in debit-credit entries and discrepancies between general and payment ledgers, helping ensure financial data accuracy across specified companies."
},

"Ledger Health Monitor Company": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Ledger Health Monitor Company",
  "fields": ["company"],
  "meta_text": "The 'Ledger Health Monitor Company' doctype specifies the companies included in ledger health monitoring. It links directly to the 'Ledger Health Monitor' doctype to allow company-specific tracking of financial inconsistencies."
},

"Transaction Deletion Record": {
  "module": "Setup",
  "description": "Standard ERPNext doctype for Transaction Deletion Record",
  "fields": ["company", "status", "error_log", "delete_bin_data", "delete_leads_and_addresses", "reset_company_default_values", "clear_notifications", "delete_transactions", "doctypes", "doctypes_to_be_ignored", "process_in_single_transaction"],
  "meta_text": "The 'Transaction Deletion Record' doctype in the Setup module is used to manage and log mass deletion of transactional data. It supports operations like deleting leads, bin data, resetting defaults, and selectively clearing doctypes, ensuring traceability and control over data cleanup processes."
},

"Purchase Order": {
  "module": "Buying",
  "description": "Standard ERPNext doctype for Purchase Order",
  "fields": ["title", "supplier", "transaction_date", "schedule_date", "company", "is_subcontracted", "items", "total", "net_total", "taxes_and_charges", "grand_total", "rounded_total", "in_words", "supplier_address", "shipping_address", "contact_person", "payment_schedule", "tc_name", "terms", "status", "currency", "conversion_rate", "project", "cost_center"],
  "meta_text": "The 'Purchase Order' doctype is part of the Buying module and is used to record formal purchase commitments with suppliers. It includes fields like `supplier`, `transaction_date`, `items`, and `taxes_and_charges` to manage order contents and financials. Fields like `shipping_address`, `contact_person`, and `payment_schedule` support logistics and terms. Totals (`grand_total`, `in_words`) assist in documentation and accounting integration."
},
"Currency Exchange Settings": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Currency Exchange Settings",
  "fields": ["disabled", "service_provider", "api_endpoint", "use_http", "access_key", "url", "req_params", "result_key"],
  "meta_text": "The 'Currency Exchange Settings' doctype is used to configure API-based currency exchange rate updates. It includes fields like `service_provider`, `api_endpoint`, and `access_key` to connect to external services. The `result_key` and `req_params` fields help map the API response for rate extraction."
},

"Console Log": {
  "module": "Desk",
  "description": "Standard ERPNext doctype for Console Log",
  "fields": ["script", "type", "committed"],
  "meta_text": "The 'Console Log' doctype logs debug or execution scripts within the ERP system. It stores the `script` executed, its `type`, and whether the result was `committed`. Useful for tracking backend operations or custom script executions."
},

"Prepared Report": {
  "module": "Core",
  "description": "Standard ERPNext doctype for Prepared Report",
  "fields": ["status", "report_name", "queued_by", "job_id", "queued_at", "report_end_time", "error_message", "filters", "filter_values"],
  "meta_text": "The 'Prepared Report' doctype stores reports generated asynchronously. Key fields include `report_name`, `queued_by`, `status`, and `job_id` for tracking progress. It also logs filters and errors, allowing users to download or review large reports later."
},

"Shipment Parcel": {
  "module": "Stock",
  "description": "Standard ERPNext doctype for Shipment Parcel",
  "fields": ["length", "width", "height", "weight", "count"],
  "meta_text": "The 'Shipment Parcel' doctype captures physical details of a shipment, such as `length`, `width`, `height`, and `weight`. It is used in logistics or courier integrations to manage parcel data during shipping."
},

"Asset Capitalization Service Item": {
  "module": "Assets",
  "description": "Standard ERPNext doctype for Asset Capitalization Service Item",
  "fields": ["item_code", "item_name", "expense_account", "qty", "uom", "rate", "amount", "cost_center"],
  "meta_text": "The 'Asset Capitalization Service Item' doctype records service-based expenses tied to asset capitalization. It includes fields like `item_code`, `qty`, `rate`, and `expense_account` to reflect financial value contributed by services to an asset."
},

"Budget Account": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Budget Account",
  "fields": ["account", "budget_amount"],
  "meta_text": "The 'Budget Account' doctype defines a budget for a specific account. It includes `account` and `budget_amount`, supporting financial planning and budget enforcement across departments or projects."
},

"RQ Worker": {
  "module": "Core",
  "description": "Standard ERPNext doctype for RQ Worker",
  "fields": ["queue", "queue_type", "worker_name", "status", "pid", "current_job_id", "successful_job_count", "failed_job_count", "birth_date", "last_heartbeat", "total_working_time", "utilization_percent"],
  "meta_text": "The 'RQ Worker' doctype tracks background job workers running in the system. It logs metadata like `queue`, `worker_name`, `status`, and performance metrics such as `successful_job_count` and `utilization_percent`, useful for system diagnostics."
},

"Push Notification Settings": {
  "module": "Integrations",
  "description": "Enables push notifications via Firebase Cloud Messaging for installed ERP apps.",
  "fields": ["enable_push_notification_relay", "api_key", "api_secret"],
  "meta_text": "The 'Push Notification Settings' doctype enables and configures push notifications for ERPNext apps. It connects to a relay server using `api_key` and `api_secret` for Firebase Cloud Messaging integration, allowing user devices to receive real-time alerts."
},
"Production Plan Sub Assembly Item": {
  "module": "Manufacturing",
  "description": "Standard ERPNext doctype for Production Plan Sub Assembly Item",
  "fields": ["production_item", "item_name", "fg_warehouse", "parent_item_code", "schedule_date", "qty", "bom_no", "bom_level", "type_of_manufacturing", "supplier", "wo_produced_qty", "purchase_order", "production_plan_item", "received_qty", "indent", "uom", "stock_uom", "description", "actual_qty", "projected_qty"],
  "meta_text": "The 'Production Plan Sub Assembly Item' doctype represents sub-assembly items used in production planning. Key fields include `production_item`, `bom_no`, `schedule_date`, and `qty`, allowing users to track planning, sourcing, and inventory levels of component parts in manufacturing workflows."
},

"Landed Cost Purchase Receipt": {
  "module": "Stock",
  "description": "Standard ERPNext doctype for Landed Cost Purchase Receipt",
  "fields": ["receipt_document_type", "receipt_document", "supplier", "posting_date", "grand_total"],
  "meta_text": "The 'Landed Cost Purchase Receipt' doctype is used to record additional costs incurred during purchase, such as customs or freight charges. It links to a purchase receipt via `receipt_document`, and captures the `grand_total` after landed cost adjustments."
},

"Material Request Item": {
  "module": "Stock",
  "description": "Standard ERPNext doctype for Material Request Item",
  "fields": ["item_code", "item_name", "schedule_date", "description", "item_group", "brand", "qty", "stock_uom", "from_warehouse", "warehouse", "uom", "conversion_factor", "stock_qty", "min_order_qty", "projected_qty", "actual_qty", "ordered_qty", "received_qty", "rate", "price_list_rate", "amount", "expense_account", "manufacturer", "manufacturer_part_no", "bom_no", "project", "cost_center", "lead_time_date", "sales_order", "production_plan"],
  "meta_text": "The 'Material Request Item' doctype records each item requested within a Material Request. It includes inventory, pricing, and sourcing data like `item_code`, `qty`, `warehouse`, and `rate`, and links to documents such as BOMs, Sales Orders, and Projects."
},

"Stock Entry Detail": {
  "module": "Stock",
  "description": "Standard ERPNext doctype for Stock Entry Detail",
  "fields": ["s_warehouse", "t_warehouse", "item_code", "item_name", "is_finished_item", "is_scrap_item", "quality_inspection", "description", "item_group", "qty", "transfer_qty", "uom", "stock_uom", "conversion_factor", "basic_rate", "valuation_rate", "amount", "serial_no", "batch_no", "expense_account", "cost_center", "project", "actual_qty", "bom_no", "material_request", "original_item", "reference_purchase_receipt", "job_card_item"],
  "meta_text": "The 'Stock Entry Detail' doctype is used for each item line in a stock movement. It handles transfers, manufacturing entries, and returns. Core fields include `item_code`, `s_warehouse`, `t_warehouse`, `qty`, and cost-related values like `basic_rate`, `amount`, and `valuation_rate`, with traceability via serials, batches, and references."
},
"Activity Log": {
  "module": "Core",
  "description": "Keep track of all update feeds",
  "fields": ["subject", "content", "communication_date", "ip_address", "operation", "status", "reference_doctype", "reference_name", "reference_owner", "timeline_doctype", "timeline_name", "link_doctype", "link_name", "user", "full_name"],
  "meta_text": "The 'Activity Log' doctype tracks user activities and system operations within ERPNext. It captures key fields such as `subject`, `operation`, `reference_doctype`, `user`, and `ip_address`, providing a detailed audit trail of actions for accountability and debugging."
},

"Raven Webhook": {
  "module": "Raven Integrations",
  "description": "Standard ERPNext doctype for Raven Webhook",
  "fields": ["enabled", "channel_id", "user", "channel_type", "condition", "webhook_trigger", "request_url", "timeout", "is_dynamic_url", "enable_security", "webhook_secret", "webhook_headers", "webhook_data"],
  "meta_text": "The 'Raven Webhook' doctype defines integrations with external systems triggered by events. It includes fields like `enabled`, `channel_id`, `request_url`, and `webhook_data` to configure and secure outbound webhook requests based on user-defined conditions."
},

"Raven Mention": {
  "module": "Raven Messaging",
  "description": "Standard ERPNext doctype for Raven Mention",
  "fields": ["user"],
  "meta_text": "The 'Raven Mention' doctype records instances where a user is mentioned in a Raven message. It includes a single field `user` to capture the referenced individual, helping in highlighting or notifying mentions in messaging threads."
},

"Serial and Batch Entry": {
  "module": "Stock",
  "description": "Standard ERPNext doctype for Serial and Batch Entry",
  "fields": ["serial_no", "batch_no", "qty", "warehouse", "delivered_qty", "incoming_rate", "outgoing_rate", "stock_value_difference", "is_outward", "stock_queue"],
  "meta_text": "The 'Serial and Batch Entry' doctype is used to track serial numbers and batch-specific transactions in inventory. Fields like `serial_no`, `batch_no`, `qty`, and `warehouse` help in ensuring traceability and accurate stock valuation adjustments."
},

"Blanket Order Item": {
  "module": "Manufacturing",
  "description": "Standard ERPNext doctype for Blanket Order Item",
  "fields": ["item_code", "item_name", "party_item_code", "qty", "rate", "ordered_qty", "terms_and_conditions"],
  "meta_text": "The 'Blanket Order Item' doctype defines line items within a blanket order. It includes key fields like `item_code`, `qty`, `rate`, and `ordered_qty`, enabling businesses to manage long-term supply agreements with predefined pricing and quantities."
},
"Material Request Plan Item": {
  "module": "Manufacturing",
  "description": "Standard ERPNext doctype for Material Request Plan Item",
  "fields": ["item_code", "from_warehouse", "warehouse", "item_name", "material_request_type", "quantity", "required_bom_qty", "schedule_date", "uom", "conversion_factor", "description", "sales_order", "actual_qty", "requested_qty", "reserved_qty_for_production", "ordered_qty", "projected_qty", "safety_stock"],
  "meta_text": "The 'Material Request Plan Item' doctype is part of the Manufacturing module and is used to define individual item plans for material requests. Key fields include `item_code`, `warehouse`, `quantity`, and `required_bom_qty` to manage procurement planning. Additional fields like `sales_order`, `projected_qty`, and `safety_stock` help ensure material availability for production."
},

"Work Order": {
  "module": "Manufacturing",
  "description": "Standard ERPNext doctype for Work Order",
  "fields": ["item", "production_item", "bom_no", "company", "qty", "produced_qty", "project", "source_warehouse", "wip_warehouse", "fg_warehouse", "scrap_warehouse", "planned_start_date", "planned_end_date", "expected_delivery_date", "actual_start_date", "actual_end_date", "operations", "material_request", "production_plan"],
  "meta_text": "The 'Work Order' doctype is used to manage manufacturing jobs in ERPNext. Important fields include `item`, `bom_no`, `qty`, and `company` to define what and how much to produce. Warehousing fields like `source_warehouse`, `wip_warehouse`, and `fg_warehouse` help control material flow. Dates such as `planned_start_date` and `actual_end_date` assist in tracking progress, while `operations` and `production_plan` ensure integration with routing and planning."
},

"Communication": {
  "module": "Core",
  "description": "Keeps track of all communications",
  "fields": ["subject", "communication_medium", "sender", "recipients", "cc", "bcc", "phone_no", "content", "status", "communication_type", "communication_date", "reference_doctype", "reference_name", "email_account", "user", "email_status", "has_attachment", "rating"],
  "meta_text": "The 'Communication' doctype records interactions such as emails, calls, or comments in ERPNext. Core fields include `subject`, `sender`, `recipients`, and `content`. Reference fields like `reference_doctype` and `reference_name` link communications to ERP documents. It also tracks status (`status`, `email_status`), medium (`communication_medium`), and feedback (`rating`) for complete traceability."
},
  "Auto Email Report": {
    "module": "Email",
    "description": "Standard ERPNext doctype for Auto Email Report",
    "fields": ["report", "user", "enabled", "report_type", "reference_report", "send_if_data", "data_modified_till", "no_of_rows", "from_date_field", "to_date_field", "dynamic_date_period", "use_first_day_of_period", "email_to", "day_of_week", "sender", "frequency", "format", "description"],
    "meta_text": "The 'Auto Email Report' doctype is used to schedule and send reports via email at specified intervals. It allows specifying the report type, filtering options, recipients (`email_to`), and delivery timing (`frequency`, `day_of_week`). Fields like `report`, `user`, and `enabled` help configure and activate the report. The document supports conditional sending based on whether data exists (`send_if_data`) and dynamic date filters."
  },

  "Transaction Deletion Record Item": {
    "module": "Setup",
    "description": "Standard ERPNext doctype for Transaction Deletion Record Item",
    "fields": ["doctype_name"],
    "meta_text": "The 'Transaction Deletion Record Item' doctype stores the name of doctypes selected for deletion during transaction cleanup processes in ERPNext. It plays a supporting role in system maintenance operations where records are removed systematically."
  },

  "Buying Settings": {
    "module": "Buying",
    "description": "Standard ERPNext doctype for Buying Settings",
    "fields": ["supp_master_name", "supplier_group", "buying_price_list", "po_required", "pr_required", "blanket_order_allowance", "maintain_same_rate", "allow_multiple_items", "bill_for_rejected_quantity_in_purchase_invoice", "disable_last_purchase_rate", "subcontract", "backflush_raw_materials_of_subcontract_based_on", "over_transfer_allowance", "auto_create_subcontracting_order", "auto_create_purchase_receipt"],
    "meta_text": "The 'Buying Settings' doctype configures global defaults and restrictions for purchase-related documents. Key settings include defaults like `buying_price_list`, supplier naming (`supp_master_name`), and toggles for PO/PR requirements (`po_required`, `pr_required`). Automation preferences (`auto_create_subcontracting_order`) and compliance settings (`maintain_same_rate`, `bill_for_rejected_quantity_in_purchase_invoice`) help enforce purchasing rules and improve workflow efficiency."
  },

  "Data Import": {
    "module": "Core",
    "description": "Standard ERPNext doctype for Data Import",
    "fields": ["reference_doctype", "import_type", "import_file", "google_sheets_url", "refresh_google_sheet", "status", "submit_after_import", "mute_emails"],
    "meta_text": "The 'Data Import' doctype facilitates bulk data uploading into ERPNext. Users define the `reference_doctype` and `import_type`, then provide a file (`import_file`) or Google Sheet for processing. Fields like `status`, `submit_after_import`, and `mute_emails` control import behavior and notifications."
  },

  "Price List": {
    "module": "Stock",
    "description": "A Price List is a collection of Item Prices either Selling, Buying, or both",
    "fields": ["price_list_name", "currency", "buying", "selling", "enabled", "price_not_uom_dependent", "countries"],
    "meta_text": "The 'Price List' doctype defines a catalog of item prices used in buying or selling transactions. It includes core attributes such as `price_list_name`, `currency`, and flags for whether it's applicable for buying or selling. The `enabled` flag activates the list, and `countries` restricts it geographically. This doctype supports price management across business units."
  },
    "Blog Settings": {
      "module": "Website",
      "description": "Settings to control blog categories and interactions like comments and likes",
      "fields": ["blog_title", "blog_introduction", "preview_image", "enable_social_sharing", "allow_guest_to_comment", "browse_by_category", "show_cta_in_blog", "cta_label", "cta_url", "like_limit", "comment_limit"],
      "meta_text": "The 'Blog Settings' doctype configures how blogs are presented on the ERPNext website. It allows defining introductory content (`blog_title`, `blog_introduction`), enabling features like social sharing and guest comments, and customizing call-to-action elements (`cta_label`, `cta_url`). Limits for likes and comments ensure controlled interaction."
    },
  
    "Item Group": {
      "module": "Setup",
      "description": "An Item Group is a way to classify items based on types.",
      "fields": ["item_group_name", "parent_item_group", "is_group", "image", "item_group_defaults", "taxes"],
      "meta_text": "The 'Item Group' doctype organizes inventory into logical classifications. It defines group hierarchy via `parent_item_group`, allows tax configuration (`taxes`), and supports default settings (`item_group_defaults`). Grouping items simplifies item management and reporting."
    },
  
    "Monthly Distribution": {
      "module": "Accounts",
      "description": "Helps you distribute the Budget/Target across months if you have seasonality in your business.",
      "fields": ["distribution_id", "fiscal_year", "percentages"],
      "meta_text": "The 'Monthly Distribution' doctype helps allocate annual budgets or targets across months, based on business seasonality. It uses the `percentages` field to define how values are distributed over a fiscal year."
    },

"Sales Person": {
"module": "Setup",
"description": "All Sales Transactions can be tagged against multiple Sales Persons so that you can set and monitor targets.",
"fields": ["sales_person_name", "parent_sales_person", "commission_rate", "is_group", "enabled", "employee", "department", "targets"],
"meta_text": "The 'Sales Person' doctype tracks sales hierarchy and performance. It includes the sales person's name, group configuration (`parent_sales_person`, `is_group`), and target assignments (`targets`). Linking to employees and departments enables structured tracking and reporting."
},

"Product Bundle": {
"module": "Selling",
"description": "Aggregate a group of Items into another Item. This is useful if you are maintaining the stock of the packed items and not the bundled item",
"fields": ["new_item_code", "description", "disabled", "items"],
"meta_text": "The 'Product Bundle' doctype allows combining multiple items into a single bundle (`new_item_code`). It’s useful when inventory is maintained at the component level rather than the assembled product. The `items` table defines the bundle composition."
},
"Currency": {
"module": "Geo",
"description": "Currency list stores the currency value, its symbol and fraction unit",
"fields": ["currency_name", "enabled", "fraction", "fraction_units", "smallest_currency_fraction_value", "symbol", "symbol_on_right", "number_format"],
"meta_text": "The 'Currency' doctype defines currency settings such as its symbol, fraction units (like cents or paise), and display format. It ensures accurate financial representation and formatting in ERP transactions."
},

"Purchase Taxes and Charges Template": {
"module": "Accounts",
"description": "Standard tax template that can be applied to all Purchase Transactions.",
"fields": ["title", "is_default", "disabled", "company", "tax_category", "taxes"],
"meta_text": "The 'Purchase Taxes and Charges Template' doctype allows defining reusable tax templates for purchase transactions. It includes tax heads like VAT, shipping, and insurance, and links to a company and tax category for consistent application."
},

"Sales Taxes and Charges Template": {
"module": "Accounts",
"description": "Standard tax template that can be applied to all Sales Transactions.",
"fields": ["title", "is_default", "disabled", "company", "tax_category", "taxes"],
"meta_text": "The 'Sales Taxes and Charges Template' doctype enables users to define standardized tax and charge structures for sales documents. It supports configuration of default tax rules, associated company, and tax category."
},

"Terms and Conditions": {
"module": "Setup",
"description": "Standard Terms and Conditions that can be added to Sales and Purchases.",
"fields": ["title", "disabled", "selling", "buying", "terms"],
"meta_text": "The 'Terms and Conditions' doctype stores standard contract clauses to be appended to sales and purchase transactions. This includes payment terms, warranty conditions, and other business policies."
},

"Sales Invoice Payment": {
"module": "Accounts",
"description": "Standard ERPNext doctype for Sales Invoice Payment",
"fields": ["default", "mode_of_payment", "amount", "reference_no", "account", "type", "base_amount", "clearance_date"],
"meta_text": "The 'Sales Invoice Payment' doctype logs payment details against a sales invoice, including payment mode, reference number, amount, and linked account. It is used to track partial or full payments made by customers."
},
"Bin": {
  "module": "Stock",
  "description": "Standard ERPNext doctype for Bin",
  "fields": [
    "item_code", "column_break_yreo", "warehouse", "section_break_stag", "actual_qty", 
    "planned_qty", "indented_qty", "ordered_qty", "projected_qty", "column_break_xn5j", 
    "reserved_qty", "reserved_qty_for_production", "reserved_qty_for_sub_contract", 
    "reserved_qty_for_production_plan", "reserved_stock", "section_break_pmrs", 
    "stock_uom", "column_break_0slj", "valuation_rate", "stock_value"
  ],
  "meta_text": "Bin is part of the Stock module. It stores the current inventory status of an item within a specific warehouse, including actual, reserved, projected, and ordered quantities. It also holds financial data like valuation_rate and stock_value. Common fields include item_code, warehouse, actual_qty, projected_qty, reserved_qty, and valuation_rate."
},
"Google Settings": {
  "module": "Integrations",
  "description": "Standard ERPNext doctype for Google Settings",
  "fields": [
    "enable", "sb_00", "client_id", "client_secret", "sb_01", "api_key", 
    "section_break_7", "google_drive_picker_enabled", "app_id"
  ],
  "meta_text": "Google Settings is part of the Integrations module. It is used to configure and enable integration with Google APIs for services such as Google Drive and Google Calendar. Common fields include client_id, client_secret, api_key, and google_drive_picker_enabled."
},
"Subscription Plan": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Subscription Plan",
  "fields": [
    "plan_name", "currency", "column_break_3", "item", "section_break_5", 
    "price_determination", "column_break_7", "cost", "price_list", "section_break_11", 
    "billing_interval", "column_break_13", "billing_interval_count", 
    "payment_plan_section", "product_price_id", "column_break_16", 
    "payment_gateway", "accounting_dimensions_section", "cost_center", "dimension_col_break"
  ],
  "meta_text": "Subscription Plan is part of the Accounts module. It defines recurring billing plans for products or services with configurations like billing interval, currency, and associated item or price list. Common fields include plan_name, billing_interval, cost, and payment_gateway."
},
"Sales Taxes and Charges": {
  "module": "Accounts",
  "description": "Standard ERPNext doctype for Sales Taxes and Charges",
  "fields": [
    "charge_type", "row_id", "account_head", "col_break_1", "description", 
    "included_in_print_rate", "included_in_paid_amount", "accounting_dimensions_section", 
    "cost_center", "dimension_col_break", "section_break_8", "rate", "section_break_9", 
    "account_currency", "tax_amount", "total", "tax_amount_after_discount_amount", 
    "column_break_13", "base_tax_amount", "base_total", 
    "base_tax_amount_after_discount_amount", "item_wise_tax_detail", "dont_recompute_tax"
  ],
  "meta_text": "Sales Taxes and Charges is part of the Accounts module. It records tax entries applicable to sales transactions, including information on charge type, tax amounts, and related accounts. Common fields include charge_type, rate, account_head, tax_amount, and cost_center."
},
"RQ Job": {
  "module": "Core",
  "description": "Standard ERPNext doctype for RQ Job",
  "fields": [
    "job_info_section", "job_id", "job_name", "queue", "timeout", "column_break_5", 
    "arguments", "job_status_section", "status", "time_taken", "column_break_11", 
    "started_at", "ended_at", "exception_section", "exc_info"
  ],
  "meta_text": "RQ Job is part of the Core module. It tracks the status and metadata of background jobs processed by the RQ (Redis Queue) worker system in ERPNext. Common fields include job_id, queue, status, time_taken, and started_at."
},
"Permission Inspector": {
  "module": "Core",
  "description": "Standard ERPNext doctype for Permission Inspector",
  "fields": [
    "ref_doctype", "column_break_mcqo", "docname", "column_break_xbrd", 
    "user", "column_break_nvaa", "permission_type", "section_break_hkjp", "output"
  ],
  "meta_text": "Permission Inspector is part of the Core module. It is used to debug and analyze user permissions on specific documents in ERPNext. It helps administrators understand why a user has or lacks access. Common fields include ref_doctype, docname, user, permission_type, and output."
},
"Bin": {
  "module": "Stock",
  "description": "Tracks real-time stock levels of an item in a specific warehouse, including quantities like actual, reserved, and projected stock.",
  "fields": [
    "item_code", "column_break_yreo", "warehouse", "section_break_stag", "actual_qty",
    "planned_qty", "indented_qty", "ordered_qty", "projected_qty", "column_break_xn5j",
    "reserved_qty", "reserved_qty_for_production", "reserved_qty_for_sub_contract",
    "reserved_qty_for_production_plan", "reserved_stock", "section_break_pmrs",
    "stock_uom", "column_break_0slj", "valuation_rate", "stock_value"
  ],
"meta_text": "Bin is part of the Stock module. It maintains stock balances for each item within a warehouse, including actual, reserved, ordered, and projected quantities. It also tracks valuation rates and current stock value. Key fields include item_code, warehouse, actual_qty, reserved_qty, and valuation_rate."
},
"Google Settings": {
"module": "Integrations",
"description": "Stores credentials and configuration for connecting ERPNext with Google APIs such as Calendar and Drive.",
"fields": [
"enable", "sb_00", "client_id", "client_secret", "sb_01", "api_key",
"section_break_7", "google_drive_picker_enabled", "app_id"
],
"meta_text": "Google Settings is part of the Integrations module. It enables connectivity with Google services by storing credentials like client_id, client_secret, and API keys. Common fields include enable, client_id, api_key, and google_drive_picker_enabled."
},
"Subscription Plan": {
"module": "Accounts",
"description": "Defines recurring billing plans for services or products, including pricing, billing cycles, and linked payment gateways.",
"fields": [
"plan_name", "currency", "column_break_3", "item", "section_break_5",
"price_determination", "column_break_7", "cost", "price_list", "section_break_11",
"billing_interval", "column_break_13", "billing_interval_count",
"payment_plan_section", "product_price_id", "column_break_16",
"payment_gateway", "accounting_dimensions_section", "cost_center", "dimension_col_break"
],
"meta_text": "Subscription Plan is part of the Accounts module. It allows businesses to configure and offer recurring billing for items or services. Includes billing intervals, pricing methods, and integration with payment gateways. Key fields include plan_name, billing_interval, price_list, and cost_center."
},
"Sales Taxes and Charges": {
"module": "Accounts",
"description": "Captures tax rules applied to sales transactions, defining charge types, tax rates, and accounting details for each row.",
"fields": [
"charge_type", "row_id", "account_head", "col_break_1", "description",
"included_in_print_rate", "included_in_paid_amount", "accounting_dimensions_section",
"cost_center", "dimension_col_break", "section_break_8", "rate", "section_break_9",
"account_currency", "tax_amount", "total", "tax_amount_after_discount_amount",
"column_break_13", "base_tax_amount", "base_total",
"base_tax_amount_after_discount_amount", "item_wise_tax_detail", "dont_recompute_tax"
],
"meta_text": "Sales Taxes and Charges is part of the Accounts module. It manages tax calculations for sales transactions, including rates, accounts, and whether charges are included in totals. Key fields include charge_type, rate, account_head, tax_amount, and item_wise_tax_detail."
},
"RQ Job": {
"module": "Core",
"description": "Tracks background tasks executed by ERPNext’s job queue system, recording status, arguments, execution time, and errors.",
"fields": [
"job_info_section", "job_id", "job_name", "queue", "timeout", "column_break_5",
"arguments", "job_status_section", "status", "time_taken", "column_break_11",
"started_at", "ended_at", "exception_section", "exc_info"
],
"meta_text": "RQ Job is part of the Core module. It logs background tasks run via Redis Queue, capturing job IDs, arguments, status, start/end times, and exceptions. Common fields include job_id, queue, time_taken, status, and exc_info."
},
"Permission Inspector": {
"module": "Core",
"description": "Tool to analyze and troubleshoot user access permissions on specific documents within the ERP system.",
"fields": [
"ref_doctype", "column_break_mcqo", "docname", "column_break_xbrd",
"user", "column_break_nvaa", "permission_type", "section_break_hkjp", "output"
],
"meta_text": "Permission Inspector is part of the Core module. It helps administrators understand user access rights for specific documents, showing permission levels and restrictions. Key fields include ref_doctype, user, permission_type, and output."
},
"Asset Depreciation Schedule": {
"module": "Assets",
"description": "Defines and manages the depreciation plan of a capital asset over its useful life, including frequency, method, and depreciation values.",
"fields": [
"asset", "naming_series", "company", "column_break_2", "gross_purchase_amount",
"opening_accumulated_depreciation", "opening_number_of_booked_depreciations",
"finance_book", "finance_book_id", "depreciation_details_section",
"depreciation_method", "total_number_of_depreciations", "rate_of_depreciation",
"daily_prorata_based", "shift_based", "column_break_8", "frequency_of_depreciation",
"expected_value_after_useful_life", "depreciation_schedule_section",
"depreciation_schedule", "details_section", "notes", "status", "amended_from"
],
"meta_text": "Asset Depreciation Schedule is part of the Assets module. It defines how a fixed asset will depreciate over time based on methods like straight line or declining balance. Important fields include asset, company, depreciation_method, frequency_of_depreciation, and expected_value_after_useful_life."
},
"Task": {
"module": "Projects",
"description": "Tracks individual units of work under a project or issue, with attributes like status, priority, dependencies, and actual time spent.",
"fields": [
"subject", "project", "issue", "type", "color", "is_group", "is_template",
"column_break0", "status", "priority", "task_weight", "parent_task",
"completed_by", "completed_on", "sb_timeline", "exp_start_date", "expected_time",
"start", "column_break_11", "exp_end_date", "progress", "duration", "is_milestone",
"sb_details", "description", "sb_depends_on", "depends_on", "depends_on_tasks",
"sb_actual", "act_start_date", "actual_time", "column_break_15", "act_end_date",
"sb_costing", "total_costing_amount", "column_break_20", "total_billing_amount",
"sb_more_info", "review_date", "closing_date", "column_break_22", "department",
"company", "lft", "rgt", "old_parent", "template_task"
],
"meta_text": "Task is part of the Projects module. It represents a unit of work within a project, including planning and actual timelines, cost tracking, and dependencies. Key fields include subject, project, status, expected_time, actual_time, and depends_on."
},
"Top Bar Item": {
"module": "Website",
"description": "Configures navigation items in the top bar of the website, including labels, URLs, and whether to open in a new tab.",
"fields": [
"label", "url", "open_in_new_tab", "right", "column_break_5", "parent_label"
],
"meta_text": "Top Bar Item is part of the Website module. It manages navigation links displayed in the website's top bar. Common fields include label (display name), url (link address), open_in_new_tab (whether to open in a new tab), and parent_label (grouping label)."
},
"Website Settings": {
"module": "Website",
"description": "Controls the appearance and functionality of the ERPNext website, including homepage, branding, navigation, footer, and integration settings.",
"fields": [
"home_tab", "sb0", "home_page", "cb4", "title_prefix", "misc_section", "app_name",
"disable_signup", "show_footer_on_login", "column_break_9", "app_logo", "section_break_6",
"website_theme", "website_theme_image", "website_theme_image_link", "navbar_tab", "brand",
"banner_image", "splash_image", "brand_html", "set_banner_from_image", "favicon", "top_bar",
"top_bar_items", "hide_login", "navbar_search", "show_language_picker", "navbar_template_section",
"navbar_template", "navbar_template_values", "edit_navbar_template_values", "call_to_action",
"call_to_action_url", "banner", "banner_html", "footer_tab", "footer", "footer_items",
"footer_details_section", "copyright", "footer_logo", "hide_footer_signup", "column_break_37",
"address", "footer_powered", "custom_footer_section", "footer_template", "footer_template_values",
"edit_footer_template_values", "integrations", "analytics_section", "enable_view_tracking",
"enable_google_indexing", "authorize_api_indexing_access", "indexing_refresh_token",
"indexing_authorization_code", "column_break_17", "google_analytics_id",
"google_analytics_anonymize_ip", "account_deletion_settings_section", "auto_account_deletion",
"show_account_deletion_link", "section_break_38", "subdomain", "head_html", "robots_txt",
"redirects_tab", "route_redirects"
],
"meta_text": "Website Settings is part of the Website module. It configures the branding, homepage, theme, and navigation elements of the ERPNext website. It also includes analytics and indexing settings, such as google_analytics_id, auto_account_deletion, and route_redirects, allowing users to personalize the website experience."
},
"Maintenance Visit Purpose": {
"module": "Maintenance",
"description": "Captures the specific tasks, services, and items involved in a maintenance visit, including parts used and work done.",
"fields": [
"item_code", "item_name", "column_break_3", "service_person", "serial_no", "section_break_6",
"description", "work_details", "work_done", "prevdoc_doctype", "prevdoc_docname",
"maintenance_schedule_detail"
],
"meta_text": "Maintenance Visit Purpose is part of the Maintenance module. It records details of maintenance tasks carried out during a service visit. Key fields include item_code (item serviced), service_person (technician involved), and work_done (summary of actions performed)."
},
"Allowed To Transact With": {
"module": "Accounts",
"description": "Specifies the companies a party (such as a customer or supplier) is permitted to conduct transactions with.",
"fields": ["company"],
"meta_text": "Allowed To Transact With is part of the Accounts module. It defines the companies a party is allowed to transact with, ensuring proper validation in multi-company environments. The primary field is company, representing the linked entity."
},
"BOM Explosion Item": {
"module": "Manufacturing",
"description": "Represents detailed line items of a Bill of Materials after the BOM is exploded, showing subcomponents and their manufacturing relevance.",
"fields": [
"item_code", "item_name", "cb", "source_warehouse", "operation", "section_break_3",
"description", "column_break_2", "image", "image_view", "section_break_4", "stock_qty",
"rate", "qty_consumed_per_unit", "column_break_8", "stock_uom", "amount",
"include_item_in_manufacturing", "sourced_by_supplier"
],
"meta_text": "BOM Explosion Item is part of the Manufacturing module. It shows the breakdown of sub-items and components in a Bill of Materials after explosion. Key fields include item_code (component item), qty_consumed_per_unit (amount used per finished unit), and include_item_in_manufacturing (whether the item participates in the manufacturing process)."
},
"Help Article": {
"module": "Website",
"description": "Stores structured documentation or FAQ content to assist users with ERPNext functionality and features.",
"fields": [
"title", "category", "published", "column_break_4", "author", "level", "section_break_7",
"content", "likes", "route", "section_break_cww5", "helpful", "cb_00", "not_helpful"
],
"meta_text": "Help Article is part of the Website module. It is used to publish and manage support documentation or FAQs on the website. Fields include title (article name), content (rich text), and helpful/not_helpful (user feedback for usefulness)."
},  
"Subscription": {
"module": "Accounts",
"description": "Used to manage recurring billing for customers or suppliers based on selected plans and billing cycles.",
"fields": [
  "party_type", "party", "cb_1", "company", "status", "subscription_period",
  "start_date", "end_date", "cancelation_date", "trial_period_start", "trial_period_end",
  "follow_calendar_months", "generate_new_invoices_past_due_date", "submit_invoice",
  "column_break_11", "current_invoice_start", "current_invoice_end", "days_until_due",
  "generate_invoice_at", "number_of_days", "cancel_at_period_end", "sb_4", "plans", "sb_1",
  "sales_tax_template", "purchase_tax_template", "sb_2", "apply_additional_discount",
  "cb_2", "additional_discount_percentage", "additional_discount_amount",
  "accounting_dimensions_section", "cost_center"
],
"meta_text": "Subscription is part of the Accounts module. It is used to automate recurring billing for customers or suppliers based on predefined subscription plans. This doctype tracks subscription status, billing cycles, trial periods, invoice generation schedules, and applicable discounts. Key fields include party (customer or supplier), start_date and end_date (validity period), plans (linked plans), and cost_center (for accounting allocation)."
},
"Cashier Closing": {
  "module": "Accounts",
  "description": "Used to record the end-of-day closing activities for a cashier, including all payments, expenses, and net cash handled.",
  "fields": [
    "naming_series", "user", "date", "from_time", "time", "expense", "custody",
    "returns", "outstanding_amount", "payments", "net_amount", "amended_from"
  ],
  "meta_text": "Cashier Closing is part of the Accounts module. It is used to document the financial closing operations by a cashier at the end of a shift or business day. This includes payments received, returns issued, expenses, outstanding amounts, and net cash. Key fields include user (cashier name), date (closing date), payments, and net_amount."
},
"Website Route Redirect": {
  "module": "Website",
  "description": "Allows you to redirect old website URLs to new ones, useful for SEO and site restructuring.",
  "fields": [
    "source", "target", "redirect_http_status"
  ],
  "meta_text": "Website Route Redirect is part of the Website module. It is used to manage permanent or temporary redirection of URLs on a website. This helps maintain search engine rankings and user experience during URL changes or page restructuring. Key fields include source (old route), target (new route), and redirect_http_status (such as 301 or 302)."
},
"BOM Item": {
  "module": "Manufacturing",
  "description": "Defines each component item included in a Bill of Materials (BOM) for manufacturing a finished product.",
  "fields": [
    "item_code", "item_name", "operation", "column_break_3", "do_not_explode", "bom_no",
    "source_warehouse", "allow_alternative_item", "is_stock_item", "section_break_5",
    "description", "col_break1", "image", "image_view", "quantity_and_rate", "qty", "uom",
    "col_break2", "stock_qty", "stock_uom", "conversion_factor", "rate_amount_section",
    "rate", "base_rate", "column_break_21", "amount", "base_amount", "section_break_18",
    "qty_consumed_per_unit", "section_break_27", "has_variants",
    "include_item_in_manufacturing", "original_item", "column_break_33", "sourced_by_supplier"
  ],
  "meta_text": "BOM Item is part of the Manufacturing module. It defines each individual item or component required in a Bill of Materials (BOM) for manufacturing a product. It includes quantities, warehouses, item rates, and additional flags like whether the item is sourced from suppliers or included in stock. Key fields include item_code, qty, rate, source_warehouse, and conversion_factor."
},
  "Payment Reconciliation Allocation": {
    "module": "Accounts",
    "description": "Used to map and allocate payment amounts against outstanding invoices during reconciliation.",
    "fields": [
      "reference_type", "reference_name", "reference_row", "invoice_type", "invoice_number",
      "allocated_amount", "unreconciled_amount", "amount", "is_advance", "difference_amount",
      "gain_loss_posting_date", "difference_account", "exchange_rate", "currency",
      "cost_center", "dimension_col_break"
    ],
    "meta_text": "Payment Reconciliation Allocation is part of the Accounts module. It helps allocate payments to outstanding invoices during the reconciliation process. It supports multi-currency adjustments, advance tagging, and gain/loss tracking. Key fields include reference_type (invoice or payment), allocated_amount, difference_account, and exchange_rate."
  },
  "Web Template": {
    "module": "Website",
    "description": "Defines reusable web content blocks used across website pages.",
    "fields": [
      "type", "standard", "module", "template", "fields"
    ],
    "meta_text": "Web Template is part of the Website module. It allows developers to create reusable blocks of HTML or Jinja templates for rendering web content. These can be included in multiple website pages for consistency. Key fields include template (the markup) and type (HTML, Jinja, etc.)."
  },
  "Email Template": {
    "module": "Email",
    "description": "Creates predefined email formats used in automated notifications or replies.",
    "fields": [
      "subject", "use_html", "response_html", "response", "email_reply_help"
    ],
    "meta_text": "Email Template is part of the Email module. It is used to create reusable templates for sending system-generated emails. Templates can be plain text or HTML, and include dynamic fields from documents. Important fields include subject, response_html (for rich formatting), and use_html."
  },
  "Print Format": {
    "module": "Printing",
    "description": "Customizes how documents like invoices or orders are rendered for printing.",
    "fields": [
      "doc_type", "module", "default_print_language", "standard", "custom_format", "disabled",
      "print_format_type", "raw_printing", "html", "raw_commands", "margin_top", "margin_bottom",
      "margin_left", "margin_right", "align_labels_right", "show_section_headings", "line_breaks",
      "absolute_value", "font_size", "font", "page_number", "css", "format_data",
      "print_format_builder", "print_format_builder_beta"
    ],
    "meta_text": "Print Format is part of the Printing module. It is used to design and configure how documents like invoices, quotations, and orders appear when printed. It supports both standard HTML layouts and raw printer commands. Key fields include doc_type, html, print_format_type, and margin settings."
  },
  "Webhook Header": {
    "module": "Integrations",
    "description": "Stores key-value headers sent with webhook requests to external services.",
    "fields": [
      "key", "value"
    ],
    "meta_text": "Webhook Header is part of the Integrations module. It stores custom HTTP headers that are included in webhook requests sent to external applications. This is useful for authentication or passing metadata. Common fields are key (header name) and value (header content)."
  },
    "Note": {
      "module": "Desk",
      "description": "Used for creating personal or public notes that can be shared with users and displayed on login screens.",
      "fields": [
        "title", "public", "notify_on_login", "notify_on_every_login",
        "expire_notification_on", "content", "seen_by_section", "seen_by"
      ],
      "meta_text": "Note is part of the Desk module. It allows users to create and share textual notes across the system. Notes can be private or public, and can be shown on login for announcements. Important fields include title, content, notify_on_login, and public."
    },
    "Page": {
      "module": "Core",
      "description": "Defines custom system pages in ERPNext for UI components like dashboards and reports.",
      "fields": [
        "system_page", "page_html", "page_name", "title", "icon",
        "module", "restrict_to_domain", "standard", "roles"
      ],
      "meta_text": "Page is part of the Core module. It allows developers to define custom user interface pages using HTML and scripts. These pages can be used to build dashboards, tools, or static content. Key fields include page_name, page_html, module, and roles."
    },
    "Contact": {
      "module": "Contacts",
      "description": "Stores contact information such as names, phone numbers, emails, and links to customers, suppliers, or employees.",
      "fields": [
        "first_name", "middle_name", "last_name", "full_name", "email_id", "user", "phone",
        "mobile_no", "salutation", "designation", "gender", "company_name", "image",
        "email_ids", "phone_nos", "links", "is_primary_contact", "is_billing_contact",
        "department", "unsubscribed", "sync_with_google_contacts", "google_contacts_id"
      ],
      "meta_text": "Contact is part of the Contacts module. It captures personal and business details of individuals linked to companies, customers, or suppliers. It supports multiple emails and phone numbers, and sync with Google Contacts. Common fields include first_name, email_id, mobile_no, and links."
    },
    "Version": {
      "module": "Core",
      "description": "Tracks document version history and changes for audit and rollback purposes.",
      "fields": [
        "ref_doctype", "docname", "data", "table_html"
      ],
      "meta_text": "Version is part of the Core module. It stores a changelog of modifications made to documents. This is useful for audit trails, rollback, and history tracking. Key fields include ref_doctype (document type), docname (specific record), and data (change snapshot)."
    },
    "Workflow": {
      "module": "Workflow",
      "description": "Manages approval flows and document lifecycle stages using defined states and transitions.",
      "fields": [
        "workflow_name", "document_type", "is_active", "override_status", "send_email_alert",
        "states", "transitions", "workflow_state_field", "workflow_data"
      ],
      "meta_text": "Workflow is part of the Workflow module. It enables configuration of document approval processes by defining states and transitions. It allows setting conditions and alerts during approval. Important fields include workflow_name, document_type, and states."
    },
      "Error Log": {
        "module": "Core",
        "description": "Logs system errors and exceptions encountered during execution, aiding in debugging and monitoring.",
        "fields": [
          "seen", "reference_doctype", "reference_name",
          "method", "error", "trace_id"
        ],
        "meta_text": "Error Log is part of the Core module. It captures tracebacks and exceptions raised during backend operations, including the document type and method that caused the error. This helps administrators and developers debug issues. Key fields include error, method, and reference_name."
      },
      "Milestone": {
        "module": "Automation",
        "description": "Used to track progress points in documents like projects, tasks, or sales using defined values and fields.",
        "fields": [
          "reference_type", "reference_name", "track_field", "value", "milestone_tracker"
        ],
        "meta_text": "Milestone is part of the Automation module. It enables automatic tracking of key progress stages based on field values in a document. For instance, a milestone can trigger when a project reaches a specific percentage. Important fields include track_field and value."
      },
      "Module Def": {
        "module": "Core",
        "description": "Defines and registers a module within the ERP system, grouping related doctypes and functionalities.",
        "fields": [
          "module_name", "custom", "package", "app_name", "restrict_to_domain", "connections_tab"
        ],
        "meta_text": "Module Def is part of the Core module. It defines ERPNext module structures by linking related doctypes, pages, and scripts under a single app namespace. Common fields include module_name, app_name, and package."
      },
      "Google Drive": {
        "module": "Integrations",
        "description": "Manages integration settings for automatic backups to Google Drive.",
        "fields": [
          "enable", "backup_folder_name", "frequency", "email", "send_email_for_successful_backup",
          "file_backup", "authorize_google_drive_access", "backup_folder_id", "last_backup_on",
          "refresh_token", "authorization_code"
        ],
        "meta_text": "Google Drive is part of the Integrations module. It configures cloud backup for files and database exports to a designated Google Drive folder. Useful fields include backup_folder_name, frequency, and refresh_token."
      },
      "Review Level": {
        "module": "Social",
        "description": "Defines levels of feedback or review in workflows or social content ratings.",
        "fields": [
          "level_name", "role", "review_points"
        ],
        "meta_text": "Review Level is part of the Social module. It sets up review hierarchies for feedback or moderation purposes. This allows assigning scoring thresholds and reviewer roles. Key fields include level_name and review_points."
      },
      "Client Script": {
        "module": "Custom",
        "description": "Enables the creation of custom JavaScript that runs on the client side for specific doctypes.",
        "fields": [
          "dt", "view", "module", "enabled", "script", "sample"
        ],
        "meta_text": "Client Script is part of the Custom module. It allows injecting custom JavaScript into form views to modify behavior, validations, or UI. Useful for lightweight customizations. Common fields are dt (doctype), view, and script."
      },
      "Workflow State": {
        "module": "Workflow",
        "description": "Defines named states that a document can be in as part of a workflow lifecycle.",
        "fields": [
          "workflow_state_name", "icon", "style"
        ],
        "meta_text": "Workflow State is part of the Workflow module. It represents each unique status in a document’s approval or progression process. Each state can have a name, icon, and display style. Main fields include workflow_state_name and style."
      },
        "Bisect Nodes": {
          "module": "Accounts",
          "description": "Defines a binary tree node structure for comparing financial data across time periods, aiding in visual accounting analysis.",
          "fields": [
            "root",
            "left_child",
            "right_child",
            "period_from_date",
            "period_to_date",
            "difference"
          ],
          "meta_text": "Bisect Nodes is part of the Accounts module. It defines a binary tree structure used to compare accounting data between two date ranges. The node holds references to its child nodes and captures the computed difference between financial metrics of two periods."
},
"Bisect Accounting Statements": {
"module": "Accounts",
"description": "Generates visual and data-driven comparisons between financial statements, highlighting changes in key accounting figures.",
"fields": [
"company",
"from_date",
"to_date",
"algorithm",
"current_node",
"bisecting_from",
"current_from_date",
"bisecting_to",
"current_to_date",
"p_l_summary",
"b_s_summary",
"difference"
],
"meta_text": "Bisect Accounting Statements is part of the Accounts module. It provides comparative analysis of financial data over selected date ranges using bisection logic. Fields like from_date, to_date, and summaries (P&L, Balance Sheet) are used to analyze shifts in financial performance."
},
"Notification Settings": {
"module": "Desk",
"description": "Allows users to configure which system events trigger notifications, and how those notifications are delivered.",
"fields": [
"enabled",
"subscribed_documents",
"enable_email_notifications",
"enable_email_mention",
"enable_email_assignment",
"enable_email_event_reminders",
"user"
],
"meta_text": "Notification Settings is part of the Desk module. It lets users manage their alert preferences for events like document assignments, mentions, and reminders. The user can enable or disable specific email notifications for smoother workflow interaction."
},                        
"Google Contacts": {
"module": "Integrations",
"description": "Handles synchronization of contacts between ERPNext and Google Contacts, allowing push and pull of contact data.",
"fields": [
"enable", "email_id", "authorize_google_contacts_access", "last_sync_on", "authorization_code",
"refresh_token", "next_sync_token", "sync", "pull_from_google_contacts", "push_to_google_contacts"
],
"meta_text": "Google Contacts is part of the Integrations module. It allows ERPNext to sync contacts with Google Contacts by enabling both push and pull operations. Key fields include email_id, last_sync_on, and push_to_google_contacts."
},
"Milestone Tracker": {
"module": "Automation",
"description": "Used to automatically track progress milestones on any document based on field changes.",
"fields": [
"document_type", "track_field", "disabled"
],
"meta_text": "Milestone Tracker is part of the Automation module. It enables the system to monitor specified fields in documents and trigger milestones when values change. Main fields include document_type and track_field."
},
"Route History": {
"module": "Desk",
"description": "Keeps a record of the user's recent navigation routes in the system.",
"fields": [
"route", "user"
],
"meta_text": "Route History is part of the Desk module. It logs the URL routes accessed by users, enabling features like recent pages tracking. The key fields are route and user."
},
"DocType": {
"module": "Core",
"description": "Represents the definition of a document structure, including its fields, behavior, permissions, and views.",
"fields": [
"form_builder", "module", "is_submittable", "istable", "issingle", "is_tree", "editable_grid",
"quick_entry", "track_changes", "track_seen", "track_views", "custom", "beta", "is_virtual",
"queue_in_background", "naming_rule", "autoname", "allow_rename", "description", "image_field",
"timeline_field", "max_attachments", "allow_copy", "allow_import", "allow_events_in_timeline",
"allow_auto_repeat", "make_attachments_public", "title_field", "translated_doctype",
"default_print_format", "sort_field", "sort_order", "default_view", "icon", "color",
"show_preview_popup", "show_name_in_global_search", "default_email_template", "email_append_to",
"sender_field", "sender_name_field", "subject_field", "permissions", "read_only", "in_create",
"actions", "links", "states", "has_web_view", "allow_guest_to_view", "index_web_pages_for_search",
"route", "website_search_field", "engine", "migration_hash", "fields"
],
"meta_text": "DocType is part of the Core module. It defines the structure, fields, and behavior of a document in ERPNext, including views, permissions, and workflow states. This is a foundational component of the framework. Notable fields include fields, module, and naming_rule."
},
"Customize Form": {
"module": "Custom",
"description": "Allows users to modify existing DocTypes by customizing field properties, views, and form behavior without altering the core definition.",
"fields": [
"doc_type", "properties", "label", "search_fields", "link_filters", "istable",
"is_calendar_and_gantt", "editable_grid", "quick_entry", "track_changes", "track_views",
"allow_auto_repeat", "allow_import", "queue_in_background", "naming_rule", "autoname",
"image_field", "max_attachments", "allow_copy", "make_attachments_public", "title_field",
"translated_doctype", "default_print_format", "default_view", "show_preview_popup",
"default_email_template", "email_append_to", "sender_field", "sender_name_field",
"subject_field", "sort_field", "sort_order", "actions", "links", "states", "fields", "form_builder"
],
"meta_text": "Customize Form is part of the Custom module. It lets administrators adjust field properties, default values, naming conventions, and UI behavior of existing DocTypes without modifying core definitions. Key fields include doc_type, properties, and fields."
},
"Asset Shift Allocation": {
"module": "Assets",
"description": "Records allocation of depreciation schedules when an asset is used in different shifts, adjusting depreciation based on shift usage.",
"fields": [
"asset",
"naming_series",
"finance_book",
"depreciation_schedule"
],
"meta_text": "Asset Shift Allocation is part of the Assets module. It is used to reassign or adjust depreciation for assets based on their usage across different shifts. This helps calculate depreciation more accurately when shift-based methods are applied. Fields include asset, finance_book, and depreciation_schedule."
},
"Asset Shift Factor": {
"module": "Assets",
"description": "Defines adjustment factors for asset depreciation based on operational shifts like day, night, or multiple shifts.",
"fields": [
"shift_name",
"shift_factor",
"default"
],
"meta_text": "Asset Shift Factor is part of the Assets module. It is used to define the depreciation adjustment multiplier based on the type of shift (e.g., day or night). This ensures depreciation reflects intensity of usage. Key fields include shift_name and shift_factor."
},
"Warranty Claim": {
"module": "Support",
"description": "Manages complaints raised against items under warranty or AMC, tracks customer details, resolution history, and service data.",
"fields": [
"naming_series",
"status",
"complaint_date",
"customer",
"serial_no",
"complaint",
"item_code",
"warranty_expiry_date",
"resolution_date",
"resolved_by",
"resolution_details",
"company"
],
"meta_text": "Warranty Claim is part of the Support module. It helps businesses manage issues or complaints raised against items under warranty or annual maintenance contracts. It tracks the item's serial number, complaint details, warranty status, and resolution history. Essential fields include complaint_date, item_code, warranty_expiry_date, and resolution_details."
},
"Depreciation Schedule": {
"module": "Assets",
"description": "Represents the schedule of depreciation for an asset over its useful life, detailing amounts and associated journal entries.",
"fields": [
"schedule_date",
"depreciation_amount",
"accumulated_depreciation_amount",
"journal_entry",
"shift"
],
"meta_text": "Depreciation Schedule is part of the Assets module. It tracks how an asset’s value is depreciated over time, with scheduled entries showing exact amounts and related journal entries. Fields include schedule_date, depreciation_amount, journal_entry, and shift for shift-based depreciation."
},
"Workspace Shortcut": {
"module": "Desk",
"description": "Defines quick-access shortcuts on user workspaces to frequently used views or documents in ERPNext.",
"fields": [
"type",
"link_to",
"url",
"doc_view",
"label",
"icon"
],
"meta_text": "Workspace Shortcut is part of the Desk module. It provides users with customizable shortcuts to key views or documents within their workspace, improving productivity and navigation. Common fields include type (like DocType or Report), label, and icon."
},
"Email Group Member": {
"module": "Email",
"description": "Represents an individual subscriber in an email group for bulk mailing or newsletters.",
"fields": [
"email_group",
"email",
"unsubscribed"
],
"meta_text": "Email Group Member is part of the Email module. It manages individual subscribers linked to an Email Group for newsletters or announcements. It stores the email address and whether the subscriber has opted out (unsubscribed)."
},
"Email Group": {
"module": "Email",
"description": "Defines a list of recipients for sending newsletters, bulk emails, or system notifications.",
"fields": [
"title",
"total_subscribers",
"confirmation_email_template",
"welcome_email_template",
"welcome_url"
],
"meta_text": "Email Group is part of the Email module. It allows you to manage collections of email recipients for sending newsletters or automated messages. Fields include title (name of the group), total_subscribers (number of members), and templates for confirmation and welcome emails."
},
"Address": {
"module": "Contacts",
"description": "Stores structured address details for customers, suppliers, or internal entities within the system.",
"fields": [
"address_title",
"address_type",
"address_line1",
"city",
"state",
"country",
"pincode",
"email_id",
"phone",
"is_primary_address",
"is_shipping_address"
],
"meta_text": "Address is part of the Contacts module. It captures physical and contact address details for entities like customers or suppliers. Key fields include address_line1, city, state, country, phone, and whether it's a primary or shipping address."
},
"Bank Transaction": {
"module": "Accounts",
"description": "Represents individual entries of deposits or withdrawals made to a bank account, used for reconciliation with the company’s accounting records.",
"fields": ["date", "bank_account", "status", "deposit", "withdrawal", "currency", "transaction_id", "transaction_type", "allocated_amount", "unallocated_amount"],
"meta_text": "Bank Transaction is part of the Accounts module. It logs financial transactions such as deposits and withdrawals in bank accounts. It is essential for reconciliation with general ledger entries. Important fields include date, bank_account, transaction_type, and amounts deposited or withdrawn."
},
"Payment Reconciliation Invoice": {
"module": "Accounts",
"description": "Stores information about invoices being reconciled against payments during the reconciliation process.",
"fields": ["invoice_type", "invoice_number", "invoice_date", "amount", "outstanding_amount", "currency", "exchange_rate"],
"meta_text": "Payment Reconciliation Invoice is part of the Accounts module. It helps match incoming or outgoing payments against outstanding invoices. Key fields include invoice_number, amount, outstanding_amount, and currency to support accurate reconciliation."
},
"Supplier Quotation Item": {
"module": "Buying",
"description": "Captures item-wise details in a supplier quotation, including pricing, quantity, delivery expectations, and taxes.",
"fields": ["item_code", "supplier_part_no", "item_name", "lead_time_days", "expected_delivery_date", "qty", "uom", "rate", "amount", "warehouse", "material_request", "request_for_quotation"],
"meta_text": "Supplier Quotation Item is part of the Buying module. It holds item-specific data within a supplier quotation, such as item_code, supplier_part_no, pricing, quantity (qty), expected delivery dates, and the warehouse. It supports linking to Material Requests or RFQs for procurement workflows."
},
"Opportunity Item": {
"module": "CRM",
"description": "Used to list potential items of interest in a sales opportunity, helping forecast demand and customer intent.",
"fields": ["item_code", "item_name", "qty", "uom", "rate", "amount", "brand", "item_group"],
"meta_text": "Opportunity Item is part of the CRM module. It helps track products that a customer is interested in during the early stages of a sale. Key fields include item_code, item_name, qty, uom, rate, and amount to estimate sales potential."
},
"Request for Quotation Item": {
"module": "Buying",
"description": "Captures item details in a Request for Quotation (RFQ) sent to suppliers, including quantity, delivery schedule, and references to other documents.",
"fields": ["item_code", "supplier_part_no", "item_name", "schedule_date", "qty", "uom", "warehouse", "material_request", "project_name"],
"meta_text": "Request for Quotation Item is part of the Buying module. It holds item-specific information when sending RFQs to suppliers. Common fields include item_code, item_name, qty, uom, schedule_date for expected delivery, and warehouse. It also supports links to Material Requests and projects."
},
"Workflow Document State": {
"module": "Workflow",
"description": "Defines a possible state within a document’s workflow and the actions or permissions associated with it.",
"fields": ["state", "doc_status", "update_field", "update_value", "is_optional_state", "allow_edit"],
"meta_text": "Workflow Document State is part of the Workflow module. It represents an allowed state within a document’s workflow. Key fields include state (e.g., Draft, Approved), doc_status (system status), update_field and update_value (automated field changes), and allow_edit (who can modify the document in this state)."
},
"Request for Quotation Item": {
"module": "Buying",
"description": "Captures item details in a Request for Quotation (RFQ) sent to suppliers, including quantity, delivery schedule, and references to other documents.",
"fields": ["item_code", "supplier_part_no", "item_name", "schedule_date", "qty", "uom", "warehouse", "material_request", "project_name"],
"meta_text": "Request for Quotation Item is part of the Buying module. It holds item-specific information when sending RFQs to suppliers. Common fields include item_code, item_name, qty, uom, schedule_date for expected delivery, and warehouse. It also supports links to Material Requests and projects."
},
"Workflow Document State": {
"module": "Workflow",
"description": "Defines a possible state within a document’s workflow and the actions or permissions associated with it.",
"fields": ["state", "doc_status", "update_field", "update_value", "is_optional_state", "allow_edit"],
"meta_text": "Workflow Document State is part of the Workflow module. It represents an allowed state within a document’s workflow. Key fields include state (e.g., Draft, Approved), doc_status (system status), update_field and update_value (automated field changes), and allow_edit (who can modify the document in this state)."
},
"Bulk Transaction Log": {
"module": "Bulk Transaction",
"description": "Tracks the summary of bulk transactions processed in the system, showing how many succeeded or failed.",
"fields": ["date", "log_entries", "succeeded", "failed"],
"meta_text": "Bulk Transaction Log is part of the Bulk Transaction module. It provides a summary view of bulk transaction attempts, including the processing date, count of total log entries, and how many succeeded or failed. This helps monitor batch operations across modules."
},
"Bulk Transaction Log Detail": {
"module": "Bulk Transaction",
"description": "Stores detailed logs for each transaction processed in a bulk operation, including source, target, and errors.",
"fields": ["from_doctype", "to_doctype", "transaction_name", "transaction_status", "error_description", "retried"],
"meta_text": "Bulk Transaction Log Detail is part of the Bulk Transaction module. It contains per-transaction logs from a bulk run, showing the originating and destination doctypes, the transaction's name, status (success or failure), and error details if any."
},
"Number Card": {
"module": "Desk",
"description": "Displays key numeric metrics such as totals, counts, or percentages in dashboard cards using report or document data.",
"fields": ["label", "type", "document_type", "aggregate_function_based_on", "report_name", "function", "is_public", "show_percentage_stats", "color"],
"meta_text": "Number Card is part of the Desk module. It represents a visual card showing numerical metrics (like totals or counts) in dashboards. It uses document types or reports to calculate values and can be customized using filters, color indicators, and visibility settings."
},
"Batch": {
"module": "Stock",
"description": "Tracks batch information for inventory items including quantity, production and expiry details.",
"fields": ["batch_id", "item", "batch_qty", "stock_uom", "manufacturing_date", "expiry_date"],
"meta_text": "Batch is part of the Stock module. It manages inventory batches by storing production, expiry, and quantity details. This helps with traceability and quality control of stock. Key fields include batch_id (unique batch code), item (linked product), and manufacturing/expiry dates."
},
"Scheduled Job Log": {
"module": "Core",
"description": "Logs the execution status and output of background scheduled jobs.",
"fields": ["status", "scheduled_job_type", "details", "debug_log"],
"meta_text": "Scheduled Job Log is part of the Core module. It logs each scheduled job's type, status, and debug output for review and troubleshooting. This is useful for administrators to track automated background processes."
},
"Repost Allowed Types": {
"module": "Accounts",
"description": "Specifies which document types are permitted for reposting of financial transactions.",
"fields": ["document_type", "allowed"],
"meta_text": "Repost Allowed Types is part of the Accounts module. It defines the document types eligible for reposting financial entries, ensuring control over which transactions can be modified retrospectively."
},
"Request for Quotation": {
"module": "Buying",
"description": "Captures requests sent to suppliers to obtain quotations for required items.",
"fields": ["naming_series", "company", "vendor", "transaction_date", "schedule_date", "status", "items", "suppliers"],
"meta_text": "Request for Quotation is part of the Buying module. It facilitates communication with suppliers to get price and delivery terms for required items. Common fields include vendor (supplier), items (requested goods/services), and schedule_date (expected delivery). It helps in comparing supplier offers before purchase."
},
"Payment Ledger Entry": {
"module": "Accounts",
"description": "Logs financial entries linking payments to vouchers and accounts.",
"fields": ["posting_date", "company", "account", "party_type", "party", "amount", "voucher_type", "voucher_no"],
"meta_text": "Payment Ledger Entry is part of the Accounts module. It records how payments are applied to invoices or vouchers. It includes references like voucher_type, account, and party. This supports audit trails for all payment applications in the system."
},
"System Console": {
"module": "Desk",
"description": "Provides a backend interface for running system commands and inspecting database processes.",
"fields": ["type", "console", "output", "sql_output", "processlist"],
"meta_text": "System Console is part of the Desk module. It is an administrative tool for executing server-side commands and viewing database processes. Useful for debugging, performance checks, or quick database queries."
},
"Workstation Working Hour": {
"module": "Manufacturing",
"description": "Defines available working hours for a manufacturing workstation.",
"fields": ["start_time", "end_time", "hours", "enabled"],
"meta_text": "Workstation Working Hour is part of the Manufacturing module. It defines the daily shift schedule for a production workstation. Useful for planning capacity and managing operations. Fields include start_time, end_time, and hours worked."
},
"Selling Settings": {
"module": "Selling",
"description": "Configuration settings for the selling process, including defaults and transaction rules.",
"fields": ["cust_master_name", "customer_group", "territory", "selling_price_list", "maintain_same_sales_rate", "so_required", "dn_required"],
"meta_text": "Selling Settings is part of the Selling module. It allows companies to configure selling defaults such as customer naming, price list, and whether sales orders or delivery notes are mandatory. Key fields include cust_master_name (customer ID format), selling_price_list (default price list), and so_required (sales order requirement before delivery)."
},
"Task Depends On": {
"module": "Projects",
"description": "Defines task dependencies within a project to manage task sequencing.",
"fields": ["task", "subject", "project"],
"meta_text": "Task Depends On is part of the Projects module. It links one task to another that it depends on, ensuring accurate task sequencing. Key fields include task (dependent task), subject (task name), and project (project association)."
},
"Scheduled Job Type": {
"module": "Core",
"description": "Defines scheduled background jobs, including frequency and execution details.",
"fields": ["method", "frequency", "cron_format", "create_log", "last_execution", "next_execution"],
"meta_text": "Scheduled Job Type is part of the Core module. It defines recurring background jobs and their scheduling using frequency or cron format. Important fields include method (Python function), frequency (Daily/Weekly/Custom), and last_execution (timestamp of last run)."
},
"Integration Request": {
"module": "Integrations",
"description": "Logs outgoing or incoming API requests to external services with status tracking.",
"fields": ["request_id", "integration_request_service", "status", "url", "output", "error", "reference_doctype", "reference_docname"],
"meta_text": "Integration Request is part of the Integrations module. It records details of API interactions with external services, helping debug integration issues. Fields like request_id (unique request identifier), status (e.g., Completed or Failed), and reference_docname (ERP document linked to the request) are essential for traceability."
},
"ToDo": {
"module": "Desk",
"description": "Used to assign tasks or reminders to users, linked to any document in the system.",
"fields": ["status", "priority", "date", "allocated_to", "description", "reference_type", "reference_name"],
"meta_text": "ToDo is part of the Desk module. It represents tasks or action items that can be manually added or automatically created based on system events. Fields include status (task state), priority (urgency level), allocated_to (assigned user), and reference_type/reference_name for document linking."
},
"Audit Trail": {
"module": "Core",
"description": "Tracks changes made to records including added or removed rows in child tables.",
"fields": ["doctype_name", "document", "version_table", "rows_added", "rows_removed"],
"meta_text": "Audit Trail is part of the Core module. It maintains a history of changes made to documents, especially useful for tracking additions or deletions in child tables. Key fields include doctype_name (document type), document (record name), and version_table for storing change snapshots."
},
"Delivery Trip": {
"module": "Stock",
"description": "Manages logistics for delivering items through a planned route and schedule.",
"fields": ["naming_series", "company", "driver", "vehicle", "departure_time", "delivery_stops", "status"],
"meta_text": "Delivery Trip is part of the Stock module. It helps manage and track the delivery of goods by defining vehicle, driver, and route stops. Important fields include driver (person responsible), delivery_stops (planned locations), and status (trip progress)."
},
"Asset Activity": {
"module": "Assets",
"description": "Records maintenance or usage activities for an asset.",
"fields": ["asset", "date", "user", "subject"],
"meta_text": "Asset Activity is part of the Assets module. It logs any significant activity related to an asset such as maintenance or check-in/check-out events. Key fields include asset (linked asset), date (when activity occurred), and subject (brief description)."
},
"Delivery Stop": {
"module": "Stock",
"description": "Used to define individual delivery locations within a Delivery Trip.",
"fields": ["customer", "customer_address", "delivery_note", "contact", "distance", "estimated_arrival"],
"meta_text": "Delivery Stop is part of the Stock module. It captures each stop made during a Delivery Trip, linking customer and delivery information. Key fields include customer (recipient), customer_address (delivery location), delivery_note (document reference), and estimated_arrival (ETA to location)."
},
"Process Subscription": {
"module": "Accounts",
"description": "Processes recurring billing based on a subscription document.",
"fields": ["posting_date", "subscription"],
"meta_text": "Process Subscription is part of the Accounts module. It automates the creation of invoices or entries based on an active Subscription. Core fields are posting_date (when processed) and subscription (reference to the active subscription)."
},
"Material Request": {
"module": "Stock",
"description": "Used to request the procurement, transfer, or manufacture of items within the organization.",
"fields": ["naming_series", "material_request_type", "company", "transaction_date", "schedule_date", "items", "status"],
"meta_text": "Material Request is part of the Stock module. It facilitates requesting goods for purchase, transfer, or production. Common fields include material_request_type (e.g., Purchase, Transfer), company, transaction_date (creation date), and items (list of requested goods)."
},
"Authorization Rule": {
"module": "Setup",
"description": "Defines custom rules for transaction approvals based on specific conditions.",
"fields": ["transaction", "based_on", "value", "company", "approving_role", "approving_user"],
"meta_text": "Authorization Rule is part of the Setup module. It allows defining custom approval workflows for transactions based on conditions like amount, customer, or item. Key fields include transaction (type of document), based_on (condition basis), value (threshold), and approving_role (who can approve)."
},
"Unreconcile Payment Entries": {
"module": "Accounts",
"description": "Lists payment entries that have been unlinked from invoices or references.",
"fields": ["account", "party_type", "party", "reference_doctype", "reference_name", "allocated_amount"],
"meta_text": "Unreconcile Payment Entries is part of the Accounts module. It tracks payment entries that were previously reconciled but later unlinked. Essential fields include reference_doctype (original linked doc), allocated_amount, and party details."
},
"Item Default": {
"module": "Stock",
"description": "Sets company-specific default values for item transactions.",
"fields": ["company", "default_warehouse", "default_price_list", "default_supplier", "expense_account", "income_account"],
"meta_text": "Item Default is part of the Stock module. It stores default values like warehouse, supplier, and price list for a specific item within a company. This ensures consistent behavior across buying and selling transactions."
},
"Subcontracting BOM": {
"module": "Subcontracting",
"description": "Defines the Bill of Materials used in subcontracting processes.",
"fields": ["finished_good", "finished_good_qty", "finished_good_bom", "service_item", "service_item_qty", "conversion_factor"],
"meta_text": "Subcontracting BOM is part of the Subcontracting module. It links finished goods and service items involved in subcontracting, specifying the quantity and conversion rates used. It's essential for generating subcontracting orders and costing."
},
"Location": {
"module": "Assets",
"description": "Represents a physical or logical location where assets are stored or tracked.",
"fields": ["location_name", "parent_location", "is_group", "latitude", "longitude", "area", "area_uom"],
"meta_text": "Location is part of the Assets module. It defines physical or logical places where assets are located, such as warehouses, rooms, or buildings. Key fields include location_name (name of the place), latitude and longitude (for mapping), and area details."
},
"Submission Queue": {
"module": "Core",
"description": "Tracks background document submissions and their statuses.",
"fields": ["status", "created_at", "enqueued_by", "ref_doctype", "ref_docname", "exception"],
"meta_text": "Submission Queue is part of the Core module. It records background document submissions for bulk or delayed processing. Useful fields include status (processing state), ref_doctype/docname (document reference), and exception (error log, if any)."
},
"Dashboard": {
"module": "Desk",
"description": "Custom or default dashboards displaying charts and cards for business data monitoring.",
"fields": ["dashboard_name", "is_default", "charts", "cards"],
"meta_text": "Dashboard is part of the Desk module. It lets users view visual summaries through charts and cards on a customizable interface. Common fields include dashboard_name (label), charts (graph components), and cards (key metrics)."
},
"Document Follow": {
  "module": "Email",
  "description": "Tracks users who are following specific documents to receive updates.",
  "fields": ["ref_doctype", "ref_docname", "user"],
  "meta_text": "Document Follow is part of the Email module. It tracks users who opt to follow specific documents, enabling them to receive notifications when changes occur. Fields include ref_doctype (document type), ref_docname (specific record), and user."
},
"Quality Meeting": {
  "module": "Quality Management",
  "description": "Used to schedule and document meetings related to quality initiatives.",
  "fields": ["status", "agenda", "minutes"],
  "meta_text": "Quality Meeting is part of the Quality Management module. It is used to record meetings held for discussing quality-related topics. Important fields include status (current meeting state), agenda (discussion points), and minutes (meeting notes)."
},
"Quality Procedure": {
  "module": "Quality Management",
  "description": "Outlines the procedures followed to maintain quality in processes.",
  "fields": ["quality_procedure_name", "process_owner", "parent_quality_procedure", "is_group"],
  "meta_text": "Quality Procedure is part of the Quality Management module. It defines structured steps or guidelines used to ensure quality in operations. Key fields include quality_procedure_name (procedure title), process_owner, and is_group (whether it's a grouped procedure)."
},
"Quality Goal": {
  "module": "Quality Management",
  "description": "Sets measurable targets to maintain or improve product/process quality.",
  "fields": ["goal", "frequency", "procedure", "date", "objectives"],
  "meta_text": "Quality Goal is part of the Quality Management module. It defines specific objectives or targets for maintaining or improving quality. Fields include goal (description of target), frequency (review period), and procedure (related process)."
},
"Quality Review": {
  "module": "Quality Management",
  "description": "Logs reviews conducted to assess progress on quality goals.",
  "fields": ["goal", "date", "procedure", "status", "reviews", "additional_information"],
  "meta_text": "Quality Review is part of the Quality Management module. It documents assessments or reviews done for quality goals. Fields include goal (target reviewed), procedure (related process), and reviews (observations and assessments)."
},
"Quality Action": {
  "module": "Quality Management",
  "description": "Defines corrective or preventive actions to address quality issues.",
  "fields": ["corrective_preventive", "review", "feedback", "status", "date", "goal", "procedure", "resolutions"],
  "meta_text": "Quality Action is part of the Quality Management module. It specifies corrective or preventive measures taken based on reviews or feedback. Fields include status, goal (linked target), procedure, and resolutions (actions taken)."
},
  "Energy Point Log": {
    "module": "Social",
    "description": "Tracks points awarded or deducted based on employee actions.",
    "fields": ["user", "type", "points", "rule", "reference_doctype", "reference_name", "reverted", "revert_of", "reason"],
    "meta_text": "Energy Point Log is part of the Social module. It records energy points earned or lost by users based on predefined rules. Common fields include user (who earned or lost points), type (gain/loss), rule (which rule applied), and reason (why the points were given or deducted)."
  },
  "Workflow Action": {
    "module": "Workflow",
    "description": "Captures actions taken by users during a document's workflow transition.",
    "fields": ["status", "reference_name", "reference_doctype", "workflow_state", "completed_by_role", "completed_by", "permitted_roles", "user"],
    "meta_text": "Workflow Action is part of the Workflow module. It logs user interactions with documents during approval workflows. Fields include status (e.g. Approved), workflow_state (state of the document), and completed_by (user responsible)."
  },
  "List Filter": {
    "module": "Desk",
    "description": "Stores saved list view filters for users on specific doctypes.",
    "fields": ["filter_name", "reference_doctype", "for_user", "filters"],
    "meta_text": "List Filter is part of the Desk module. It allows users to save custom filters for list views on specific doctypes. Key fields include filter_name (title of the filter), reference_doctype (target document type), and filters (filter conditions)."
  },
  "Calendar View": {
    "module": "Desk",
    "description": "Defines how a Doctype is rendered in calendar view.",
    "fields": ["reference_doctype", "subject_field", "start_date_field", "end_date_field", "all_day"],
    "meta_text": "Calendar View is part of the Desk module. It controls how a document type is displayed in a calendar layout. Important fields include reference_doctype (target doctype), subject_field (title), and start/end date fields."
  },
    "Kanban Board": {
      "module": "Desk",
      "description": "Visualizes records of a doctype in a kanban-style board with columns and drag-and-drop capability.",
      "fields": ["kanban_board_name", "reference_doctype", "field_name", "private", "show_labels", "columns"],
      "meta_text": "Kanban Board is part of the Desk module. It is used to display records in a drag-and-drop Kanban layout, such as tasks or leads. Key fields include kanban_board_name (name of the board), reference_doctype (the target doctype), and columns (Kanban stages)."
    },
    "Marketing Campaign": {
      "module": "Website",
      "description": "Stores details about a marketing campaign.",
      "fields": ["campaign_description"],
      "meta_text": "Marketing Campaign is part of the Website module. It is used to record and track basic information about a marketing campaign. The main field is campaign_description, which holds the purpose or summary of the campaign."
    },
    "Network Printer Settings": {
      "module": "Printing",
      "description": "Stores connection details for printing documents via a network printer.",
      "fields": ["server_ip", "port", "printer_name"],
      "meta_text": "Network Printer Settings is part of the Printing module. It defines network printer configurations to enable printing over IP. Key fields include server_ip (printer address), port (printer port), and printer_name (friendly name)."
    },
    "User Group": {
      "module": "Core",
      "description": "Defines a group of users to collectively assign roles or permissions.",
      "fields": ["user_group_members"],
      "meta_text": "User Group is part of the Core module. It allows administrators to manage permissions for a set of users by grouping them. The main field, user_group_members, holds the list of users in the group."
    },
    "DocType Layout": {
      "module": "Custom",
      "description": "Defines a custom layout for a document type, including fields and client-side logic.",
      "fields": ["document_type", "route", "fields", "client_script"],
      "meta_text": "DocType Layout is part of the Custom module. It allows customization of a document's layout and client behavior. Key fields include document_type (target doctype), fields (UI layout components), and client_script (custom JS logic)."
    },
    "Module Onboarding": {
      "module": "Desk",
      "description": "Configures onboarding steps shown when a user accesses a module for the first time.",
      "fields": ["title", "subtitle", "module", "allow_roles", "success_message", "documentation_url", "is_complete", "steps"],
      "meta_text": "Module Onboarding is part of the Desk module. It helps guide new users through features of a module via steps and messages. Fields include title (name), module (ERPNext module), and steps (configured walkthroughs)."
    },
    "Onboarding Step": {
      "module": "Desk",
      "description": "Defines a step in the onboarding process for modules or doctypes.",
      "fields": ["title", "description", "action", "reference_document", "report_reference_doctype", "form_tour", "video_url"],
      "meta_text": "Onboarding Step is part of the Desk module. It represents a single instructional step in a guided onboarding flow. Common fields include title (step name), description (what to do), action (e.g. open form), and reference_document (target doc)."
    },
      "Dashboard Settings": {
        "module": "Desk",
        "description": "Stores user-specific dashboard chart configurations.",
        "fields": ["user", "chart_config"],
        "meta_text": "Dashboard Settings is part of the Desk module. It manages the layout and chart configurations for each user's dashboard. Key fields include user (owner of the settings) and chart_config (stored chart preferences)."
      },
      "Google Calendar": {
        "module": "Integrations",
        "description": "Manages synchronization settings with Google Calendar.",
        "fields": ["enable", "calendar_name", "user", "authorize_google_calendar_access", "pull_from_google_calendar", "push_to_google_calendar", "google_calendar_id"],
        "meta_text": "Google Calendar is part of the Integrations module. It enables syncing events between ERPNext and Google Calendar. Important fields include calendar_name (linked calendar), user (owner), and synchronization controls like pull_from_google_calendar and push_to_google_calendar."
      },
      "Quality Feedback": {
        "module": "Quality Management",
        "description": "Captures user feedback against a quality template for continuous improvement.",
        "fields": ["template", "document_type", "document_name", "parameters"],
        "meta_text": "Quality Feedback is part of the Quality Management module. It is used to collect structured feedback linked to a quality template. Key fields include template (feedback form), document_type (target document), and parameters (response set)."
      },
      "Service Level Agreement": {
        "module": "Support",
        "description": "Defines SLA policies with priorities and resolution targets for support tickets or tasks.",
        "fields": ["document_type", "default_priority", "service_level", "enabled", "start_date", "end_date", "apply_sla_for_resolution", "priorities", "sla_fulfilled_on"],
        "meta_text": "Service Level Agreement is part of the Support module. It outlines the response and resolution timelines for tickets or requests. Core fields include document_type (targeted doc), default_priority, service_level (policy), and apply_sla_for_resolution (activation toggle)."
      },
        "Reminder": {
          "module": "Automation",
          "description": "Stores reminders for specific documents with notification scheduling.",
          "fields": ["user", "remind_at", "description", "reminder_doctype", "reminder_docname"],
          "meta_text": "Reminder is part of the Automation module. It lets users set reminders for specific documents or actions. Fields include user (recipient), remind_at (trigger time), and reminder_docname (linked document)."
        },
        "Custom HTML Block": {
          "module": "Desk",
          "description": "Allows embedding custom HTML, JavaScript, and CSS for dashboards or custom pages.",
          "fields": ["html", "script", "style", "roles"],
          "meta_text": "Custom HTML Block is part of the Desk module. It provides a way to include custom HTML, CSS, or JavaScript in dashboards and reports. Key fields include html (markup), script (JS logic), style (CSS), and roles (visibility control)."
        },
        "Form Tour": {
          "module": "Desk",
          "description": "Provides interactive step-by-step walkthroughs for forms, reports, or dashboards.",
          "fields": ["title", "reference_doctype", "workspace_name", "ui_tour", "steps"],
          "meta_text": "Form Tour is part of the Desk module. It guides users through form elements or workflows using a visual tour. Main fields include title (tour name), reference_doctype (target), ui_tour (tour settings), and steps (walkthrough instructions)."
        },
        "POS Closing Entry": {
          "module": "Accounts",
          "description": "Captures the summary of transactions during a POS session closure.",
          "fields": ["posting_date", "posting_time", "pos_profile", "user", "grand_total", "net_total", "taxes"],
          "meta_text": "POS Closing Entry is part of the Accounts module. It records the financial summary when a POS session ends. Important fields include posting_date, pos_profile (location), user, grand_total (sales), and taxes."
        },
        "Quality Review Objective": {
          "module": "Quality Management",
          "description": "Tracks specific review objectives linked to a quality review.",
          "fields": ["objective", "target", "uom", "status", "review"],
          "meta_text": "Quality Review Objective is part of the Quality Management module. It records measurable outcomes linked to a quality review. Core fields include objective (goal), target (expected value), uom (unit of measure), and status."
        },
        "Non Conformance": {
          "module": "Quality Management",
          "description": "Records issues that deviate from quality standards along with proposed actions.",
          "fields": ["subject", "procedure", "status", "details", "corrective_action", "preventive_action"],
          "meta_text": "Non Conformance is part of the Quality Management module. It documents any deviation from standard processes. Key fields include subject (issue), status, and corrective/preventive actions taken to resolve the nonconformity."
},
"Quality Goal Objective": {
"module": "Quality Management",
"description": "Defines measurable objectives under a specific quality goal.",
"fields": ["objective", "target", "uom"],
"meta_text": "Quality Goal Objective is part of the Quality Management module. It outlines specific, measurable targets tied to quality initiatives. Key fields include objective (goal name), target (numeric value), and uom (unit of measurement)."
},
"Comment": {
"module": "Core",
"description": "Stores comments made by users on different documents.",
"fields": ["comment_type", "comment_by", "reference_doctype", "reference_name", "content"],
"meta_text": "Comment is part of the Core module. It captures feedback, notes, or updates made on documents. Key fields include comment_type (e.g., Comment, Info), comment_by (author), reference_doctype/name (target), and content (comment text)."
},
"Holiday List": {
"module": "Setup",
"description": "Maintains a list of holidays for a company, used in HR and scheduling.",
"fields": ["holiday_list_name", "from_date", "to_date", "weekly_off", "country", "holidays"],
"meta_text": "Holiday List is part of the Setup module. It defines official holidays and weekly offs for an organization. Main fields are holiday_list_name (title), from_date/to_date (validity), weekly_off (recurring holidays), and holidays (dates list)."
},
"Item Tax Template": {
"module": "Accounts",
"description": "Defines tax rules that can be applied to items in transactions.",
"fields": ["title", "company", "disabled", "taxes"],
"meta_text": "Item Tax Template is part of the Accounts module. It lets users define tax rules for items, which are automatically applied in sales or purchase transactions. Fields include title (template name), company, and taxes (list of tax heads)."
},
"Repost Accounting Ledger Items": {
"module": "Accounts",
"description": "Used to trigger re-posting of accounting entries for a specific voucher.",
"fields": ["voucher_type", "voucher_no"],
"meta_text": "Repost Accounting Ledger Items is part of the Accounts module. It enables re-posting of General Ledger entries for a given voucher when changes occur. Key fields include voucher_type (e.g., Sales Invoice) and voucher_no (document reference)."
},
"Global Defaults": {
"module": "Setup",
"description": "Defines default settings such as company, currency, and formatting rules.",
"fields": ["default_company", "country", "default_currency", "disable_rounded_total", "disable_in_words"],
"meta_text": "Global Defaults is part of the Setup module. It centralizes default values for currency, company, country, and formatting preferences. This affects document behavior across the system. Important fields include default_company, default_currency, and rounding/word display settings."
},
"Job Card": {
"module": "Manufacturing",
"description": "Tracks production tasks for a work order, including timing, operations, and materials used.",
"fields": ["work_order", "production_item", "posting_date", "employee", "expected_start_date", "expected_end_date", "actual_start_date", "actual_end_date", "operation", "status"],
"meta_text": "Job Card is part of the Manufacturing module. It documents the execution of an operation from a work order. It includes timelines, responsible employees, and related production items. Key fields include work_order, production_item, status, operation, and time logs."
},
"Project Update": {
"module": "Projects",
"description": "Used to send or record progress updates on a project.",
"fields": ["project", "sent", "date", "time", "users"],
"meta_text": "Project Update is part of the Projects module. It helps teams communicate progress updates for ongoing projects. Important fields are project (linked project), date/time of update, and users (recipients or participants)."
},
"Asset Movement": {
"module": "Assets",
"description": "Tracks the movement of fixed assets within or between company locations.",
"fields": ["company", "purpose", "transaction_date", "assets", "reference_doctype", "reference_name"],
"meta_text": "Asset Movement is part of the Assets module. It records the relocation or reassignment of assets across departments or locations. Key fields include company, purpose (e.g., transfer or issue), transaction_date, and references to related documents."
},
"Portal User": {
"module": "Utilities",
"description": "Represents a user with limited access to the customer-facing web portal.",
"fields": ["user"],
"meta_text": "Portal User is part of the Utilities module. It links internal records to web portal access for external users, such as customers or suppliers. The primary field is user, which maps to a system user account."
},
"Event": {
"module": "Desk",
"description": "Used to create and manage calendar events including meetings and reminders.",
"fields": ["subject", "event_type", "starts_on", "ends_on", "status", "description", "event_participants"],
"meta_text": "Event is part of the Desk module. It allows users to schedule calendar events, meetings, or reminders. Fields like subject, starts_on, ends_on, and participants help track event details. Events can also be synced with Google Calendar."
},

"Exchange Rate Revaluation Account": {
"module": "Accounts",
"description": "Tracks adjustments to foreign currency account balances during exchange rate revaluation.",
"fields": ["account", "party_type", "party", "account_currency", "current_exchange_rate", "new_exchange_rate", "gain_loss"],
"meta_text": "Exchange Rate Revaluation Account is part of the Accounts module. It is used to revalue foreign currency account balances due to fluctuations in exchange rates. Important fields include account, current_exchange_rate, new_exchange_rate, and gain_loss to reflect currency adjustment impacts."
},
"Item Reorder": {
"module": "Stock",
"description": "Specifies minimum stock levels to trigger automatic reordering of items.",
"fields": ["warehouse", "warehouse_reorder_level", "warehouse_reorder_qty", "material_request_type"],
"meta_text": "Item Reorder is part of the Stock module. It defines the reorder rules per warehouse, such as the level at which to trigger restocking and how much to reorder. It ensures inventory is replenished automatically before stockouts occur."
},
"Document Naming Settings": {
"module": "Core",
"description": "Manages naming conventions, series setup, and counters for all doctypes.",
"fields": ["transaction_type", "naming_series_options", "user_must_always_select", "prefix", "current_value"],
"meta_text": "Document Naming Settings is part of the Core module. It controls how documents are named using naming series, prefixes, and counters. Admins can define naming rules per document type and enforce user selection of series."
},

"Exchange Rate Revaluation": {
  "module": "Accounts",
  "description": "Used to calculate and record exchange gains or losses for foreign currency accounts.",
  "fields": ["posting_date", "company", "gain_loss_unbooked", "gain_loss_booked", "total_gain_loss"],
  "meta_text": "Exchange Rate Revaluation is part of the Accounts module. It is used to evaluate the impact of exchange rate fluctuations on foreign currency balances. Key fields include posting_date, company, and total_gain_loss, which reflect the calculated gains or losses from revaluation."
},
"Amended Document Naming Settings": {
  "module": "Core",
  "description": "Defines naming behavior for documents when they are amended.",
  "fields": ["document_type", "action"],
  "meta_text": "Amended Document Naming Settings is part of the Core module. It allows configuration of how document names should be structured when a document is amended. Typical settings include specifying a suffix or custom rule for amended documents."
},
"DocShare": {
  "module": "Core",
  "description": "Tracks which users have access to shared documents and their permissions.",
  "fields": ["user", "share_doctype", "share_name", "read", "write", "share", "submit", "everyone"],
  "meta_text": "DocShare is part of the Core module. It manages document-level sharing by recording permissions for each user or role. It specifies what level of access (read, write, submit) a user has for a particular document."
},
"Report Filter": {
  "module": "Core",
  "description": "Stores reusable filters for reports to control the displayed data.",
  "fields": ["label", "fieldtype", "fieldname", "mandatory", "options", "default"],
  "meta_text": "Report Filter is part of the Core module. It defines filtering options for reports, allowing users to narrow down data views. Fields such as fieldtype, options, and default help control filter behavior and user experience."
},

  "Job Card Scheduled Time": {
    "module": "Manufacturing",
    "description": "Captures the scheduled start and end times for specific operations in a Job Card.",
    "fields": ["from_time", "to_time", "time_in_mins"],
    "meta_text": "Job Card Scheduled Time is part of the Manufacturing module. It records the planned time slots for executing a job operation on the shop floor. Key fields include from_time, to_time, and time_in_mins, which represent the operation's duration."
  },
  "Email Queue": {
    "module": "Email",
    "description": "Stores outgoing emails and their metadata for scheduling and retry management.",
    "fields": ["sender", "recipients", "message", "status", "error", "reference_doctype", "reference_name", "send_after", "priority"],
    "meta_text": "Email Queue is part of the Email module. It tracks all emails to be sent from the system, handling statuses such as pending, sent, or failed. Important fields include sender, recipients, message content, and the associated document reference."
  },
  
    "Work Order Operation": {
      "module": "Manufacturing",
      "description": "Represents each operation in a work order, including its status, workstation, time, and cost details.",
      "fields": ["operation", "status", "completed_qty", "bom", "workstation", "planned_start_time", "planned_end_time", "hour_rate", "time_in_mins"],
      "meta_text": "Work Order Operation is part of the Manufacturing module. It defines each operation involved in executing a Work Order, including the assigned workstation, estimated and actual duration, and cost metrics. Key fields include operation (step name), status, completed_qty, workstation, and time/cost tracking fields."
    },
    "Accounting Dimension Filter": {
      "module": "Accounts",
      "description": "Applies filters and restrictions on accounting dimensions like cost centers or projects.",
      "fields": ["accounting_dimension", "company", "apply_restriction_on_values", "allow_or_restrict", "accounts", "dimensions"],
      "meta_text": "Accounting Dimension Filter is part of the Accounts module. It controls how dimensions like cost centers or projects are applied to specific accounts. You can restrict or allow combinations using filters. Key fields include accounting_dimension, allow_or_restrict, and accounts/dimensions mappings."
    },
    "Patch Log": {
      "module": "Core",
      "description": "Tracks executed patches during system updates or migrations.",
      "fields": ["patch", "skipped", "traceback"],
      "meta_text": "Patch Log is part of the Core module. It records details of all backend patches executed during updates or migrations. This helps in tracking success, skips, and errors. Main fields include patch (name), skipped (status), and traceback (error info if failed)."
    },
    "Party Account": {
      "module": "Accounts",
      "description": "Links a party (customer or supplier) with their respective ledger accounts.",
      "fields": ["company", "account", "advance_account"],
      "meta_text": "Party Account is part of the Accounts module. It maps each party (Customer or Supplier) to their designated ledger accounts for transaction recording. Core fields include company, account (main ledger), and advance_account (for prepayments)."
    },
    
      "Email Account": {
        "module": "Email",
        "description": "Stores configuration details for sending and receiving emails through ERPNext.",
        "fields": ["email_id", "email_account_name", "domain", "auth_method", "enable_incoming", "email_server", "incoming_port", "enable_outgoing", "smtp_server", "smtp_port", "add_signature", "signature"],
        "meta_text": "Email Account is part of the Email module. It manages both incoming and outgoing email configurations for ERPNext, allowing seamless email integration. Key fields include email_id, domain (email domain used), authentication method, and server details for both IMAP/POP and SMTP. You can also configure auto-signatures and reply settings."
      },
      "Email Domain": {
        "module": "Email",
        "description": "Defines domain-level email settings such as IMAP and SMTP configurations, reused across email accounts.",
        "fields": ["domain_name", "email_server", "incoming_port", "use_imap", "use_ssl", "smtp_server", "smtp_port"],
        "meta_text": "Email Domain is part of the Email module. It defines the default email server settings for a domain, including ports and encryption methods. This helps standardize and simplify email account setup. Important fields include domain_name, email_server, and settings like use_imap and smtp_port."
      },
      "Installation Note": {
        "module": "Selling",
        "description": "Documents the installation of products or services delivered to the customer.",
        "fields": ["naming_series", "customer", "customer_address", "contact_person", "inst_date", "company", "status", "items"],
        "meta_text": "Installation Note is part of the Selling module. It logs the successful installation of products at the customer’s site, typically after a delivery. This helps in tracking fulfillment and service history. Key fields include customer, contact_person, installation date, and the list of installed items."
      },
      "Maintenance Visit": {
  "module": "Maintenance",
  "description": "Records the details of a visit to a customer's location for maintenance activities, capturing the type, status, feedback, and contact info.",
  "fields": [
    "customer", "customer_name", "mntc_date", "mntc_time", "maintenance_type", "status", "customer_feedback", "contact_person", "company"
  ],
  "meta_text": "Maintenance Visit is a part of the Maintenance module. It is used to track each visit to a customer's site for equipment maintenance. Key fields include customer (linked customer), mntc_date (visit date), maintenance_type (type of maintenance), status (visit status), and customer_feedback (feedback from the customer)."
},

"Maintenance Schedule": {
  "module": "Maintenance",
  "description": "Defines the planned maintenance for equipment or services over a period, including customer details, schedule items, and contact info.",
  "fields": [
    "customer", "status", "transaction_date", "items", "schedules", "customer_name", "contact_person", "customer_address", "territory", "company"
  ],
  "meta_text": "Maintenance Schedule is a part of the Maintenance module. It helps in planning and managing recurring maintenance activities. Important fields include customer (linked customer), transaction_date (date of scheduling), items (items scheduled), schedules (maintenance intervals), and contact_person (who to contact for this schedule)."
},

"Customer Group": {
  "module": "Setup",
  "description": "Used to categorize customers into logical groups for reporting, pricing, credit control, and defaults.",
  "fields": [
    "customer_group_name", "parent_customer_group", "default_price_list", "credit_limits", "default_receivable_account"
  ],
  "meta_text": "Customer Group is a part of the Setup module. It is used to organize customers into groups for better reporting and pricing rules. Key fields include customer_group_name (name of the group), parent_customer_group (hierarchy), default_price_list (pricing rule), and credit_limits (credit settings for group members)."
},

"Print Settings": {
  "module": "Printing",
  "description": "Controls how documents are printed or exported to PDF, including formatting, page settings, and letterhead options.",
  "fields": [
    "send_print_as_pdf", "pdf_page_size", "repeat_header_footer", "with_letterhead", "print_style", "font", "font_size"
  ],
  "meta_text": "Print Settings is a part of the Printing module. It defines default configurations for how documents should appear when printed or exported as PDF. Key fields include send_print_as_pdf (export as PDF), pdf_page_size (document size), repeat_header_footer (format control), print_style (style to use), and with_letterhead (use letterhead in print)."
},
"Form Tour Step": {
  "module": "Desk",
  "description": "Defines each step in a UI tour within ERPNext forms, guiding users through fields and actions interactively.",
  "fields": [
    "ui_tour", "title", "fieldname", "description", "position", "next_on_click", "next_step_condition", "child_doctype"
  ],
  "meta_text": "Form Tour Step is part of the Desk module. It is used to guide users step-by-step through forms by highlighting fields or sections. Fields include ui_tour (the linked tour), fieldname (targeted field), title (step title), description (what the step explains), position (tooltip position), and next_step_condition (logic to move to next step)."
},

"Webhook Request Log": {
  "module": "Integrations",
  "description": "Captures logs of outgoing webhook requests sent from ERPNext, including payload and response details.",
  "fields": [
    "webhook", "reference_document", "headers", "data", "user", "url", "response", "error"
  ],
  "meta_text": "Webhook Request Log is part of the Integrations module. It tracks webhook activity including the payload sent and the server’s response. Key fields include webhook (triggered webhook), data (payload content), url (target endpoint), and error (any failure details)."
},

"Workspace Custom Block": {
  "module": "Desk",
  "description": "Used to define reusable content blocks for custom workspace dashboards in ERPNext.",
  "fields": [
    "custom_block_name", "label"
  ],
  "meta_text": "Workspace Custom Block is part of the Desk module. It lets users define blocks of content for customizing ERPNext dashboards. Main fields are custom_block_name (identifier) and label (display name on the workspace)."
},

"Workflow Transition": {
  "module": "Workflow",
  "description": "Defines the allowed transitions between workflow states, actions, and roles in document workflows.",
  "fields": [
    "state", "action", "next_state", "allowed", "allow_self_approval", "conditions"
  ],
  "meta_text": "Workflow Transition is part of the Workflow module. It controls how a document moves from one state to another within a workflow. Important fields include state (current state), action (trigger action), next_state (target state), and allowed (roles allowed to perform the transition)."
},

"Packing Slip": {
  "module": "Stock",
  "description": "Used to document and print details of packages prepared for delivery, including contents and weight information.",
  "fields": [
    "delivery_note", "from_case_no", "to_case_no", "items", "net_weight_pkg", "gross_weight_pkg", "letter_head"
  ],
  "meta_text": "Packing Slip is part of the Stock module. It lists package details related to a delivery, including items packed and weight info. Key fields are delivery_note (linked shipment), from_case_no / to_case_no (package range), items (contents), and net_weight_pkg / gross_weight_pkg (weights)."
},

"Packing Slip Item": {
  "module": "Stock",
  "description": "Represents individual items included in a packing slip with quantity and packaging details.",
  "fields": [
    "item_code", "item_name", "batch_no", "description", "qty", "net_weight", "stock_uom"
  ],
  "meta_text": "Packing Slip Item is part of the Stock module. It logs each product included in a packing slip. Fields include item_code (product ID), qty (packed quantity), net_weight (weight of item), and batch_no (if applicable)."
},
"Process Statement Of Accounts Customer": {
  "module": "Accounts",
  "description": "Used to manage customer contact details for sending statements of accounts.",
  "fields": [
    "customer", "customer_name", "billing_email", "primary_email"
  ],
  "meta_text": "Process Statement Of Accounts Customer is part of the Accounts module. It stores customer-specific contact details for sending account statements. Fields include customer (reference), billing_email (for statement delivery), and primary_email (alternate contact)."
},

"Note Seen By": {
  "module": "Desk",
  "description": "Tracks which users have seen a specific note in the system.",
  "fields": [
    "user"
  ],
  "meta_text": "Note Seen By is part of the Desk module. It logs user visibility of system notes. The only key field is user, representing who has seen the note."
},

"Document Naming Rule": {
  "module": "Core",
  "description": "Defines flexible naming rules for documents using conditions and counters.",
  "fields": [
    "document_type", "disabled", "priority", "conditions", "prefix", "counter", "prefix_digits"
  ],
  "meta_text": "Document Naming Rule is part of the Core module. It allows dynamic document naming based on custom rules. Key fields include document_type (target doctype), conditions (when rule applies), prefix (naming prefix), and counter (current series count)."
},

"Timesheet": {
  "module": "Projects",
  "description": "Tracks time logs and billing details for employees on projects or tasks.",
  "fields": [
    "title", "company", "customer", "currency", "status", "employee", "start_date", "end_date", "time_logs", "total_hours", "total_billable_hours", "total_billed_hours", "total_billable_amount", "total_billed_amount", "total_costing_amount"
  ],
  "meta_text": "Timesheet is part of the Projects module. It records employee time entries and billing details for work done. Important fields include employee (who worked), time_logs (entries of work), total_hours (overall time), total_billable_amount (revenue), and total_costing_amount (cost to company)."
},
"Workflow Action Master": {
  "module": "Workflow",
  "description": "Defines reusable workflow action names like Approve or Reject.",
  "fields": [
    "workflow_action_name"
  ],
  "meta_text": "Workflow Action Master is part of the Workflow module. It defines reusable actions (e.g., Approve, Reject) that are used in workflow transitions. The main field is workflow_action_name, which specifies the name of the action."
},

"Shareholder": {
  "module": "Accounts",
  "description": "Stores shareholder details for managing equity and contact records.",
  "fields": [
    "title", "naming_series", "folio_no", "company", "is_company", "share_balance"
  ],
  "meta_text": "Shareholder is part of the Accounts module. It captures information about individual or institutional shareholders. Important fields include title (name), company (associated company), folio_no (registration number), and share_balance (current holdings)."
},

"OAuth Bearer Token": {
  "module": "Integrations",
  "description": "Stores access tokens for OAuth-based integrations.",
  "fields": [
    "client", "user", "access_token", "refresh_token", "expiration_time", "status"
  ],
  "meta_text": "OAuth Bearer Token is part of the Integrations module. It stores bearer tokens used in OAuth authentication. Fields include client (app using the token), user (token owner), access_token, refresh_token, expiration_time (when token expires), and status (validity)."
},

"Production Plan Item Reference": {
  "module": "Manufacturing",
  "description": "Links production items to originating sales orders.",
  "fields": [
    "item_reference", "sales_order", "sales_order_item", "qty"
  ],
  "meta_text": "Production Plan Item Reference is part of the Manufacturing module. It connects a production item to its corresponding sales order. Fields include item_reference (product), sales_order (source document), and qty (required quantity)."
},

"Asset Maintenance Task": {
  "module": "Assets",
  "description": "Defines periodic tasks for maintaining an asset.",
  "fields": [
    "maintenance_task", "maintenance_type", "maintenance_status", "start_date", "end_date", "next_due_date", "last_completion_date"
  ],
  "meta_text": "Asset Maintenance Task is part of the Assets module. It defines recurring maintenance tasks for specific assets. Fields include maintenance_task (task title), maintenance_type (e.g., inspection), maintenance_status, start_date, end_date, next_due_date, and last_completion_date."
},
"Maintenance Schedule Item": {
  "module": "Maintenance",
  "description": "Defines an individual item that is part of a maintenance schedule.",
  "fields": [
    "item_code", "start_date", "end_date", "periodicity", "no_of_visits", "sales_person", "serial_no", "sales_order"
  ],
  "meta_text": "Maintenance Schedule Item is part of the Maintenance module. It specifies the details of each item included in a maintenance schedule. Key fields include item_code (the item to be serviced), start_date and end_date (maintenance period), periodicity (frequency of visits), no_of_visits (expected number of visits), and sales_order (linked sales order)."
},

"Web Page View": {
  "module": "Website",
  "description": "Captures details of individual web page visits by users.",
  "fields": [
    "path", "referrer", "browser", "is_unique", "time_zone", "source", "visitor_id"
  ],
  "meta_text": "Web Page View is part of the Website module. It logs user activity on website pages for analytics. Fields include path (URL accessed), referrer (previous page), browser (user’s browser), is_unique (first visit or not), and visitor_id (unique session identifier)."
},

"Dropbox Settings": {
  "module": "Integrations",
  "description": "Configuration for integrating ERPNext with Dropbox for file backup.",
  "fields": [
    "enabled", "backup_frequency", "limit_no_of_backups", "no_of_backups", "app_access_key", "dropbox_refresh_token"
  ],
  "meta_text": "Dropbox Settings is part of the Integrations module. It configures Dropbox integration for backups. Fields include enabled (toggle the integration), backup_frequency (daily/weekly), limit_no_of_backups (max backups to retain), and dropbox_refresh_token (token used to maintain connection)."
},

"Installation Note Item": {
  "module": "Selling",
  "description": "Tracks the items installed at a customer’s site as part of an Installation Note.",
  "fields": [
    "item_code", "serial_no", "qty", "description", "prevdoc_docname", "prevdoc_doctype"
  ],
  "meta_text": "Installation Note Item is part of the Selling module. It details each item installed for a customer. Fields include item_code (product installed), serial_no (specific unit), qty (quantity), and prevdoc_docname (linked reference from a Sales Order or Delivery Note)."
},

"Account Closing Balance": {
  "module": "Accounts",
  "description": "Stores the final balances of accounts during a period-end closing.",
  "fields": [
    "closing_date", "account", "debit", "credit", "account_currency", "company", "period_closing_voucher"
  ],
  "meta_text": "Account Closing Balance is part of the Accounts module. It stores debit and credit values during financial closing. Key fields are account (GL account), closing_date, debit and credit (amounts), account_currency, and period_closing_voucher (link to the voucher used for closing)."
},
"DocPerm": {
  "module": "Core",
  "description": "Defines standard role-based permission settings for any document in ERPNext.",
  "fields": [
    "role", "permlevel", "if_owner", "read", "write", "create", "delete", "submit", "cancel", "amend", "export", "import", "print", "email", "share"
  ],
  "meta_text": "DocPerm is part of the Core module. It defines permission rules for accessing a document. Fields include role (who gets the permission), permlevel (hierarchy level), and various action toggles like read, write, create, delete, submit, amend, export, import, print, email, and share."
},

"Custom DocPerm": {
  "module": "Core",
  "description": "Used to override or extend default permissions on a document.",
  "fields": [
    "parent", "role", "permlevel", "if_owner", "read", "write", "create", "delete", "submit", "cancel", "amend", "export", "import", "print", "email", "share"
  ],
  "meta_text": "Custom DocPerm is part of the Core module. It allows custom overrides to default document permissions. Important fields include parent (linked DocType), role (who gets access), permlevel (level of permission), and permission toggles like read, write, create, delete, submit, amend, export, import, print, email, and share."
},

"Blog Post": {
  "module": "Website",
  "description": "Used to publish blog articles on the website, manage visibility, SEO, and reader engagement options.",
  "fields": [
    "title", "blog_category", "blogger", "published_on", "published", "featured", "disable_comments", "blog_intro", "content", "meta_title", "meta_description", "meta_image"
  ],
  "meta_text": "Blog Post is part of the Website module. It represents articles published on your site. Main fields are title (post name), blog_category (assigned category), blogger (author), published (status toggle), published_on (date), featured (highlighted post), blog_intro (summary), content (body), and meta fields for SEO like meta_title, meta_description, and meta_image."
},
"Party Specific Item": {
  "module": "Selling",
  "description": "Specifies items linked to a specific party like a customer or supplier.",
  "fields": [
    "party_type", "party", "restrict_based_on", "based_on_value"
  ],
  "meta_text": "Party Specific Item is part of the Selling module. It allows defining item restrictions based on a particular party such as a customer or supplier. Important fields include party_type (Customer/Supplier), party (linked name), restrict_based_on (e.g., Item Group), and based_on_value (the specific value to restrict by)."
},

"Workspace Number Card": {
  "module": "Desk",
  "description": "Represents a number card used in the workspace dashboard for metrics display.",
  "fields": [
    "number_card_name", "label"
  ],
  "meta_text": "Workspace Number Card is part of the Desk module. It helps visualize numerical KPIs on workspace dashboards. Key fields include number_card_name (reference to the number card) and label (display title)."
},

"Industry Type": {
  "module": "Selling",
  "description": "Defines industry classifications for use in customer segmentation.",
  "fields": [
    "industry"
  ],
  "meta_text": "Industry Type is part of the Selling module. It is used to classify customers or leads by their industry segment. The primary field is industry (e.g., Manufacturing, Retail, Services)."
},

"Designation": {
  "module": "Setup",
  "description": "Specifies job designations used across employee records and departments.",
  "fields": [
    "designation_name", "description"
  ],
  "meta_text": "Designation is part of the Setup module. It represents job titles within your organization. Fields include designation_name (title like Manager, Engineer) and description (optional detail about the role)."
},

"Sales Stage": {
  "module": "CRM",
  "description": "Defines the stages in a sales pipeline like Prospecting, Quotation, etc.",
  "fields": [
    "stage_name"
  ],
  "meta_text": "Sales Stage is part of the CRM module. It categorizes each phase of a sales pipeline. The main field is stage_name (e.g., Prospecting, Negotiation, Closing)."
},

"Sales Partner Type": {
  "module": "Selling",
  "description": "Classifies sales partners into types such as Distributor, Reseller, etc.",
  "fields": [
    "sales_partner_type"
  ],
  "meta_text": "Sales Partner Type is part of the Selling module. It groups sales partners by type. The key field is sales_partner_type (e.g., Distributor, Channel Partner)."
},
"Lead Source": {
  "module": "CRM",
  "description": "Defines the origin or source of a lead in the CRM system.",
  "fields": ["source_name", "details"],
  "meta_text": "Lead Source is part of the CRM module. It helps track the origin of a lead (e.g., Website, Referral, Trade Show). Key fields include source_name (name of the lead source) and details (additional description or context)."
},

"LDAP Settings": {
  "module": "Integrations",
  "description": "Configure Lightweight Directory Access Protocol (LDAP) server integration with ERPNext.",
  "fields": [
    "enabled", "ldap_directory_server", "ldap_server_url", "base_dn", "ldap_search_path_user", 
    "ldap_search_path_group", "ldap_email_field", "ldap_username_field", "ldap_first_name_field", 
    "ldap_last_name_field", "ssl_tls_mode", "default_user_type", "default_role"
  ],
  "meta_text": "LDAP Settings is part of the Integrations module. It is used to integrate ERPNext with LDAP directory servers for user authentication and auto-provisioning. Notable fields include ldap_directory_server (server name), ldap_server_url (connection URL), base_dn (Base DN for search), and user field mappings like ldap_email_field and ldap_first_name_field. SSL and security can also be configured using ssl_tls_mode."
},

"Tax Withheld Vouchers": {
  "module": "Accounts",
  "description": "Stores voucher entries where tax has been withheld at the time of payment or invoicing.",
  "fields": ["voucher_type", "voucher_name", "taxable_amount"],
  "meta_text": "Tax Withheld Vouchers is part of the Accounts module. It logs tax withholding details related to vouchers such as invoices or payments. Key fields include voucher_type (e.g., Payment Entry, Purchase Invoice), voucher_name (reference number), and taxable_amount (amount on which tax was withheld)."
},
"S3 Backup Settings": {
  "module": "Integrations",
  "description": "Configure Amazon S3 integration for automated backups in ERPNext.",
  "fields": ["enabled", "access_key_id", "secret_access_key", "notify_email", "bucket", "endpoint_url", "frequency", "backup_files"],
  "meta_text": "S3 Backup Settings is part of the Integrations module. It allows configuration of Amazon S3 for storing ERPNext backups. Key fields include access_key_id and secret_access_key (for authentication), bucket (target S3 bucket), endpoint_url (optional custom endpoint), frequency (e.g., Daily, Weekly), and notify_email (for alerts)."
},

"BOM Scrap Item": {
  "module": "Manufacturing",
  "description": "Defines scrap materials and their quantities in a Bill of Materials (BOM).",
  "fields": ["item_code", "item_name", "stock_qty", "rate", "amount", "stock_uom"],
  "meta_text": "BOM Scrap Item is part of the Manufacturing module. It records scrap items that are expected during production as per the Bill of Materials. Important fields include item_code (scrap material), stock_qty (quantity expected to scrap), rate (cost per unit), and amount (total scrap value)."
},

"Token Cache": {
  "module": "Integrations",
  "description": "Stores token details used in OAuth-based app integrations.",
  "fields": ["user", "connected_app", "access_token", "refresh_token", "expires_in", "token_type"],
  "meta_text": "Token Cache is part of the Integrations module. It holds OAuth token data for connected third-party apps. Fields include user (ERPNext user), connected_app (integration name), access_token and refresh_token (used for authentication), and expires_in (token validity duration)."
},

"Territory": {
  "module": "Setup",
  "description": "Used to categorize customers based on geographical regions.",
  "fields": ["territory_name", "parent_territory", "is_group", "territory_manager"],
  "meta_text": "Territory is part of the Setup module. It is used to define geographic classifications for customers and sales planning. Key fields include territory_name (region name), parent_territory (hierarchy), is_group (boolean flag for grouping), and territory_manager (assigned person)."
},

"Supplier Group": {
  "module": "Setup",
  "description": "Organizes suppliers into logical categories for management and reporting.",
  "fields": ["supplier_group_name", "parent_supplier_group", "is_group", "payment_terms", "default_payable_account"],
  "meta_text": "Supplier Group is part of the Setup module. It categorizes suppliers to simplify filtering, permissions, and accounting. Key fields include supplier_group_name (group label), parent_supplier_group (hierarchy), payment_terms, and default_payable_account (default ledger for payments)."
},

"Homepage": {
  "module": "Portal",
  "description": "Controls the layout and content of the ERPNext website homepage.",
  "fields": ["company", "hero_section_based_on", "title", "tag_line", "description", "hero_image", "slideshow"],
  "meta_text": "Homepage is part of the Portal module. It manages how the front page of the ERPNext website appears. Key fields include title (main heading), tag_line (brief slogan), hero_image (banner image), and slideshow (optional rotating content section)."
},
"Appointment": {
  "module": "CRM",
  "description": "Used to schedule and track appointments with customers or leads.",
  "fields": ["scheduled_time", "status", "customer_name", "customer_phone_number", "customer_email", "appointment_with", "party", "calendar_event"],
  "meta_text": "Appointment is part of the CRM module. It is used to manage and track scheduled meetings or discussions with customers or leads. Fields include scheduled_time (time of the appointment), status (e.g., Scheduled, Completed), customer_name (person attending), customer_email (contact email), and calendar_event (linked calendar entry)."
},

"Appointment Booking Settings": {
  "module": "CRM",
  "description": "Defines rules and configuration for booking appointments via the website or internally.",
  "fields": ["enable_scheduling", "availability_of_slots", "number_of_agents", "agent_list", "holiday_list", "appointment_duration", "advance_booking_days", "success_redirect_url"],
  "meta_text": "Appointment Booking Settings is part of the CRM module. It configures how users or agents can book appointments, especially through online portals. Important fields include enable_scheduling (whether booking is active), number_of_agents (available team members), appointment_duration (slot length), and advance_booking_days (booking window)."
},

"Bank Clearance": {
  "module": "Accounts",
  "description": "Used to reconcile bank transactions by clearing pending entries within a specified period.",
  "fields": ["account", "account_currency", "from_date", "to_date", "bank_account", "include_reconciled_entries", "payment_entries"],
  "meta_text": "Bank Clearance is part of the Accounts module. It helps reconcile financial transactions recorded in ERPNext with actual bank statements. Key fields include account (general ledger account), from_date and to_date (transaction period), bank_account (linked account), and payment_entries (entries to be reconciled)."
},
"Role Permission for Page and Report": {
  "module": "Core",
  "description": "Used to define access control for specific pages and reports based on user roles.",
  "fields": ["set_role_for", "page", "report", "enable_prepared_report", "roles"],
  "meta_text": "Role Permission for Page and Report is part of the Core module. It controls which user roles have access to specific pages or reports in the system. Common fields include page (target page), report (target report), and roles (list of roles with access)."
},

"Incoterm": {
  "module": "Setup",
  "description": "Stores international commercial terms used in trade agreements.",
  "fields": ["code", "title", "description"],
  "meta_text": "Incoterm is part of the Setup module. It defines standard international trade terms such as FOB or CIF, which clarify responsibility in shipping agreements. Key fields include code (short form like 'FOB'), title (full term), and description (detailed meaning)."
},

"Shipment": {
  "module": "Stock",
  "description": "Used to manage and track shipment of goods between locations or to customers.",
  "fields": ["pickup_from_type", "pickup_address", "delivery_to_type", "delivery_address", "shipment_parcel", "shipment_type", "service_provider", "awb_number", "tracking_status", "status"],
  "meta_text": "Shipment is part of the Stock module. It helps manage logistics for goods being shipped, including pickup and delivery details. Important fields include shipment_type (e.g., inbound, outbound), pickup_address, delivery_address, service_provider (courier), awb_number (airway bill), and tracking_status."
},

"Workstation Type": {
  "module": "Manufacturing",
  "description": "Defines categories of workstations and their associated cost breakdown.",
  "fields": ["workstation_type", "hour_rate_electricity", "hour_rate_labour", "hour_rate", "description"],
  "meta_text": "Workstation Type is part of the Manufacturing module. It categorizes different workstation setups and their cost structure used during production. Key fields include workstation_type (e.g., CNC, Assembly), hour_rate (total hourly cost), and breakdowns like hour_rate_labour and hour_rate_electricity."
},
"Customer Credit Limit": {
  "module": "Selling",
  "description": "Specifies the credit limit for a customer in a particular company and allows bypassing checks if needed.",
  "fields": ["company", "credit_limit", "bypass_credit_limit_check"],
  "meta_text": "Customer Credit Limit is part of the Selling module. It defines the maximum allowable credit (credit_limit) for a customer per company and includes an option to bypass_credit_limit_check for special cases."
},

"BOM Operation": {
  "module": "Manufacturing",
  "description": "Specifies operations required for a Bill of Materials (BOM), including time, cost, and workstation.",
  "fields": ["sequence_id", "operation", "workstation", "time_in_mins", "hour_rate", "operating_cost"],
  "meta_text": "BOM Operation is part of the Manufacturing module. It details the manufacturing steps needed for a BOM, including operation (step name), workstation (e.g., CNC), time_in_mins (duration), hour_rate, and operating_cost."
},

"Repost Payment Ledger Items": {
  "module": "Accounts",
  "description": "Used to repost the general ledger entries related to payments, typically after changes to original vouchers.",
  "fields": ["voucher_type", "voucher_no"],
  "meta_text": "Repost Payment Ledger Items is part of the Accounts module. It allows reprocessing ledger entries for financial vouchers. Key fields include voucher_type (e.g., Payment Entry) and voucher_no (specific reference)."
},

"Website Theme": {
  "module": "Website",
  "description": "Defines styling and visual appearance of the website including colors, fonts, and custom scripts.",
  "fields": ["theme", "google_font", "font_size", "primary_color", "background_color", "custom_scss", "js"],
  "meta_text": "Website Theme is part of the Website module. It manages visual styles like primary_color, font_size, and allows custom overrides using custom_scss and JavaScript (js)."
},
"Event Participants": {
  "module": "Desk",
  "description": "Links a participant's email with a specific document or event within the system.",
  "fields": ["reference_doctype", "reference_docname", "email"],
  "meta_text": "Event Participants is part of the Desk module. It tracks individuals involved in a document or event by linking their email to a specific reference_doctype (e.g., Event) and reference_docname (e.g., EVT-0001)."
},

"Blogger": {
  "module": "Website",
  "description": "Details of a content creator contributing blog posts to the website.",
  "fields": ["full_name", "short_name", "user", "bio", "avatar"],
  "meta_text": "Blogger is part of the Website module. It represents a user who writes blog posts, including their full_name, short_name (handle), bio, and profile image (avatar)."
},

"Blog Category": {
  "module": "Website",
  "description": "Defines and organizes blog posts under thematic categories.",
  "fields": ["title", "description", "route", "preview_image"],
  "meta_text": "Blog Category is part of the Website module. It categorizes blog posts using title (e.g., Tech), description (summary), and preview_image. The route defines the URL path for the category."
},
"Prospect": {
  "module": "CRM",
  "description": "Represents a potential customer or lead being evaluated before qualifying as a customer.",
  "fields": ["company_name", "customer_group", "market_segment", "industry", "territory", "prospect_owner"],
  "meta_text": "Prospect is part of the CRM module. It represents a potential lead or company being evaluated, with details such as company_name (e.g., FutureTech Ltd.), customer_group (e.g., Enterprise), industry (e.g., IT Services), and prospect_owner (e.g., sales agent)."
},

"Budget": {
  "module": "Accounts",
  "description": "Defines yearly or monthly financial plans and spending limits for accounts, cost centers, or projects.",
  "fields": ["budget_against", "company", "cost_center", "fiscal_year", "monthly_distribution", "accounts"],
  "meta_text": "Budget is part of the Accounts module. It helps in setting financial plans against a company, cost_center, or project, including fiscal_year (e.g., 2024-25), monthly_distribution, and budget_against (e.g., Cost Center)."
},

"Data Export": {
  "module": "Core",
  "description": "Tool used to export data from any doctype into formats like CSV or Excel.",
  "fields": ["reference_doctype", "file_type", "filter_list", "fields_multicheck"],
  "meta_text": "Data Export is part of the Core module. It allows exporting records from a reference_doctype (e.g., Sales Invoice) into file_type (e.g., CSV), using filters and selected fields."
},

"Payment Schedule": {
  "module": "Accounts",
  "description": "Defines payment milestones and schedules for invoices, including discounts and due dates.",
  "fields": ["payment_term", "due_date", "mode_of_payment", "invoice_portion", "discount", "payment_amount"],
  "meta_text": "Payment Schedule is part of the Accounts module. It manages scheduled payments with terms like payment_term (e.g., Net 30), due_date, payment_amount, mode_of_payment (e.g., Bank Transfer), and possible early payment discount."
},
"Item Supplier": {
  "module": "Stock",
  "description": "Links a supplier to a specific item, storing the supplier's part number for reference.",
  "fields": ["supplier", "supplier_part_no"],
  "meta_text": "Item Supplier is part of the Stock module. It links supplier (e.g., ABC Traders) to an item with a supplier_part_no (e.g., SPN-4567) used for procurement mapping."
},

"View Log": {
  "module": "Core",
  "description": "Tracks which user viewed which document and when for audit and monitoring.",
  "fields": ["viewed_by", "reference_doctype", "reference_name"],
  "meta_text": "View Log is part of the Core module. It records view activity such as viewed_by (e.g., john.doe@example.com), reference_doctype (e.g., Sales Order), and reference_name (e.g., SO-00045) for auditing."
},

"Email Queue Recipient": {
  "module": "Email",
  "description": "Stores the recipients and their status for each email queued for sending.",
  "fields": ["recipient", "status", "error"],
  "meta_text": "Email Queue Recipient is part of the Email module. It logs recipient (e.g., jane@example.com), status (e.g., Sent, Failed), and error messages if the email delivery failed."
},

"Task Type": {
  "module": "Projects",
  "description": "Defines the category or classification of a task with optional weightage for prioritization.",
  "fields": ["weight", "description"],
  "meta_text": "Task Type is part of the Projects module. It helps categorize tasks by description (e.g., Bug Fixing) and weight (e.g., 10) to prioritize project workload."
},

"Subcontracting Order Supplied Item": {
  "module": "Subcontracting",
  "description": "Details the raw materials supplied to a subcontractor for a specific order, including quantities and rates.",
  "fields": ["main_item_code", "rm_item_code", "stock_uom", "required_qty", "supplied_qty", "consumed_qty", "rate", "amount"],
  "meta_text": "Subcontracting Order Supplied Item is part of the Subcontracting module. It defines raw materials like rm_item_code (e.g., Raw Bolt), required_qty (e.g., 100), and supplied_qty (e.g., 80) sent for manufacturing of main_item_code (e.g., Assembled Gear), including rate and amount."
},
"Item Barcode": {
  "module": "Stock",
  "description": "Stores alternate barcodes for an item, including type and unit of measurement.",
  "fields": ["barcode", "barcode_type", "uom"],
  "meta_text": "Item Barcode is part of the Stock module. It maps barcode (e.g., 8901123004567), barcode_type (e.g., EAN), and uom (e.g., Box) for inventory scanning and item lookup."
},

"Web Form List Column": {
  "module": "Website",
  "description": "Defines which fields appear in a web form listing view.",
  "fields": ["fieldname", "fieldtype", "label"],
  "meta_text": "Web Form List Column is part of the Website module. It allows configuring list views with fieldname (e.g., customer_name), fieldtype (e.g., Data), and label (e.g., Customer Name)."
},

"Salutation": {
  "module": "Contacts",
  "description": "Stores salutation prefixes used in contact forms.",
  "fields": ["salutation"],
  "meta_text": "Salutation is part of the Contacts module. It stores prefix values like salutation (e.g., Mr., Ms., Dr.) to personalize names in forms and documents."
},

"Gender": {
  "module": "Contacts",
  "description": "Stores gender values used across forms.",
  "fields": ["gender"],
  "meta_text": "Gender is part of the Contacts module. It stores values like gender (e.g., Male, Female, Other) for classification in user profiles and HR records."
},

"Country": {
  "module": "Geo",
  "description": "Stores geographic information about countries for regional settings.",
  "fields": ["country_name", "code", "date_format", "time_format", "time_zones"],
  "meta_text": "Country is part of the Geo module. It includes country_name (e.g., Qatar), code (e.g., QA), date_format (e.g., DD-MM-YYYY), and time_format (e.g., 24H) for regional customization."
},

"DefaultValue": {
  "module": "Core",
  "description": "Stores global or user-specific default values for fields in ERP.",
  "fields": ["defkey", "defvalue"],
  "meta_text": "DefaultValue is part of the Core module. It maps defkey (e.g., default_currency) to defvalue (e.g., QAR) for automatically populating form fields."
},
"Transaction Log": {
  "module": "Core",
  "description": "Logs changes and hashes for documents to maintain data integrity.",
  "fields": ["reference_doctype", "document_name", "timestamp", "transaction_hash"],
  "meta_text": "Transaction Log is part of the Core module. It tracks changes with reference_doctype (e.g., Sales Invoice), document_name (e.g., INV-2025-0001), timestamp (e.g., 2025-04-15 09:00), and transaction_hash to ensure record traceability."
},

"Success Action": {
  "module": "Core",
  "description": "Defines success messages and actions after a process is completed.",
  "fields": ["ref_doctype", "first_success_message", "message", "next_actions"],
  "meta_text": "Success Action is part of the Core module. It holds post-process settings for ref_doctype (e.g., Leave Application), first_success_message (e.g., Leave applied successfully), and next_actions (e.g., Notify Manager)."
},

"Has Role": {
  "module": "Core",
  "description": "Links a user to a specific role.",
  "fields": ["role"],
  "meta_text": "Has Role is part of the Core module. It stores role (e.g., Accounts Manager) assigned to users for permission control."
},

"User Social Login": {
  "module": "Core",
  "description": "Stores linked social login information for a user.",
  "fields": ["provider", "username", "userid"],
  "meta_text": "User Social Login is part of the Core module. It includes provider (e.g., Google), username (e.g., john.doe), and userid (e.g., 1029384756) for authentication."
},

"Has Domain": {
  "module": "Core",
  "description": "Defines which domain a record or feature belongs to.",
  "fields": ["domain"],
  "meta_text": "Has Domain is part of the Core module. It maps domain (e.g., Healthcare, Education) to control module-specific access and behavior."
},

"Domain Settings": {
  "module": "Core",
  "description": "Controls which domains are active in the system.",
  "fields": ["active_domains"],
  "meta_text": "Domain Settings is part of the Core module. It contains active_domains (e.g., ['Retail', 'Manufacturing']) to customize features available in the ERP."
},

"SMS Parameter": {
  "module": "Core",
  "description": "Stores SMS gateway parameters used for sending messages.",
  "fields": ["parameter", "value", "header"],
  "meta_text": "SMS Parameter is part of the Core module. It holds configuration such as parameter (e.g., api_key), value (e.g., abc123), and header (e.g., Auth-Token) for connecting to SMS services."
},
"Custom Role": {
  "module": "Core",
  "description": "Defines custom roles and permissions across pages, reports, and documents.",
  "fields": ["page", "report", "ref_doctype", "roles"],
  "meta_text": "Custom Role is part of the Core module. It defines custom access control using page (e.g., Dashboard), report (e.g., Sales Register), ref_doctype (e.g., Sales Invoice), and roles (e.g., Sales Manager)."
},

"Block Module": {
  "module": "Core",
  "description": "Used to restrict or disable access to specific modules.",
  "fields": ["module"],
  "meta_text": "Block Module is part of the Core module. It specifies module (e.g., HR, Payroll) to be blocked or hidden from certain users or roles."
},

"OAuth Provider Settings": {
  "module": "Integrations",
  "description": "Defines configurations for the system as an OAuth 2.0 provider.",
  "fields": ["skip_authorization"],
  "meta_text": "OAuth Provider Settings is part of the Integrations module. It includes skip_authorization (e.g., true) to allow direct access in trusted contexts."
},

"Webhook Data": {
  "module": "Integrations",
  "description": "Defines the fields and payload data to be sent via webhook.",
  "fields": ["fieldname", "key"],
  "meta_text": "Webhook Data is part of the Integrations module. It maps fieldname (e.g., invoice_id) and key (e.g., invoice_number) to send custom data in webhook payloads."
},

"Unhandled Email": {
  "module": "Email",
  "description": "Stores emails that failed processing due to errors or unrecognized formats.",
  "fields": ["email_account", "uid", "reason", "message_id"],
  "meta_text": "Unhandled Email is part of the Email module. It stores email_account (e.g., support@example.com), uid (e.g., 5001), and reason (e.g., no matching document) for debugging failed emails."
},

"Email Unsubscribe": {
  "module": "Email",
  "description": "Records unsubscribe actions by recipients to prevent future email sends.",
  "fields": ["email", "reference_doctype", "reference_name", "global_unsubscribe"],
  "meta_text": "Email Unsubscribe is part of the Email module. It includes email (e.g., user@example.com), reference_doctype (e.g., Newsletter), and global_unsubscribe (e.g., true) to respect email opt-out preferences."
},

"Email Rule": {
  "module": "Email",
  "description": "Marks specific email addresses as spam or safe.",
  "fields": ["email_id", "is_spam"],
  "meta_text": "Email Rule is part of the Email module. It defines rules for email_id (e.g., spam@example.com) and is_spam (e.g., true) for filtering incoming messages."
},

"Print Style": {
  "module": "Printing",
  "description": "Defines the print style layout and CSS rules for documents.",
  "fields": ["print_style_name", "standard", "css"],
  "meta_text": "Print Style is part of the Printing module. It stores print_style_name (e.g., Modern), standard (e.g., true), and css (custom layout rules) for rendering documents."
},

"Bulk Update": {
  "module": "Desk",
  "description": "Allows mass updating of records based on a condition.",
  "fields": ["document_type", "field", "update_value", "condition", "limit"],
  "meta_text": "Bulk Update is part of the Desk module. It enables mass updating for document_type (e.g., Lead), field (e.g., status), update_value (e.g., Contacted), and condition (e.g., source = Website)."
},
"Desktop Icon": {
  "module": "Desk",
  "description": "Represents shortcuts or icons shown on the ERPNext desktop interface.",
  "fields": ["module_name", "label", "type", "_doctype", "link", "color", "icon"],
  "meta_text": "Desktop Icon is part of the Desk module. It defines the desktop interface items using module_name (e.g., Selling), label (e.g., Sales Order), type (e.g., Link or Doctype), and icon properties like color and symbol."
},

"Company History": {
  "module": "Website",
  "description": "Chronological highlights of a company's growth or achievements for the website.",
  "fields": ["year", "highlight"],
  "meta_text": "Company History is part of the Website module. It captures company milestones with year (e.g., 2022) and highlight (e.g., Reached 10,000 customers)."
},

"About Us Team Member": {
  "module": "Website",
  "description": "Profiles of team members shown on the About Us page.",
  "fields": ["full_name", "image_link", "bio"],
  "meta_text": "About Us Team Member is part of the Website module. It features team profiles including full_name (e.g., John Smith), image_link (URL to profile picture), and bio (e.g., Senior Developer)."
},

"Help Category": {
  "module": "Website",
  "description": "Groups of help articles for the knowledge base.",
  "fields": ["category_name", "category_description", "published", "route"],
  "meta_text": "Help Category is part of the Website module. It organizes support content using category_name (e.g., Billing Help), published status (true/false), and route (e.g., /help/billing)."
},

"Website Script": {
  "module": "Website",
  "description": "Allows custom JavaScript to be attached to all website pages.",
  "fields": ["javascript"],
  "meta_text": "Website Script is part of the Website module. It enables adding global JavaScript to the website using the javascript field (e.g., alert('Welcome!'))."
},

"Portal Menu Item": {
  "module": "Website",
  "description": "Custom links or items in the website portal menu.",
  "fields": ["title", "route", "reference_doctype", "role", "target"],
  "meta_text": "Portal Menu Item is part of the Website module. It defines links for the portal using title (e.g., My Orders), route (e.g., /orders), reference_doctype (e.g., Sales Order), and target (e.g., _blank)."
},

"Website Slideshow": {
  "module": "Website",
  "description": "Defines a series of images for homepage or banners.",
  "fields": ["slideshow_name", "slideshow_items", "header"],
  "meta_text": "Website Slideshow is part of the Website module. It contains slideshow_name (e.g., Homepage Banner), and slideshow_items (e.g., image list) for dynamic image carousels."
},

"Website Sidebar": {
  "module": "Website",
  "description": "Holds sidebar configurations for web pages.",
  "fields": ["title", "sidebar_items"],
  "meta_text": "Website Sidebar is part of the Website module. It organizes sidebar content with title (e.g., Resources) and sidebar_items (e.g., Help, FAQs)."
},

"Website Sidebar Item": {
  "module": "Website",
  "description": "Individual items listed in a website sidebar.",
  "fields": ["title", "route", "group"],
  "meta_text": "Website Sidebar Item is part of the Website module. It defines entries like title (e.g., User Guide), route (e.g., /docs/user-guide), and group (e.g., Documentation)."
},

"Website Meta Tag": {
  "module": "Website",
  "description": "Stores SEO meta tags for website pages.",
  "fields": ["key", "value"],
  "meta_text": "Website Meta Tag is part of the Website module. It contains meta tag key (e.g., description) and value (e.g., Best ERP software) for SEO optimization."
},

"Address Template": {
  "module": "Contacts",
  "description": "Templates for displaying addresses by country.",
  "fields": ["country", "is_default", "template"],
  "meta_text": "Address Template is part of the Contacts module. It includes country (e.g., India), is_default (true/false), and template (HTML layout) for formatting address blocks."
},
"POS Invoice Merge Log": {
  "module": "Accounts",
  "description": "Records the merging of multiple POS Invoices into a single consolidated invoice or credit note.",
  "fields": ["posting_date", "posting_time", "merge_invoices_based_on", "pos_closing_entry", "customer", "customer_group", "pos_invoices", "consolidated_invoice", "consolidated_credit_note"],
  "meta_text": "POS Invoice Merge Log is part of the Accounts module. It logs invoice consolidation using fields like posting_date (e.g., 2024-01-10), customer (e.g., ABC Corp), and consolidated_invoice (reference to the merged invoice)."
},

"LDAP Group Mapping": {
  "module": "Integrations",
  "description": "Maps LDAP groups to ERPNext roles for automated user permission assignment.",
  "fields": ["ldap_group", "erpnext_role"],
  "meta_text": "LDAP Group Mapping is part of the Integrations module. It links ldap_group (e.g., admin-group) to erpnext_role (e.g., System Manager) to manage access control."
},

"Translation": {
  "module": "Core",
  "description": "Manages translations of UI and labels for multilingual ERPNext instances.",
  "fields": ["language", "source_text", "translated_text", "context", "contributed", "contribution_status"],
  "meta_text": "Translation is part of the Core module. It stores multilingual labels using source_text (e.g., 'Invoice'), translated_text (e.g., 'Factura'), and language (e.g., 'es')."
},

"Driver": {
  "module": "Setup",
  "description": "Stores driver details such as license information, assigned transporter, and status.",
  "fields": ["full_name", "status", "transporter", "employee", "cell_number", "address", "license_number", "issuing_date", "expiry_date", "driving_license_category"],
  "meta_text": "Driver is part of the Setup module. It includes driver identity and license details such as full_name (e.g., John Doe), license_number (e.g., DL12345), and expiry_date (e.g., 2026-12-31)."
},

"Driving License Category": {
  "module": "Setup",
  "description": "Defines different license classes that can be assigned to drivers.",
  "fields": ["class", "description", "issuing_date", "expiry_date"],
  "meta_text": "Driving License Category is part of the Setup module. It holds license types using class (e.g., LMV), description (e.g., Light Motor Vehicle), and expiry_date (e.g., 2030-01-01)."
},

"Product Bundle Item": {
  "module": "Selling",
  "description": "Lists individual items that make up a product bundle.",
  "fields": ["item_code", "qty", "description", "rate", "uom"],
  "meta_text": "Product Bundle Item is part of the Selling module. It defines bundled items with item_code (e.g., ITEM-001), qty (e.g., 2), and uom (e.g., Nos)."
},

"Web Page Block": {
  "module": "Website",
  "description": "Manages customizable content blocks for web pages built using Web Templates.",
  "fields": ["web_template", "web_template_values", "css_class", "section_id", "background_image"],
  "meta_text": "Web Page Block is part of the Website module. It builds site sections using web_template (e.g., Hero Banner), section_id (e.g., banner1), and background_image (optional)."
},
"BOM Update Log": {
    "module": "Manufacturing",
    "description": "BOM Update Log tracks batch-level BOM updates including current BOMs, new BOMs, and error details.",
    "fields": ["update_type", "status", "current_bom", "new_bom", "error_log", "current_level", "processed_boms", "bom_batches"],
    "meta_text": "BOM Update Log is part of the Manufacturing module. It includes fields like current_bom (e.g., BOM-ITEM-001), new_bom (e.g., BOM-ITEM-002), and status (e.g., Completed) to monitor BOM changes."
  },
  "Access Log": {
    "module": "Core",
    "description": "Access Log captures detailed user access activity including document views, reports, and file downloads.",
    "fields": ["export_from", "user", "reference_document", "timestamp", "file_type", "method", "report_name", "filters", "page"],
    "meta_text": "Access Log is part of the Core module. It logs user actions like export_from (e.g., Sales Invoice), reference_document (e.g., SINV-2024-0001), and page (e.g., report view)."
  },
  "Deleted Document": {
    "module": "Core",
    "description": "Deleted Document keeps track of removed documents with options to restore them.",
    "fields": ["deleted_name", "deleted_doctype", "restored", "new_name", "data"],
    "meta_text": "Deleted Document is part of the Core module. It logs deleted_name (e.g., INV-001), deleted_doctype (e.g., Invoice), and restoration status."
  },
  "Logs To Clear": {
    "module": "Core",
    "description": "Defines which document types’ logs should be automatically cleared after a set number of days.",
    "fields": ["ref_doctype", "days"],
    "meta_text": "Logs To Clear is part of the Core module. It sets automatic deletion using ref_doctype (e.g., Access Log) and days (e.g., 90)."
  },
  "Log Settings": {
    "module": "Core",
    "description": "Holds system-wide log clearing rules based on predefined documents and durations.",
    "fields": ["logs_to_clear"],
    "meta_text": "Log Settings is part of the Core module. It stores rules like logs_to_clear which define retention for logs such as Access Log or Deleted Document."
  },
  "User Type": {
    "module": "Core",
    "description": "User Type defines the role-based permissions, doctypes accessible, and module visibility per user category.",
    "fields": ["role", "apply_user_permission_on", "user_id_field", "user_doctypes", "custom_select_doctypes", "select_doctypes", "user_type_modules"],
    "meta_text": "User Type is part of the Core module. It configures user roles like role (e.g., Sales User) and allowed doctypes (e.g., Quotation, Sales Order)."
  },
  "BOM Update Batch": {
    "module": "Manufacturing",
    "description": "Tracks each batch involved in updating multiple BOMs under the BOM Update Log.",
    "fields": ["level", "batch_no", "boms_updated", "status"],
    "meta_text": "BOM Update Batch is part of the Manufacturing module. It includes fields like batch_no (e.g., BATCH-0001), level (e.g., 2), and boms_updated (e.g., 5)."
  },
  "CRM Note": {
    "module": "CRM",
    "description": "CRM Note stores internal notes added to leads, customers, or opportunities.",
    "fields": ["note", "added_by", "added_on"],
    "meta_text": "CRM Note is part of the CRM module. It stores internal notes like note (e.g., Follow up next week) with author and timestamp."
  },
  "User Email": {
    "module": "Core",
    "description": "Stores email configuration and sending permissions for users.",
    "fields": ["email_account", "email_id", "awaiting_password", "used_oauth", "enable_outgoing"],
    "meta_text": "User Email is part of the Core module. It manages email settings using email_id (e.g., user@example.com) and enable_outgoing (true/false)."
  },
  "Workspace Quick List": {
    "module": "Desk",
    "description": "Defines quick-access filtered document views on user dashboards.",
    "fields": ["document_type", "label", "quick_list_filter"],
    "meta_text": "Workspace Quick List is part of the Desk module. It helps define shortcuts using document_type (e.g., Task), and quick_list_filter (e.g., Assigned to Me)."
  },
  "Stock Reconciliation": {
    "module": "Stock",
    "description": "Used to reconcile physical stock with system records for inventory correction.",
    "fields": ["naming_series", "company", "posting_date", "posting_time", "set_posting_time", "set_warehouse", "scan_barcode", "scan_mode", "items", "expense_account", "difference_amount", "cost_center"],
    "meta_text": "Stock Reconciliation is part of the Stock module. It aligns stock values using posting_date (e.g., 2024-04-01), warehouse (e.g., Main Warehouse), and difference_amount (e.g., 2000)."
  },
    "Prospect Lead": {
      "module": "CRM",
      "description": "Prospect Lead records information about leads linked to a prospect, including contact and owner details.",
      "fields": ["lead", "lead_name", "email", "mobile_no", "lead_owner", "status"],
      "meta_text": "Prospect Lead is part of the CRM module. It stores fields like lead (e.g., LEAD-2024-0001), email (e.g., user@example.com), and status (e.g., Open) to track leads connected to a prospect."
    },
    "Prospect Opportunity": {
      "module": "CRM",
      "description": "Prospect Opportunity tracks opportunities, including deal value, stage, owner, and close probability.",
      "fields": ["opportunity", "amount", "stage", "deal_owner", "probability", "expected_closing", "currency", "contact_person"],
      "meta_text": "Prospect Opportunity is part of the CRM module. It includes opportunity (e.g., OPP-2024-0005), amount (e.g., 15000), and expected_closing (e.g., 2024-05-10) for each opportunity under a prospect."
    },
    "Website Filter Field": {
      "module": "Portal",
      "description": "Website Filter Field defines fields used for filtering lists on the web portal.",
      "fields": ["fieldname"],
      "meta_text": "Website Filter Field is part of the Portal module. It includes fieldname (e.g., customer_name) to apply filters in portal views."
    },
    "Call Log": {
      "module": "Telephony",
      "description": "Call Log captures inbound and outbound call details including participants, duration, and recordings.",
      "fields": ["id", "from", "to", "call_received_by", "employee_user_id", "medium", "start_time", "end_time", "type", "customer", "status", "duration", "recording_url", "type_of_call", "summary", "links"],
      "meta_text": "Call Log is part of the Telephony module. It tracks calls with fields like from (e.g., +97412345678), status (e.g., Completed), and recording_url (e.g., call-records.com/file123)."
    },
    "Variant Field": {
      "module": "Stock",
      "description": "Variant Field defines custom fields used in item variants.",
      "fields": ["field_name"],
      "meta_text": "Variant Field is part of the Stock module. It holds a single field field_name (e.g., color or size) to define variant attributes."
    },
    "POS Invoice Reference": {
      "module": "Accounts",
      "description": "POS Invoice Reference links POS returns or merges to original invoices.",
      "fields": ["pos_invoice", "posting_date", "customer", "grand_total", "is_return", "return_against"],
      "meta_text": "POS Invoice Reference is part of the Accounts module. It includes pos_invoice (e.g., POS-INV-001), is_return (true/false), and return_against (e.g., POS-INV-0003)."
    },
    "Opening Invoice Creation Tool Item": {
      "module": "Accounts",
      "description": "Used in opening invoice import process; includes financial and item data.",
      "fields": ["invoice_number", "party_type", "party", "temporary_opening_account", "posting_date", "due_date", "item_name", "outstanding_amount", "qty", "cost_center"],
      "meta_text": "Opening Invoice Creation Tool Item is part of the Accounts module. It tracks invoice_number (e.g., OPEN-INV-001), party (e.g., Customer A), and outstanding_amount (e.g., 8000)."
    },
    "Property Setter": {
      "module": "Custom",
      "description": "Property Setter is used to override default settings of DocTypes and fields.",
      "fields": ["is_system_generated", "doc_type", "field_name", "property", "property_type", "value", "default_value"],
      "meta_text": "Property Setter is part of the Custom module. It sets overrides like doc_type (e.g., Sales Order), field_name (e.g., customer), and value (e.g., Required)."
    },
    "Telephony Call Type": {
      "module": "Telephony",
      "description": "Telephony Call Type defines different categories or classifications of calls.",
      "fields": ["call_type", "amended_from"],
      "meta_text": "Telephony Call Type is part of the Telephony module. It lists types like call_type (e.g., Outbound, Support)."
    },
    "Workflow Action Permitted Role": {
      "module": "Workflow",
      "description": "Workflow Action Permitted Role maps roles allowed to complete a workflow action.",
      "fields": ["role"],
      "meta_text": "Workflow Action Permitted Role is part of the Workflow module. It stores role (e.g., Sales Manager) to specify permission for a workflow step."
    },
      "Timesheet Detail": {
        "module": "Projects",
        "description": "Tracks detailed work logs and billing information for a specific activity performed by an employee.",
        "fields": ["activity_type", "from_time", "to_time", "hours", "expected_hours", "task", "project", "is_billable", "billing_amount", "costing_amount"],
        "meta_text": "Timesheet Detail is part of the Projects module. It tracks detailed work sessions with fields like activity_type (e.g., Development), from_time (e.g., 10:00 AM), and billing_amount (e.g., 1200)."
      },
      "Opportunity Lost Reason": {
        "module": "CRM",
        "description": "Stores standardized reasons for why an opportunity was lost, used in sales analytics.",
        "fields": ["lost_reason"],
        "meta_text": "Opportunity Lost Reason is part of the CRM module. It includes lost_reason (e.g., Price too high, Chose competitor) to explain why deals were not won."
      },
      "Employee Group Table": {
        "module": "Setup",
        "description": "Links employees to a specific group, used for access control and reporting.",
        "fields": ["employee", "employee_name", "user_id"],
        "meta_text": "Employee Group Table is part of the Setup module. It stores employees (e.g., EMP-0001) and user_id (e.g., john.doe@example.com) for grouping purposes."
      },
      "Cost Center Allocation Percentage": {
        "module": "Accounts",
        "description": "Specifies how expenses should be distributed across multiple cost centers using percentages.",
        "fields": ["cost_center", "percentage"],
        "meta_text": "Cost Center Allocation Percentage is part of the Accounts module. It contains cost_center (e.g., Marketing) and percentage (e.g., 40%)."
      },
      "Cost Center Allocation": {
        "module": "Accounts",
        "description": "Defines how a main cost center’s expenses are allocated to sub-cost centers.",
        "fields": ["main_cost_center", "company", "valid_from", "allocation_percentages"],
        "meta_text": "Cost Center Allocation is part of the Accounts module. It includes main_cost_center (e.g., Corporate), valid_from (e.g., 2024-01-01), and allocation_percentages for breakdown."
      },
      "Tax Category": {
        "module": "Accounts",
        "description": "Classifies items or transactions into different tax categories to apply appropriate rates.",
        "fields": ["title", "disabled"],
        "meta_text": "Tax Category is part of the Accounts module. It holds title (e.g., GST - Standard) and disabled (true/false) to organize tax settings."
      },
      "Document Share Key": {
        "module": "Core",
        "description": "Generates secure keys to share documents with external users temporarily.",
        "fields": ["reference_doctype", "reference_docname", "key", "expires_on"],
        "meta_text": "Document Share Key is part of the Core module. It includes reference_doctype (e.g., Sales Order), key (e.g., a1b2c3...), and expires_on (e.g., 2024-12-31)."
      },
      "Tax Withholding Rate": {
        "module": "Accounts",
        "description": "Defines tax withholding rates applicable within specific date ranges and thresholds.",
        "fields": ["from_date", "to_date", "tax_withholding_rate", "single_threshold", "cumulative_threshold"],
        "meta_text": "Tax Withholding Rate is part of the Accounts module. It specifies tax_withholding_rate (e.g., 10%), and from_date/to_date (e.g., 2024-01-01 to 2024-12-31)."
      },
      "Connected App": {
        "module": "Integrations",
        "description": "Stores OAuth2-based connection details for third-party apps like Google or Microsoft.",
        "fields": ["provider_name", "client_id", "client_secret", "authorization_uri", "token_uri", "redirect_uri", "scopes"],
        "meta_text": "Connected App is part of the Integrations module. It includes provider_name (e.g., Google), client_id, and token_uri (e.g., https://oauth2.googleapis.com/token) for secure authentication."
      },
        "Opening Invoice Creation Tool": {
          "module": "Accounts",
          "description": "Used to bulk create opening invoices for customers or suppliers at the beginning of an accounting period.",
          "fields": ["company", "create_missing_party", "invoice_type", "cost_center", "invoices"],
          "meta_text": "Opening Invoice Creation Tool is part of the Accounts module. It helps create multiple invoices with fields like invoice_type (e.g., Sales Invoice), company (e.g., Test Co.), and cost_center (e.g., HQ)."
        },
        "User Permission": {
          "module": "Core",
          "description": "Controls what values of a DocType a user can access or interact with.",
          "fields": ["user", "allow", "for_value", "is_default", "apply_to_all_doctypes", "applicable_for"],
          "meta_text": "User Permission is part of the Core module. It includes user (e.g., john@example.com), allow (e.g., Company), and for_value (e.g., Test Co.) to restrict access."
        },
        "Personal Data Deletion Request": {
          "module": "Website",
          "description": "Allows users to request deletion of their personal data in compliance with privacy laws.",
          "fields": ["email", "status", "anonymization_matrix", "deletion_steps"],
          "meta_text": "Personal Data Deletion Request is part of the Website module. It contains fields like email (e.g., user@domain.com) and deletion_steps (e.g., Anonymize Contacts)."
        },
        "DocType State": {
          "module": "Core",
          "description": "Defines visual states for custom workflows or statuses.",
          "fields": ["title", "color", "custom"],
          "meta_text": "DocType State is part of the Core module. It includes title (e.g., Approved), color (e.g., Green), and custom (true/false) for UI customization."
        },
        "Kanban Board Column": {
          "module": "Desk",
          "description": "Defines columns on a Kanban board and how they relate to status fields.",
          "fields": ["column_name", "status", "indicator", "order"],
          "meta_text": "Kanban Board Column is part of the Desk module. It includes column_name (e.g., To Do), status (e.g., Open), and indicator (e.g., red)."
        },
        "Ledger Merge": {
          "module": "Accounts",
          "description": "Tool to merge multiple ledger accounts into one account for cleanup or consolidation.",
          "fields": ["root_type", "account", "account_name", "company", "status", "is_group", "merge_accounts"],
          "meta_text": "Ledger Merge is part of the Accounts module. It helps consolidate accounts using fields like root_type (e.g., Asset), and account_name (e.g., Cash Main)."
        },
        "Ledger Merge Accounts": {
          "module": "Accounts",
          "description": "Stores the list of ledger accounts being merged in a Ledger Merge operation.",
          "fields": ["account", "account_name", "merged"],
          "meta_text": "Ledger Merge Accounts is part of the Accounts module. It includes account (e.g., Debtors) and merged (true/false) to track merge results."
        },
        "Newsletter Email Group": {
          "module": "Email",
          "description": "Links a newsletter to an email group for mass mailing.",
          "fields": ["email_group", "total_subscribers"],
          "meta_text": "Newsletter Email Group is part of the Email module. It contains email_group (e.g., Customers) and total_subscribers (e.g., 1280)."
        },
        "Newsletter Attachment": {
          "module": "Email",
          "description": "Stores file attachments included in a newsletter.",
          "fields": ["attachment"],
          "meta_text": "Newsletter Attachment is part of the Email module. It includes attachment (e.g., promo.pdf) for email campaigns."
        },
        "Module Profile": {
          "module": "Core",
          "description": "Defines which modules are available to specific users or user types.",
          "fields": ["module_profile_name", "module_html", "block_modules"],
          "meta_text": "Module Profile is part of the Core module. It configures access using module_profile_name (e.g., Sales Only) and block_modules."
        },
        "Role Profile": {
          "module": "Core",
          "description": "Assigns a group of roles to users based on their profile.",
          "fields": ["role_profile", "roles"],
          "meta_text": "Role Profile is part of the Core module. It includes role_profile (e.g., Sales Manager) and roles (e.g., Sales User, Sales Manager)."
        },
        "Email Flag Queue": {
          "module": "Email",
          "description": "Manages flagging status of emails, such as read/unread or starred, in the background.",
          "fields": ["is_completed", "communication", "action", "email_account", "uid"],
          "meta_text": "Email Flag Queue is part of the Email module. It handles actions like mark-as-read on email_account (e.g., support@example.com) using uid (e.g., 21045)."
        },
        "Advance Taxes and Charges": {
          "module": "Accounts",
          "description": "Holds advance tax or charge entries that need to be adjusted against invoices.",
          "fields": ["add_deduct_tax", "charge_type", "account_head", "rate", "tax_amount", "currency", "base_tax_amount", "allocated_amount"],
          "meta_text": "Advance Taxes and Charges is part of the Accounts module. It uses charge_type (e.g., On Net Total), rate (e.g., 10%), and account_head (e.g., VAT Paid)."
        },
          "Advance Tax": {
            "module": "Accounts",
            "description": "Advance Tax is used to manage and record advance tax amounts allocated to accounts against a reference document such as Sales or Purchase Invoices.",
            "fields": ["reference_type", "reference_name", "reference_detail", "account_head", "allocated_amount"],
            "meta_text": "Advance Tax is a part of the Accounts module. It tracks tax allocations using reference_type (e.g., Purchase Invoice), account_head (e.g., Input Tax), and allocated_amount (e.g., 5000)."
          },
          "Operation": {
            "module": "Manufacturing",
            "description": "Operation defines a manufacturing step performed at a workstation. It includes operation time, quality inspections, and sub-operations if needed.",
            "fields": ["workstation", "is_corrective_operation", "create_job_card_based_on_batch_size", "quality_inspection_template", "batch_size", "sub_operations", "total_operation_time", "description"],
            "meta_text": "Operation is a part of the Manufacturing module. It includes workstation (e.g., Lathe Machine), quality_inspection_template (e.g., Final Check), batch_size (e.g., 100), and description (e.g., Polishing Process)."
          },
          "Issue": {
            "module": "Support",
            "description": "Issue is a support ticket raised by a customer or internal user. It tracks problems, their priorities, SLAs, response/resolution times, and related customer details.",
            "fields": ["subject", "customer", "raised_by", "status", "priority", "issue_type", "description", "service_level_agreement", "resolution_details", "opening_date", "resolution_date", "lead", "contact", "customer_name", "project", "company"],
            "meta_text": "Issue is a part of the Support module. It captures support cases using subject (e.g., Printer not working), status (e.g., Open), SLA details (e.g., 24h resolution), and links to customer (e.g., John Ltd.)."
          },
          
  "Energy Point Settings": {
    "module": "Social",
    "description": "Energy Point Settings is used to configure the employee rewards system through periodic energy point allocation and review levels.",
    "fields": ["enabled", "review_levels", "point_allocation_periodicity", "last_point_allocation_date"],
    "meta_text": "Energy Point Settings is part of the Social module. It uses fields like enabled (true/false), review_levels (e.g., Level 1), and point_allocation_periodicity (e.g., Monthly)."
  },
  "Dunning Type": {
    "module": "Accounts",
    "description": "Dunning Type defines rules for charging additional fees or interest to customers with overdue invoices. It includes custom letter templates and associated accounts.",
    "fields": ["dunning_type", "is_default", "company", "dunning_fee", "rate_of_interest", "dunning_letter_text", "income_account", "cost_center"],
    "meta_text": "Dunning Type is part of the Accounts module. It includes dunning_type (e.g., First Notice), dunning_fee (e.g., 50), and income_account (e.g., Penalty Income)."
  },
  "Supplier Scorecard Criteria": {
    "module": "Buying",
    "description": "Supplier Scorecard Criteria sets the evaluation rules for supplier performance based on weighted scoring systems.",
    "fields": ["criteria_name", "max_score", "formula", "weight"],
    "meta_text": "Supplier Scorecard Criteria is part of the Buying module. It includes criteria_name (e.g., Timely Delivery), max_score (e.g., 10), and weight (e.g., 0.3)."
  },
  "Sales Team": {
    "module": "Selling",
    "description": "Sales Team holds details about the members involved in a sales transaction and their individual contribution and commissions.",
    "fields": ["sales_person", "contact_no", "allocated_percentage", "allocated_amount", "commission_rate", "incentives"],
    "meta_text": "Sales Team is part of the Selling module. It includes sales_person (e.g., Alice), allocated_percentage (e.g., 40%), and commission_rate (e.g., 5%)."
  },
  "Currency Exchange Settings Details": {
    "module": "Accounts",
    "description": "Holds key-value configuration for currency exchange integration or customization.",
    "fields": ["key", "value"],
    "meta_text": "Currency Exchange Settings Details is part of the Accounts module. Example fields are key (e.g., API_URL) and value (e.g., https://api.exchangerate.io)."
  },
  "Currency Exchange Settings Result": {
    "module": "Accounts",
    "description": "Stores individual keys representing exchange rate results or configurations fetched from external APIs.",
    "fields": ["key"],
    "meta_text": "Currency Exchange Settings Result is part of the Accounts module. It includes key (e.g., USD_EUR)."
  },
  "Competitor Detail": {
    "module": "CRM",
    "description": "Captures individual competitors linked to a CRM record, such as an opportunity or sales campaign.",
    "fields": ["competitor"],
    "meta_text": "Competitor Detail is part of the CRM module. It includes competitor (e.g., XYZ Corp)."
  },
    "Print Format Field Template": {
      "module": "Printing",
      "description": "Print Format Field Template allows defining Jinja templates for specific fields of a document to customize printed output.",
      "fields": ["document_type", "field", "template_file", "module", "standard", "template"],
      "meta_text": "Print Format Field Template is part of the Printing module. It includes document_type (e.g., Sales Invoice), field (e.g., customer_name), and template_file (e.g., custom_template.html)."
    },
    "UOM": {
      "module": "Setup",
      "description": "UOM (Unit of Measurement) defines standardized units like Kilograms, Hours, or Pieces for stock and transactions.",
      "fields": ["enabled", "uom_name", "must_be_whole_number"],
      "meta_text": "UOM is part of the Setup module. Example fields are uom_name (e.g., Box), must_be_whole_number (true/false), and enabled (true/false)."
    },
    "Support Settings": {
      "module": "Support",
      "description": "Support Settings configures SLA tracking, customer portal display, and integration with external support forums.",
      "fields": ["track_service_level_agreement", "allow_resetting_service_level_agreement", "close_issue_after_days", "get_started_sections", "show_latest_forum_posts", "forum_url", "get_latest_query", "response_key_list", "post_title_key", "post_description_key", "post_route_key", "post_route_string", "greeting_title", "greeting_subtitle", "search_apis"],
      "meta_text": "Support Settings is part of the Support module. It includes track_service_level_agreement (true/false), close_issue_after_days (e.g., 7), and forum_url (e.g., https://support.example.com)."
    },
    "Sales Invoice Timesheet": {
      "module": "Accounts",
      "description": "Sales Invoice Timesheet stores timesheet-based billing data associated with a sales invoice, including activity types and billed hours.",
      "fields": ["activity_type", "description", "from_time", "to_time", "billing_hours", "billing_amount", "time_sheet", "timesheet_detail", "project_name"],
      "meta_text": "Sales Invoice Timesheet is part of the Accounts module. It includes activity_type (e.g., Development), billing_hours (e.g., 4.5), and billing_amount (e.g., 1800)."
    },
      "Fiscal Year Company": {
        "module": "Accounts",
        "description": "Links a fiscal year to a specific company for financial accounting purposes.",
        "fields": ["company"],
        "meta_text": "Fiscal Year Company is part of the Accounts module. It includes company (e.g., 'HTS Qatar') to associate fiscal settings with a specific organization."
      },
      "Discussion Topic": {
        "module": "Website",
        "description": "Captures user discussions tied to specific documents like blog posts or issues.",
        "fields": ["title", "reference_doctype", "reference_docname"],
        "meta_text": "Discussion Topic is part of the Website module. It includes title (e.g., 'Feature Request'), reference_doctype (e.g., 'Issue'), and reference_docname (e.g., 'ISS-001')."
      },
      "Discussion Reply": {
        "module": "Website",
        "description": "Stores replies made on discussion topics, enabling threaded conversations.",
        "fields": ["topic", "reply"],
        "meta_text": "Discussion Reply is part of the Website module. It includes topic (e.g., 'Feature Request') and reply (e.g., 'We are working on this update.')."
      },
      "Overdue Payment": {
        "module": "Accounts",
        "description": "Tracks overdue amounts for invoices and calculates applicable interest.",
        "fields": ["sales_invoice", "payment_schedule", "dunning_level", "payment_term", "description", "due_date", "overdue_days", "mode_of_payment", "invoice_portion", "payment_amount", "outstanding", "paid_amount", "discounted_amount", "interest"],
        "meta_text": "Overdue Payment is part of the Accounts module. It includes fields like sales_invoice (e.g., 'SINV-001'), due_date (e.g., '2024-03-31'), overdue_days (e.g., 15), and interest (e.g., 50.0)."
      },
      "SMS Settings": {
        "module": "Core",
        "description": "Manages configuration for sending SMS via third-party SMS gateways.",
        "fields": ["sms_gateway_url", "message_parameter", "receiver_parameter", "parameters", "use_post"],
        "meta_text": "SMS Settings is part of the Core module. Example fields are sms_gateway_url (e.g., 'https://sms.example.com/send'), message_parameter (e.g., 'msg'), and use_post (true/false)."
      },
      "IMAP Folder": {
        "module": "Email",
        "description": "Stores configuration for IMAP folders used in email sync.",
        "fields": ["folder_name", "append_to", "uidvalidity", "uidnext"],
        "meta_text": "IMAP Folder is part of the Email module. Includes folder_name (e.g., 'Inbox'), append_to (e.g., 'Communication'), and uidnext (e.g., 1052)."
      },
      "Tag Link": {
        "module": "Desk",
        "description": "Stores metadata about tags linked to specific documents.",
        "fields": ["document_type", "document_name", "tag", "title"],
        "meta_text": "Tag Link is part of the Desk module. Example fields: document_type ('Task'), document_name ('TASK-2024-0001'), tag ('Urgent'), title ('Fix Login Bug')."
      },
      "Maintenance Schedule Detail": {
        "module": "Maintenance",
        "description": "Contains individual item-level details within a maintenance schedule.",
        "fields": ["item_code", "item_name", "scheduled_date", "actual_date", "sales_person", "completion_status", "serial_no", "item_reference"],
        "meta_text": "Maintenance Schedule Detail is part of the Maintenance module. Fields include item_code ('GEN-123'), scheduled_date ('2024-05-10'), and completion_status ('Completed')."
      },
      "Job Card Scrap Item": {
        "module": "Manufacturing",
        "description": "Tracks items scrapped during manufacturing operations.",
        "fields": ["item_code", "item_name", "description", "stock_qty", "stock_uom"],
        "meta_text": "Job Card Scrap Item is part of the Manufacturing module. It includes item_code ('SCR-001'), stock_qty (e.g., 2), and stock_uom ('Nos')."
      },
        "Asset Capitalization Asset Item": {
          "module": "Assets",
          "description": "Tracks asset-level capitalization details including finance book, values, and accounting dimensions.",
          "fields": ["asset", "asset_name", "finance_book", "item_code", "item_name", "current_asset_value", "asset_value", "cost_center", "fixed_asset_account"],
          "meta_text": "Asset Capitalization Asset Item is part of the Assets module. It includes asset (e.g., 'AST-0001'), item_code ('ITM-001'), asset_value (e.g., 10000), and cost_center (e.g., 'Main Office')."
        },
        "Package Import": {
          "module": "Core",
          "description": "Used to import app packages into the ERP system, with options to activate and force updates.",
          "fields": ["attach_package", "activate", "force", "log"],
          "meta_text": "Package Import is part of the Core module. It handles attach_package ('my_package.zip'), activate (true/false), and log ('Installation successful')."
        },
        "Package Release": {
          "module": "Core",
          "description": "Manages versioning and release information of packages with changelogs.",
          "fields": ["package", "publish", "path", "major", "minor", "patch", "release_notes"],
          "meta_text": "Package Release is part of the Core module. Example fields: package ('my_package'), version ('1.0.2'), and release_notes ('Bug fixes and improvements')."
        },
        "Package": {
          "module": "Core",
          "description": "Represents a software package with licensing and README content.",
          "fields": ["package_name", "readme", "license_type", "license"],
          "meta_text": "Package is part of the Core module. Includes package_name ('erpnext_custom'), license_type ('MIT'), and readme (markdown content)."
        },
        "Party Link": {
          "module": "Accounts",
          "description": "Defines linked party relationships, such as primary and secondary roles.",
          "fields": ["primary_role", "secondary_role", "primary_party", "secondary_party"],
          "meta_text": "Party Link is part of the Accounts module. Example: primary_role ('Customer'), secondary_party ('ABC Pvt Ltd')."
        },
        "Item Quality Inspection Parameter": {
          "module": "Stock",
          "description": "Defines inspection parameters, value ranges, and acceptance formulas for items.",
          "fields": ["specification", "parameter_group", "value", "numeric", "min_value", "max_value", "formula_based_criteria", "acceptance_formula"],
          "meta_text": "Item Quality Inspection Parameter is part of the Stock module. Includes specification ('pH'), min_value (6), max_value (8), acceptance_formula ('min <= value <= max')."
        },
        "DocType Link": {
          "module": "Core",
          "description": "Stores internal references between doctypes for relationship mapping.",
          "fields": ["link_doctype", "link_fieldname", "parent_doctype", "table_fieldname", "group", "hidden", "is_child_table", "custom"],
          "meta_text": "DocType Link is part of the Core module. For example: link_doctype ('Sales Invoice'), link_fieldname ('customer'), parent_doctype ('Payment Entry')."
        },
        "Tax Withholding Category": {
          "module": "Accounts",
          "description": "Groups tax withholding rules and accounts under a named category.",
          "fields": ["category_name", "round_off_tax_amount", "consider_party_ledger_amount", "tax_on_excess_amount", "rates", "accounts"],
          "meta_text": "Tax Withholding Category is part of the Accounts module. Example: category_name ('Professional Tax'), round_off_tax_amount (true), rates (tax brackets)."
        },
        "Assignment Rule": {
          "module": "Automation",
          "description": "Defines rules for auto-assigning documents to users based on conditions.",
          "fields": ["document_type", "due_date_based_on", "priority", "disabled", "description", "assign_condition", "unassign_condition", "close_condition", "assignment_days", "rule", "field", "users", "last_user"],
          "meta_text": "Assignment Rule is part of the Automation module. Example: document_type ('Lead'), assign_condition ('status = Open'), users (['sales@example.com'])."
        },
        "Sub Operation": {
          "module": "Manufacturing",
          "description": "Used to define sub-steps within a manufacturing operation.",
          "fields": ["operation", "time_in_mins", "description"],
          "meta_text": "Sub Operation is part of the Manufacturing module. Fields include operation ('Cutting'), time_in_mins (30), and description ('Precision cutting step')."
        },
        "South Africa VAT Settings": {
          "module": "Regional",
          "description": "Stores VAT configuration specific to South African regulatory requirements.",
          "fields": ["company", "vat_accounts"],
          "meta_text": "South Africa VAT Settings is part of the Regional module. Fields include company ('ABC Ltd') and vat_accounts (list of VAT ledgers)."
        },
        "South Africa VAT Account": {
          "module": "Accounts",
          "description": "Maps a VAT account specific to South African VAT reporting.",
          "fields": ["account"],
          "meta_text": "South Africa VAT Account is part of the Accounts module. Example field: account ('VAT Output - ABC')."
        },
          "Campaign": {
            "module": "CRM",
            "description": "Keep track of sales campaigns, including schedules and descriptions, to evaluate their effectiveness and ROI.",
            "fields": ["campaign", "campaign_name", "naming_series", "campaign_schedules", "description"],
            "meta_text": "Campaign is part of the CRM module. It includes campaign_name (e.g., 'Summer Promo'), campaign_schedules (e.g., timeline of activities), and description (e.g., 'Promotional campaign for summer deals')."
          },
          "Service Level Priority": {
            "module": "Support",
            "description": "Defines SLA priority levels with associated response and resolution times.",
            "fields": ["default_priority", "priority", "response_time", "resolution_time"],
            "meta_text": "Service Level Priority is part of the Support module. Example fields: priority ('High'), response_time ('4h'), resolution_time ('24h')."
          },
          "Purchase Receipt Item Supplied": {
            "module": "Buying",
            "description": "Captures raw material items supplied in relation to a purchased finished good item on a Purchase Receipt.",
            "fields": ["main_item_code", "rm_item_code", "item_name", "bom_detail_no", "description", "stock_uom", "conversion_factor", "reference_name", "rate", "amount", "required_qty", "consumed_qty", "current_stock", "batch_no", "serial_no", "purchase_order"],
            "meta_text": "Purchase Receipt Item Supplied is part of the Buying module. Fields include main_item_code ('FG-001'), rm_item_code ('RM-101'), required_qty (10), consumed_qty (8), and reference_name ('PR-0003')."
          },
          "Purchase Order Item Supplied": {
            "module": "Buying",
            "description": "Details of raw materials linked to finished goods ordered in a Purchase Order.",
            "fields": ["main_item_code", "rm_item_code", "stock_uom", "reserve_warehouse", "conversion_factor", "bom_detail_no", "reference_name", "rate", "amount", "required_qty", "supplied_qty", "consumed_qty", "returned_qty", "total_supplied_qty"],
            "meta_text": "Purchase Order Item Supplied is part of the Buying module. Includes main_item_code ('FG-002'), rm_item_code ('RM-102'), required_qty (5), supplied_qty (5), and total_supplied_qty (5)."
          },
          "Tax Rule": {
            "module": "Accounts",
            "description": "Defines conditions and mappings for selecting tax templates based on various parameters such as customer, supplier, item, location, and date.",
            "fields": ["tax_type", "use_for_shopping_cart", "sales_tax_template", "purchase_tax_template", "filters", "customer", "supplier", "item", "billing_city", "billing_county", "billing_state", "billing_zipcode", "billing_country", "tax_category", "customer_group", "supplier_group", "item_group", "shipping_city", "shipping_county", "shipping_state", "shipping_zipcode", "shipping_country", "from_date", "to_date", "priority", "company"],
            "meta_text": "Tax Rule is part of the Accounts module. Example: tax_type ('Sales'), customer ('John Doe'), shipping_state ('California'), sales_tax_template ('California Sales Tax')."
          },
            "Item Tax": {
              "module": "Stock",
              "description": "Defines tax templates and rate limits applicable to individual items.",
              "fields": ["item_tax_template", "tax_category", "valid_from", "minimum_net_rate", "maximum_net_rate"],
              "meta_text": "Item Tax is part of the Stock module. It includes item_tax_template ('Standard 5% Tax'), tax_category ('Retail'), valid_from ('2024-01-01'), and optional rate limits like minimum_net_rate and maximum_net_rate."
            },
            "SLA Fulfilled On Status": {
              "module": "Support",
              "description": "Maps statuses used to determine when an SLA is considered fulfilled.",
              "fields": ["status"],
              "meta_text": "SLA Fulfilled On Status is part of the Support module. Example status: 'Closed'."
            },
            "POS Closing Entry Detail": {
              "module": "Accounts",
              "description": "Records payment mode-wise amounts during the POS closing process.",
              "fields": ["mode_of_payment", "opening_amount", "expected_amount", "closing_amount", "difference"],
              "meta_text": "POS Closing Entry Detail is part of the Accounts module. Example: mode_of_payment ('Cash'), opening_amount (1000), expected_amount (1200), closing_amount (1190), difference (-10)."
            },
            "DocType Layout Field": {
              "module": "Custom",
              "description": "Custom layout fields used to structure and label sections of a Doctype layout.",
              "fields": ["label", "fieldname"],
              "meta_text": "DocType Layout Field is part of the Custom module. It includes label ('Customer Info') and fieldname ('customer_name')."
            },
            "Slack Webhook URL": {
              "module": "Integrations",
              "description": "Stores Slack webhook URLs used for message notifications and updates.",
              "fields": ["webhook_name", "webhook_url", "show_document_link"],
              "meta_text": "Slack Webhook URL is part of the Integrations module. Example fields: webhook_name ('Sales Alerts'), webhook_url ('https://hooks.slack.com/...'), show_document_link (1)."
            },
            "Supplier Item": {
              "module": "Accounts",
              "description": "Links a supplier to items they supply.",
              "fields": ["supplier"],
              "meta_text": "Supplier Item is part of the Accounts module. It defines the supplier ('XYZ Traders') providing an item."
            },
            "Supplier Group Item": {
              "module": "Accounts",
              "description": "Defines group-level supplier assignments for items.",
              "fields": ["supplier_group"],
              "meta_text": "Supplier Group Item is part of the Accounts module. It includes supplier_group ('Electronics Suppliers')."
            },
            "Campaign Item": {
              "module": "Accounts",
              "description": "Tracks item-level association with a sales or marketing campaign.",
              "fields": ["campaign"],
              "meta_text": "Campaign Item is part of the Accounts module. It includes campaign ('Winter Campaign')."
            },
            "Sales Partner Item": {
              "module": "Accounts",
              "description": "Tracks item relationships for specific sales partners.",
              "fields": ["sales_partner"],
              "meta_text": "Sales Partner Item is part of the Accounts module. It defines the sales_partner ('John Smith Associates') linked to an item."
            },
              "Territory Item": {
                "module": "Accounts",
                "description": "Links items to specific sales territories for reporting or targeting purposes.",
                "fields": ["territory"],
                "meta_text": "Territory Item is part of the Accounts module. It includes territory ('Middle East')."
              },
              "Customer Group Item": {
                "module": "Accounts",
                "description": "Assigns items to customer groups to help with pricing or segmentation.",
                "fields": ["customer_group"],
                "meta_text": "Customer Group Item is part of the Accounts module. It includes customer_group ('Retail Customers')."
              },
              "Promotional Scheme": {
                "module": "Accounts",
                "description": "Defines schemes for price or product discounts based on item, customer, or time-based conditions.",
                "fields": [
                  "apply_on", "disable", "items", "item_groups", "brands", "mixed_conditions", "is_cumulative",
                  "apply_rule_on_other", "other_item_code", "other_item_group", "other_brand",
                  "selling", "buying", "applicable_for", "customer", "customer_group", "territory",
                  "sales_partner", "campaign", "supplier", "supplier_group", "valid_from", "valid_upto",
                  "company", "currency", "price_discount_slabs", "product_discount_slabs"
                ],
                "meta_text": "Promotional Scheme is part of the Accounts module. It includes fields like apply_on ('Item Group'), is_cumulative (1), valid_from ('2024-01-01'), valid_upto ('2024-03-31'), applicable_for ('Customer Group'), and discount slabs."
              },
              "Customer Item": {
                "module": "Accounts",
                "description": "Links items to specific customers for custom pricing or tracking.",
                "fields": ["customer"],
                "meta_text": "Customer Item is part of the Accounts module. It includes customer ('ABC Corporation')."
              },
              "OAuth Authorization Code": {
                "module": "Integrations",
                "description": "Stores OAuth 2.0 authorization codes used in token exchanges for API access.",
                "fields": [
                  "client", "user", "scopes", "authorization_code", "expiration_time",
                  "redirect_uri_bound_to_authorization_code", "validity", "nonce",
                  "code_challenge", "code_challenge_method"
                ],
                "meta_text": "OAuth Authorization Code is part of the Integrations module. It includes client ('erp_app'), authorization_code ('abc123code'), redirect_uri_bound_to_authorization_code ('https://example.com/callback'), and expiration_time ('2024-12-31 23:59:59')."
              },
                "Import Supplier Invoice": {
                  "module": "Regional",
                  "description": "Used for uploading and importing supplier invoices via XML files, especially in regulated regions.",
                  "fields": [
                    "invoice_series", "company", "item_code", "supplier_group", "tax_account",
                    "default_buying_price_list", "zip_file", "import_invoices", "status"
                  ],
                  "meta_text": "Import Supplier Invoice is part of the Regional module. It handles uploading supplier invoices via XML (fields: invoice_series, tax_account, zip_file)."
                },
                "Personal Data Deletion Step": {
                  "module": "Website",
                  "description": "Defines the steps taken to delete or anonymize personal data from various documents.",
                  "fields": ["document_type", "status", "partial", "fields", "filtered_by"],
                  "meta_text": "Personal Data Deletion Step is part of the Website module. It includes document_type ('Contact'), status ('Pending'), and fields ('email', 'phone') to be deleted or anonymized."
                },
                "Job Card Item": {
                  "module": "Manufacturing",
                  "description": "Represents a specific item involved in a Job Card during production or transfer.",
                  "fields": [
                    "item_code", "source_warehouse", "uom", "item_group", "stock_uom",
                    "item_name", "description", "required_qty", "transferred_qty", "allow_alternative_item"
                  ],
                  "meta_text": "Job Card Item is part of the Manufacturing module. It includes item_code ('ABC123'), required_qty (100), and source_warehouse ('Raw Materials')."
                },
                "POS Search Fields": {
                  "module": "Accounts",
                  "description": "Defines fields that can be searched in the POS interface.",
                  "fields": ["field", "fieldname"],
                  "meta_text": "POS Search Fields is part of the Accounts module. It includes fieldname ('item_name') used in point-of-sale search."
                },
                "POS Settings": {
                  "module": "Accounts",
                  "description": "Settings for customizing the POS interface behavior and searchable fields.",
                  "fields": ["invoice_fields", "pos_search_fields"],
                  "meta_text": "POS Settings is part of the Accounts module. It configures invoice_fields and POS searchable fields like 'item_code'."
                },
                "User Group Member": {
                  "module": "Core",
                  "description": "Links a user to a specific user group for permission management.",
                  "fields": ["user"],
                  "meta_text": "User Group Member is part of the Core module. It contains the user field ('john.doe@example.com') for linking to groups."
                },
                "Job Card Operation": {
                  "module": "Manufacturing",
                  "description": "Represents operations carried out during a job card, including completion time and status.",
                  "fields": ["sub_operation", "completed_time", "status", "completed_qty"],
                  "meta_text": "Job Card Operation is part of the Manufacturing module. It includes sub_operation ('Cutting'), completed_qty (10), and status ('Finished')."
                },
                "Contact Us Settings": {
                  "module": "Website",
                  "description": "Defines layout and content for the Contact Us page, including contact details and address.",
                  "fields": [
                    "forward_to_email", "heading", "introduction", "query_options", "address",
                    "address_title", "address_line1", "address_line2", "city", "state", "pincode",
                    "country", "phone", "email_id", "skype"
                  ],
                  "meta_text": "Contact Us Settings is part of the Website module. It includes heading ('Get in Touch'), address details (city, country), and contact info (email_id, phone)."
                },
                "Plaid Settings": {
                  "module": "ERPNext Integrations",
                  "description": "Configuration for syncing financial data with the Plaid API.",
                  "fields": [
                    "enabled", "automatic_sync", "plaid_client_id", "plaid_secret", "plaid_env", "enable_european_access"
                  ],
                  "meta_text": "Plaid Settings is part of the ERPNext Integrations module. It includes plaid_client_id, plaid_secret, and plaid_env ('sandbox')."
                },
                "Project Template Task": {
                  "module": "Projects",
                  "description": "Defines default tasks associated with a project template.",
                  "fields": ["task", "subject"],
                  "meta_text": "Project Template Task is part of the Projects module. It includes task ('Prepare Proposal') and subject ('Client Kickoff')."
                },
                "Asset Category": {
                  "module": "Assets",
                  "description": "Groups fixed assets by category, used for accounting and depreciation tracking.",
                  "fields": [
                    "asset_category_name", "depreciation_options", "enable_cwip_accounting", "finance_books", "accounts"
                  ],
                  "meta_text": "Asset Category is part of the Assets module. It includes asset_category_name ('Furniture'), enable_cwip_accounting (1), and finance_books."
                },
                  "Payment Terms Template Detail": {
                    "module": "Accounts",
                    "description": "Defines the structure for a payment terms template, including discount rules and due dates.",
                    "fields": [
                      "payment_term", "description", "invoice_portion", "mode_of_payment",
                      "due_date_based_on", "credit_days", "credit_months",
                      "discount_type", "discount", "discount_validity_based_on", "discount_validity"
                    ],
                    "meta_text": "Payment Terms Template Detail is part of the Accounts module. It defines payment_term ('Net 30'), invoice_portion (50%), and discount rules."
                  },
                  "Quality Inspection Parameter": {
                    "module": "Stock",
                    "description": "Represents a single parameter in a quality inspection, such as dimensions or visual checks.",
                    "fields": ["parameter", "parameter_group", "description"],
                    "meta_text": "Quality Inspection Parameter is part of the Stock module. It includes parameter ('Length') and group ('Dimension Check')."
                  },
                  "Website Attribute": {
                    "module": "Portal",
                    "description": "Stores custom website attributes like labels or dynamic filters.",
                    "fields": ["attribute"],
                    "meta_text": "Website Attribute is part of the Portal module. It defines a single attribute such as 'Color' or 'Brand'."
                  },
                  "Payment Term": {
                    "module": "Accounts",
                    "description": "Defines a single payment term with conditions like due date and early payment discount.",
                    "fields": [
                      "payment_term_name", "invoice_portion", "mode_of_payment", "due_date_based_on",
                      "credit_days", "credit_months", "discount_type", "discount",
                      "discount_validity_based_on", "discount_validity", "description"
                    ],
                    "meta_text": "Payment Term is part of the Accounts module. It includes payment_term_name ('Due on Receipt') and discount_type ('Percentage')."
                  },
                  "Subscription Invoice": {
                    "module": "Accounts",
                    "description": "Links recurring invoices to the originating subscription.",
                    "fields": ["document_type", "invoice"],
                    "meta_text": "Subscription Invoice is part of the Accounts module. It links document_type ('Sales Invoice') with a recurring invoice ID."
                  },
                  "Accounting Dimension": {
                    "module": "Accounts",
                    "description": "Defines a new accounting dimension that can be applied to transactions.",
                    "fields": ["document_type", "label", "fieldname", "dimension_defaults", "disabled"],
                    "meta_text": "Accounting Dimension is part of the Accounts module. It includes document_type ('Project'), label ('Project'), and fieldname ('project')."
                  },
                  "Quality Inspection Reading": {
                    "module": "Stock",
                    "description": "Stores individual readings and evaluations from a quality inspection process.",
                    "fields": [
                      "specification", "parameter_group", "status", "value", "numeric", "manual_inspection",
                      "min_value", "max_value", "acceptance_formula", "reading_value",
                      "reading_1", "reading_2", "reading_3", "reading_4", "reading_5",
                      "reading_6", "reading_7", "reading_8", "reading_9", "reading_10"
                    ],
                    "meta_text": "Quality Inspection Reading is part of the Stock module. It includes multiple readings (e.g. reading_1 to reading_10) for a specification."
                  },
                  "Quality Inspection Parameter Group": {
                    "module": "Stock",
                    "description": "Groups related quality inspection parameters under a common name.",
                    "fields": ["group_name"],
                    "meta_text": "Quality Inspection Parameter Group is part of the Stock module. It defines a group_name like 'Dimensional Check'."
                  },
                  "Landed Cost Item": {
                    "module": "Stock",
                    "description": "Represents the additional costs allocated to items during landed cost voucher calculation.",
                    "fields": [
                      "item_code", "description", "receipt_document_type", "receipt_document",
                      "qty", "rate", "amount", "is_fixed_asset", "applicable_charges",
                      "purchase_receipt_item", "cost_center"
                    ],
                    "meta_text": "Landed Cost Item is part of the Stock module. It includes item_code ('ABC001'), rate (5.0), and applicable_charges ('Freight')."
                  },
                  "Landed Cost Voucher": {
                    "module": "Stock",
                    "description": "Used to distribute additional expenses like freight and insurance across items in a purchase.",
                    "fields": [
                      "naming_series", "company", "posting_date", "purchase_receipts",
                      "purchase_receipt_items", "items", "taxes", "total_taxes_and_charges",
                      "distribute_charges_based_on"
                    ],
                    "meta_text": "Landed Cost Voucher is part of the Stock module. It contains purchase_receipts, items, and total_taxes_and_charges to distribute costs."
                  },
                  "User Type Module": {
                    "module": "Core",
                    "description": "Links a user type to modules they can access in the system.",
                    "fields": ["module"],
                    "meta_text": "User Type Module is part of the Core module. It grants module access like 'Accounts' or 'CRM' to a user type."
                  },
                  "Asset Maintenance Team": {
                    "module": "Assets",
                    "description": "Represents a team responsible for performing asset maintenance tasks.",
                    "fields": [
                      "maintenance_team_name", "maintenance_manager", "maintenance_manager_name",
                      "company", "maintenance_team_members"
                    ],
                    "meta_text": "Asset Maintenance Team is part of the Assets module. It includes maintenance_team_name ('Team A'), maintenance_manager, and members list."
                  },
                    "User Select Document Type": {
                      "module": "Core",
                      "description": "Stores document type preferences selected by a user.",
                      "fields": ["document_type"],
                      "meta_text": "User Select Document Type is part of the Core module. It captures a user's selected document_type (e.g. 'Sales Order')."
                    },
                    "Workspace Chart": {
                      "module": "Desk",
                      "description": "Defines custom charts available on the workspace.",
                      "fields": ["chart_name", "label"],
                      "meta_text": "Workspace Chart is part of the Desk module. It includes chart_name ('Sales Trend') and label ('Monthly Revenue')."
                    },
                    "Auto Repeat": {
                      "module": "Automation",
                      "description": "Used to create documents on a recurring schedule such as invoices or reminders.",
                      "fields": [
                        "disabled", "reference_doctype", "reference_document", "submit_on_creation",
                        "start_date", "end_date", "frequency", "repeat_on_day", "repeat_on_last_day",
                        "next_schedule_date", "repeat_on_days", "notify_by_email", "recipients",
                        "template", "subject", "message", "preview_message", "print_format", "status"
                      ],
                      "meta_text": "Auto Repeat is part of the Automation module. It defines recurring documents like invoices or reminders with fields such as start_date, frequency, and recipients."
                    },
                    "UAE VAT Settings": {
                      "module": "Regional",
                      "description": "Holds the VAT configuration for UAE-based companies.",
                      "fields": ["company", "uae_vat_accounts"],
                      "meta_text": "UAE VAT Settings is part of the Regional module. It defines VAT rules for a specific company in the UAE (e.g. company = 'ABC LLC')."
                    },
                    "Voice Call Settings": {
                      "module": "Telephony",
                      "description": "Manages system messages and configurations for voice call handling.",
                      "fields": [
                        "user", "call_receiving_device", "greeting_message",
                        "agent_busy_message", "agent_unavailable_message"
                      ],
                      "meta_text": "Voice Call Settings is part of the Telephony module. It includes user voice configurations like greeting_message and call_receiving_device (e.g. 'Softphone')."
                    },
                    "Contract": {
                      "module": "CRM",
                      "description": "Represents contractual agreements between the company and a customer or party.",
                      "fields": [
                        "party_type", "is_signed", "party_name", "party_user", "status", "fulfilment_status",
                        "start_date", "end_date", "signee", "signed_on", "ip_address", "contract_template",
                        "contract_terms", "requires_fulfilment", "fulfilment_deadline", "fulfilment_terms",
                        "signee_company", "signed_by_company", "document_type", "document_name", "amended_from"
                      ],
                      "meta_text": "Contract is part of the CRM module. It defines agreements with fields like party_type ('Customer'), start_date, contract_template, and fulfilment_terms."
                    },
                    "Contract Template": {
                      "module": "CRM",
                      "description": "Defines reusable templates for customer or vendor contracts.",
                      "fields": [
                        "title", "contract_terms", "requires_fulfilment",
                        "fulfilment_terms", "contract_template_help"
                      ],
                      "meta_text": "Contract Template is part of the CRM module. It defines standard contract_terms and fulfilment_terms for use in new contracts."
                    },
                      "Shipment Delivery Note": {
                        "module": "Stock",
                        "description": "Links a shipment to a specific delivery note and tracks the total amount.",
                        "fields": ["delivery_note", "grand_total"],
                        "meta_text": "Shipment Delivery Note is part of the Stock module. It links a shipment to a delivery_note (e.g. 'DN-0001') and includes the grand_total (e.g. 9500.00)."
                      },
                      "Allowed Dimension": {
                        "module": "Accounts",
                        "description": "Specifies which accounting dimension values are allowed for transactions.",
                        "fields": ["accounting_dimension", "dimension_value"],
                        "meta_text": "Allowed Dimension is part of the Accounts module. It sets allowed accounting_dimension (e.g. 'Cost Center') and the corresponding dimension_value (e.g. 'Marketing')."
                      },
                      "Applicable On Account": {
                        "module": "Accounts",
                        "description": "Defines which accounts a rule or condition should apply to.",
                        "fields": ["applicable_on_account", "is_mandatory"],
                        "meta_text": "Applicable On Account is part of the Accounts module. It defines an applicable_on_account (e.g. 'Sales - GT') and whether it's mandatory (e.g. true)."
                      },
                      "Incoming Call Settings": {
                        "module": "Telephony",
                        "description": "Controls how incoming calls are handled, including routing and voice messages.",
                        "fields": [
                          "call_routing", "greeting_message", "agent_busy_message",
                          "agent_unavailable_message", "call_handling_schedule"
                        ],
                        "meta_text": "Incoming Call Settings is part of the Telephony module. It configures call_routing (e.g. 'Round Robin') and messages like greeting_message and agent_unavailable_message."
                      },
                      "Incoming Call Handling Schedule": {
                        "module": "Telephony",
                        "description": "Defines the working hours and agent groups for handling incoming calls.",
                        "fields": ["day_of_week", "from_time", "to_time", "agent_group"],
                        "meta_text": "Incoming Call Handling Schedule is part of the Telephony module. It sets rules like day_of_week ('Monday'), from_time ('09:00'), and agent_group ('Support')."
                      },
                      "Query Parameters": {
                        "module": "Integrations",
                        "description": "Stores key-value pairs for API query parameters.",
                        "fields": ["key", "value"],
                        "meta_text": "Query Parameters is part of the Integrations module. It defines key-value pairs used in API calls, like key ('auth_token') and value ('xyz123')."
                      },
                      "Auto Repeat Day": {
                        "module": "Automation",
                        "description": "Used in Auto Repeat to define specific days for repetition.",
                        "fields": ["day"],
                        "meta_text": "Auto Repeat Day is part of the Automation module. It specifies a repetition day (e.g. 'Monday') for recurring documents."
                      },
                      
                        "Request for Quotation Supplier": {
                          "module": "Buying",
                          "description": "Links suppliers to a specific Request for Quotation (RFQ), tracks quote status, and email communication.",
                          "fields": ["supplier", "contact", "quote_status", "supplier_name", "email_id", "send_email", "email_sent"],
                          "meta_text": "Request for Quotation Supplier is part of the Buying module. It links a supplier (e.g. 'ABC Corp') to an RFQ, includes contact info, quote_status (e.g. 'Pending'), and email tracking fields."
                        },
                        "Navbar Item": {
                          "module": "Core",
                          "description": "Defines menu items in the application navbar.",
                          "fields": ["item_label", "item_type", "route", "action", "hidden", "is_standard"],
                          "meta_text": "Navbar Item is part of the Core module. It sets navigation links such as item_label ('Dashboard'), item_type ('Route'), and route ('/app/dashboard')."
                        },
                        "Quality Feedback Parameter": {
                          "module": "Quality Management",
                          "description": "Defines individual feedback parameters such as rating or text for quality evaluation.",
                          "fields": ["parameter", "rating", "feedback"],
                          "meta_text": "Quality Feedback Parameter is part of the Quality Management module. It defines a parameter (e.g. 'Packaging Quality'), rating (e.g. 4), and feedback comment."
                        },
                        "Communication Medium": {
                          "module": "Communication",
                          "description": "Configuration of communication methods and providers like email, SMS, or chat.",
                          "fields": ["communication_channel", "communication_medium_type", "catch_all", "provider", "disabled", "timeslots"],
                          "meta_text": "Communication Medium is part of the Communication module. It configures a medium (e.g. 'Email'), sets the provider (e.g. 'Gmail'), and availability timeslots."
                        },
                        "Quality Feedback Template": {
                          "module": "Quality Management",
                          "description": "Template containing multiple quality feedback parameters used in evaluations.",
                          "fields": ["template", "parameters"],
                          "meta_text": "Quality Feedback Template is part of the Quality Management module. It includes a template name (e.g. 'Delivery Feedback') and a list of parameters for structured feedback."
                        },
                        "Quality Procedure Process": {
                          "module": "Quality Management",
                          "description": "Defines steps and procedures for specific quality processes.",
                          "fields": ["process_description", "procedure"],
                          "meta_text": "Quality Procedure Process is part of the Quality Management module. It includes a process_description and links to a formal procedure document."
                        },
                        "Web Template Field": {
                          "module": "Website",
                          "description": "Fields used in a custom web template for website pages.",
                          "fields": ["label", "fieldname", "fieldtype", "reqd", "options", "default"],
                          "meta_text": "Web Template Field is part of the Website module. It defines label ('Contact Name'), fieldname ('contact_name'), and fieldtype ('Data') among other settings."
                        },
                        "Production Plan Material Request Warehouse": {
                          "module": "Manufacturing",
                          "description": "Defines warehouse used for material requests in a production plan.",
                          "fields": ["warehouse"],
                          "meta_text": "Production Plan Material Request Warehouse is part of the Manufacturing module. It specifies the warehouse (e.g. 'Stores - TX') where requested materials will be drawn from."
                        },
                        "Quality Action Resolution": {
                          "module": "Quality Management",
                          "description": "Captures resolution details for quality-related problems.",
                          "fields": ["problem", "resolution", "status", "responsible", "completion_by"],
                          "meta_text": "Quality Action Resolution is part of the Quality Management module. It documents the problem, resolution (e.g. 'Recalibrated machine'), status ('Resolved'), and responsible person."
                        },
                        "POS Payment Method": {
                          "module": "Accounts",
                          "description": "Defines acceptable payment methods in Point of Sale.",
                          "fields": ["default", "allow_in_returns", "mode_of_payment"],
                          "meta_text": "POS Payment Method is part of the Accounts module. It includes mode_of_payment (e.g. 'Cash'), whether it’s default, and if returns are allowed."
                        },
                        "About Us Settings": {
                          "module": "Website",
                          "description": "Configures content for the About Us page including company story and team information.",
                          "fields": ["page_title", "company_introduction", "company_history_heading", "company_history", "team_members_heading", "team_members_subtitle", "team_members", "footer"],
                          "meta_text": "About Us Settings is part of the Website module. It includes page_title (e.g. 'Who We Are'), company_introduction, history, and list of team_members shown on the page."
                        },
                          "Log Setting User": {
                            "module": "Core",
                            "description": "Defines users linked to log settings for tracking and visibility.",
                            "fields": ["user"],
                            "meta_text": "Log Setting User is part of the Core module. It identifies the user (e.g. 'john.doe@example.com') assigned for logging purposes."
                          },
                          "Assignment Rule User": {
                            "module": "Automation",
                            "description": "Assigns a specific user for a defined assignment rule.",
                            "fields": ["user"],
                            "meta_text": "Assignment Rule User is part of the Automation module. It defines a user (e.g. 'assign.bot@example.com') linked to an auto-assignment rule."
                          },
                          "Shipment Parcel Template": {
                            "module": "Stock",
                            "description": "Template for standard parcel sizes and weight used in shipments.",
                            "fields": ["parcel_template_name", "length", "width", "height", "weight"],
                            "meta_text": "Shipment Parcel Template is part of the Stock module. It defines parcel size settings like length (30 cm), width (20 cm), height (15 cm), and weight (1.5 kg)."
                          },
                          "UAE VAT Account": {
                            "module": "Regional",
                            "description": "Specifies VAT account applicable under UAE regulations.",
                            "fields": ["account"],
                            "meta_text": "UAE VAT Account is part of the Regional module. It links a specific account (e.g. 'VAT - UAE') used for UAE tax compliance."
                          },
                          "DocType Action": {
                            "module": "Core",
                            "description": "Defines a custom action that can be triggered on a specific DocType.",
                            "fields": ["label", "action_type", "action", "group", "hidden", "custom"],
                            "meta_text": "DocType Action is part of the Core module. It defines an action (e.g. 'Create Quotation') with type (e.g. 'Server') and optional group classification."
                          },
                          "Website Theme Ignore App": {
                            "module": "Website",
                            "description": "Marks an app to be excluded from website theming.",
                            "fields": ["app"],
                            "meta_text": "Website Theme Ignore App is part of the Website module. It specifies an app (e.g. 'frappe_io') whose styles should be ignored when applying website themes."
                          },
                          "Payment Gateway Account": {
                            "module": "Accounts",
                            "description": "Links a payment gateway with accounts and messaging configuration.",
                            "fields": ["payment_gateway", "payment_channel", "is_default", "payment_account", "currency", "payment_request_message", "message", "message_examples"],
                            "meta_text": "Payment Gateway Account is part of the Accounts module. It links a gateway (e.g. 'Stripe') with a channel and account, including custom messages shown during payment requests."
                          },
                          "Mode of Payment": {
                            "module": "Accounts",
                            "description": "Defines types of payment modes like cash, card, or UPI and their linked accounts.",
                            "fields": ["mode_of_payment", "enabled", "type", "accounts"],
                            "meta_text": "Mode of Payment is part of the Accounts module. It specifies payment types (e.g. 'Cash', 'Bank Transfer') and whether they’re active or linked to specific accounts."
                          },
                          "Domain": {
                            "module": "Core",
                            "description": "Represents a logical business domain in ERPNext for configuration segregation.",
                            "fields": ["domain"],
                            "meta_text": "Domain is part of the Core module. It defines a functional area (e.g. 'Healthcare', 'Education') that can be enabled or disabled in the ERP system."
                          },
                          "Dependent Task": {
                            "module": "Projects",
                            "description": "Represents a dependency link between tasks in a project timeline.",
                            "fields": ["task"],
                            "meta_text": "Dependent Task is part of the Projects module. It defines a related task (e.g. 'Quality Check') that must be completed before another begins."
                          },
                          "Website Slideshow Item": {
                            "module": "Website",
                            "description": "Items displayed in a website homepage slideshow or banner carousel.",
                            "fields": ["image", "heading", "description", "url"],
                            "meta_text": "Website Slideshow Item is part of the Website module. It contains the image, heading (e.g. 'New Year Offers'), and URL for promotional slides."
                          },
                            "Document Naming Rule Condition": {
                              "module": "Core",
                              "description": "Defines a specific condition under which a document naming rule will apply.",
                              "fields": ["field", "condition", "value"],
                              "meta_text": "Document Naming Rule Condition is part of the Core module. It sets conditions like field ('customer_group'), condition ('equals'), and value ('Retail') to control naming logic."
                            },
                            "Video": {
                              "module": "Utilities",
                              "description": "Stores video metadata, mainly for YouTube integration and publishing.",
                              "fields": ["title", "provider", "url", "youtube_video_id", "publish_date", "duration", "like_count", "view_count", "dislike_count", "comment_count", "description", "image"],
                              "meta_text": "Video is part of the Utilities module. It contains information like video title ('Intro to ERPNext'), provider ('YouTube'), URL, view/like counts, and publish date."
                            },
                            "Video Settings": {
                              "module": "Utilities",
                              "description": "Settings for video tracking, including YouTube API credentials and frequency.",
                              "fields": ["enable_youtube_tracking", "api_key", "frequency"],
                              "meta_text": "Video Settings is part of the Utilities module. It enables YouTube tracking and manages API credentials for fetching video analytics."
                            },
                            "Payment Order Reference": {
                              "module": "Accounts",
                              "description": "Links a payment order with its reference transactions, such as invoices and payment requests.",
                              "fields": ["reference_doctype", "reference_name", "amount", "supplier", "payment_request", "mode_of_payment", "bank_account", "account", "payment_reference"],
                              "meta_text": "Payment Order Reference is part of the Accounts module. It links payment details to related documents like Purchase Invoice or Payment Request, and includes fields like supplier and mode of payment."
                            },
                            "Process Deferred Accounting": {
                              "module": "Accounts",
                              "description": "Used to execute deferred accounting entries for a given date range.",
                              "fields": ["company", "type", "account", "posting_date", "start_date", "end_date"],
                              "meta_text": "Process Deferred Accounting is part of the Accounts module. It processes deferred revenue or expense entries based on posting dates and associated accounts."
                            },
                            "Report Column": {
                              "module": "Core",
                              "description": "Defines a single column's structure for custom reports.",
                              "fields": ["fieldname", "label", "fieldtype", "options", "width"],
                              "meta_text": "Report Column is part of the Core module. It specifies fields like fieldname ('amount'), label ('Total Amount'), type ('Currency'), and width (120 px) for report layouts."
                            },
                            "Notification Recipient": {
                              "module": "Email",
                              "description": "Defines who should receive a specific system notification, via role or document field.",
                              "fields": ["receiver_by_document_field", "receiver_by_role", "cc", "bcc", "condition"],
                              "meta_text": "Notification Recipient is part of the Email module. It defines recipients (e.g. by role 'Accounts Manager' or field 'owner') and includes optional CC/BCC and filter conditions."
                            },
                            "Email Digest": {
                              "module": "Setup",
                              "description": "Used to configure and send periodic email summaries on ERPNext activities.",
                              "fields": ["enabled", "company", "frequency", "next_send", "recipients", "accounts", "income", "expenses_booked", "sales_order", "project", "issue", "notifications", "add_quote"],
                              "meta_text": "Email Digest is part of the Setup module. It sends regular summaries covering finance (e.g. income, bank balance), operations (e.g. pending orders), and system alerts to subscribed recipients."
                            },
                            "Email Digest Recipient": {
                              "module": "Setup",
                              "description": "Defines the recipients of an Email Digest.",
                              "fields": ["recipient"],
                              "meta_text": "Email Digest Recipient is part of the Setup module. It stores the recipient's email (e.g. 'manager@example.com') for receiving periodic system summaries."
                            },
                              "Portal Settings": {
                                "module": "Website",
                                "description": "Controls the default behavior and customization of the user portal in ERPNext.",
                                "fields": ["default_role", "default_portal_home", "standard_menu_items", "hide_standard_menu", "menu", "custom_sidebar_menu", "custom_menu"],
                                "meta_text": "Portal Settings is part of the Website module. It defines the default portal role ('Customer'), home page ('/home'), and customization options for menus and sidebar navigation."
                              },
                              "PSOA Project": {
                                "module": "Accounts",
                                "description": "A special type of project used in the PSOA (Public Sector Accounting) framework.",
                                "fields": ["project_name"],
                                "meta_text": "PSOA Project is part of the Accounts module. It stores project-level financial information under the public sector accounting (PSOA) compliance scheme. Example field: project_name ('Qatar Infrastructure Upgrade')."
                              },
                              "Quotation Lost Reason Detail": {
                                "module": "Setup",
                                "description": "Captures detailed reasons for lost quotations in ERPNext.",
                                "fields": ["lost_reason"],
                                "meta_text": "Quotation Lost Reason Detail is part of the Setup module. It stores specific reasons for why a sales quotation was lost, e.g., lost_reason ('Price too high')."
                              },
                              "Opportunity Lost Reason Detail": {
                                "module": "CRM",
                                "description": "Stores specific reasons why sales opportunities were lost.",
                                "fields": ["lost_reason"],
                                "meta_text": "Opportunity Lost Reason Detail is part of the CRM module. It records loss justifications like lost_reason ('Chose competitor due to delivery time')."
                              },
                              "Bank": {
                                "module": "Accounts",
                                "description": "Stores bank information for financial transactions and integrations.",
                                "fields": ["bank_name", "swift_number", "website", "address_html", "contact_html", "bank_transaction_mapping", "plaid_access_token"],
                                "meta_text": "Bank is part of the Accounts module. It holds financial institution details such as bank_name ('HSBC'), swift_number ('HBUKGB4B'), and integration tokens for services like Plaid."
                              },
                              "OAuth Scope": {
                                "module": "Integrations",
                                "description": "Defines individual OAuth scopes for access control in API integrations.",
                                "fields": ["scope"],
                                "meta_text": "OAuth Scope is part of the Integrations module. It defines permission levels such as scope ('read:invoices') for third-party API authentication."
                              },
                              
                                "Email Campaign": {
                                  "module": "CRM",
                                  "description": "Standard ERPNext doctype for Email Campaign",
                                  "fields": ["campaign_name", "email_campaign_for", "recipient", "sender", "start_date", "end_date", "status"],
                                  "meta_text": "Email Campaign is part of the CRM module. It manages outbound marketing emails with fields like campaign_name ('Summer Promo'), recipient ('email_group'), and status ('Scheduled')."
                                },
                                "Dunning Letter Text": {
                                  "module": "Accounts",
                                  "description": "Standard ERPNext doctype for Dunning Letter Text",
                                  "fields": ["language", "is_default_language", "body_text", "closing_text"],
                                  "meta_text": "Dunning Letter Text is part of the Accounts module. It contains message templates for overdue payment reminders. Example fields include language ('English'), body_text ('Please clear your dues...'), and closing_text ('Thank you')."
                                },
                                "Service Day": {
                                  "module": "Support",
                                  "description": "Standard ERPNext doctype for Service Day",
                                  "fields": ["workday", "start_time", "end_time"],
                                  "meta_text": "Service Day is part of the Support module. It sets available support workdays and hours, such as workday ('Monday'), start_time ('09:00'), and end_time ('18:00')."
                                },
                                "Dashboard Chart Source": {
                                  "module": "Desk",
                                  "description": "Standard ERPNext doctype for Dashboard Chart Source",
                                  "fields": ["source_name", "module", "timeseries"],
                                  "meta_text": "Dashboard Chart Source is part of the Desk module. It configures sources for visual analytics in ERP dashboards. For example, source_name ('Sales Orders'), module ('Selling'), and timeseries (1)."
                                },
                                "Customs Tariff Number": {
                                  "module": "Stock",
                                  "description": "Standard ERPNext doctype for Customs Tariff Number",
                                  "fields": ["tariff_number", "description"],
                                  "meta_text": "Customs Tariff Number is part of the Stock module. It holds tariff codes used for trade compliance. Example: tariff_number ('840820'), description ('Engine parts')."
                                },
                                "Subscription Settings": {
                                  "module": "Accounts",
                                  "description": "Standard ERPNext doctype for Subscription Settings",
                                  "fields": ["grace_period", "cancel_after_grace", "prorate"],
                                  "meta_text": "Subscription Settings is part of the Accounts module. It defines billing behaviors like grace_period (7 days), cancel_after_grace (1), and prorate (1)."
                                },
                                "Subscription Plan Detail": {
                                  "module": "Accounts",
                                  "description": "Standard ERPNext doctype for Subscription Plan Detail",
                                  "fields": ["plan", "qty"],
                                  "meta_text": "Subscription Plan Detail is part of the Accounts module. It links plans to quantities in recurring invoices. Example: plan ('Basic SaaS'), qty (10)."
                                },
                                "Pause SLA On Status": {
                                  "module": "Support",
                                  "description": "Standard ERPNext doctype for Pause SLA On Status",
                                  "fields": ["status"],
                                  "meta_text": "Pause SLA On Status is part of the Support module. It marks ticket statuses that pause SLA countdowns. Example: status ('Waiting for Customer')."
                                },
                                "POS Opening Entry Detail": {
                                  "module": "Accounts",
                                  "description": "Standard ERPNext doctype for POS Opening Entry Detail",
                                  "fields": ["mode_of_payment", "opening_amount"],
                                  "meta_text": "POS Opening Entry Detail is part of the Accounts module. It captures cash drawer starting balances by mode. Example: mode_of_payment ('Cash'), opening_amount (500.0)."
                                },
                                "POS Opening Entry": {
                                  "module": "Accounts",
                                  "description": "Standard ERPNext doctype for POS Opening Entry",
                                  "fields": ["period_start_date", "period_end_date", "status", "posting_date", "company", "pos_profile", "user", "balance_details"],
                                  "meta_text": "POS Opening Entry is part of the Accounts module. It defines the shift start for point-of-sale operations, including fields like period_start_date ('2025-04-15'), pos_profile ('Retail Counter'), and balance_details (cash opening amounts)."
                                },
                                "POS Closing Entry Taxes": {
                                  "module": "Accounts",
                                  "description": "Standard ERPNext doctype for POS Closing Entry Taxes",
                                  "fields": ["account_head", "rate", "amount"],
                                  "meta_text": "POS Closing Entry Taxes is part of the Accounts module. It tracks tax totals at point-of-sale closure. Example fields include account_head ('VAT 5%'), rate (5), amount (120.00)."
                                },
                                "Asset Maintenance": {
                                  "module": "Assets",
                                  "description": "Standard ERPNext doctype for Asset Maintenance",
                                  "fields": ["asset_name", "asset_category", "company", "item_code", "item_name", "maintenance_team", "maintenance_manager", "maintenance_tasks"],
                                  "meta_text": "Asset Maintenance is part of the Assets module. It schedules service tasks for fixed assets. Example fields include asset_name ('Laser Printer 002'), maintenance_manager ('John Doe'), and maintenance_team ('Tech Support')."
                                },
                            
                              "Downtime Entry": {
  "module": "Manufacturing",
  "description": "Used to log and track workstation downtime in manufacturing, including start/end time and reasons.",
  "meta_text": "This is a part of the Manufacturing module. It includes fields such as `workstation`, `operator`, `from_time`, `to_time`, and `stop_reason` to help log manufacturing workstation downtimes."
},
  "POS Profile User": {
    "module": "Accounts",
    "description": "Links POS profiles to specific users for managing retail transactions effectively.",
    "fields": ["default", "user"],
    "meta_text": "POS Profile User is part of the Accounts module. It links Point of Sale profiles with specific users to control access and ensure proper transaction logging. Common fields include default (marks the default profile for the user) and user (the system user assigned to the POS profile)."
  },
  "Installed Application": {
    "module": "Core",
    "description": "Tracks individual applications installed within the ERPNext environment along with version details.",
    "fields": ["app_name", "app_version", "git_branch"],
    "meta_text": "Installed Application is part of the Core module. It records metadata about installed applications such as the name, version, and git branch. Useful for managing deployments and version control. Common fields include app_name (name of the application), app_version (version installed), and git_branch (git branch currently in use)."
  },
  "Installed Applications": {
    "module": "Core",
    "description": "Stores a list of all applications currently installed in the system.",
    "fields": ["installed_applications"],
    "meta_text": "Installed Applications is part of the Core module. It aggregates all applications deployed on the ERP instance. The key field is installed_applications (a list of application identifiers)."
  },
  "Social Link Settings": {
    "module": "Website",
    "description": "Manages appearance and configuration of social media links on the website.",
    "fields": ["social_link_type", "color", "background_color"],
    "meta_text": "Social Link Settings is part of the Website module. It defines how social media icons are styled and displayed. Common fields include social_link_type (e.g., Facebook, Twitter), color (icon color), and background_color (background behind the icon)."
  },
  "Journal Entry Template": {
    "module": "Accounts",
    "description": "Template for creating standard journal entries quickly and consistently.",
    "fields": ["section_break_1", "template_title", "voucher_type", "naming_series", "column_break_3", "company", "is_opening", "multi_currency", "section_break_3", "accounts"],
    "meta_text": "Journal Entry Template is part of the Accounts module. It provides reusable templates to simplify the creation of recurring journal entries. Fields include template_title (name of the template), voucher_type (type of journal voucher), and company (the organization it belongs to)."
  },
  "Onboarding Permission": {
    "module": "Desk",
    "description": "Defines onboarding access rules based on user roles during ERPNext setup.",
    "fields": ["role"],
    "meta_text": "Onboarding Permission is part of the Desk module. It controls what roles have permission during the onboarding workflow. Key field: role (user role being granted access)."
  },
  "Onboarding Step Map": {
    "module": "Desk",
    "description": "Maps onboarding steps to guide users through ERPNext setup tasks.",
    "fields": ["step"],
    "meta_text": "Onboarding Step Map is part of the Desk module. It connects setup steps with onboarding flows, helping users complete initial configurations. The step field refers to each onboarding task identifier."
  },
  "Quality Inspection Template": {
    "module": "Stock",
    "description": "Template used to define standard quality inspection parameters for items.",
    "fields": ["quality_inspection_template_name", "item_quality_inspection_parameter"],
    "meta_text": "Quality Inspection Template is part of the Stock module. It defines reusable inspection parameter sets for items. Fields include quality_inspection_template_name (template name) and item_quality_inspection_parameter (list of checks to be performed)."
  },
  "Project Template": {
    "module": "Projects",
    "description": "Defines reusable templates for project creation with predefined tasks and structure.",
    "fields": ["project_type", "tasks"],
    "meta_text": "Project Template is part of the Projects module. It allows users to define standard project structures including task lists. Common fields are project_type (e.g., implementation, development) and tasks (set of standard project tasks)."
  },
  "Journal Entry Template Account": {
    "module": "Accounts",
    "description": "Used within Journal Entry Templates to define account-specific line items.",
    "fields": ["account"],
    "meta_text": "Journal Entry Template Account is part of the Accounts module. It stores account lines used in predefined journal entry templates. The main field is account (the ledger account used in the entry)."
  },
  "Number Card Link": {
    "module": "Desk",
    "description": "Connects number cards to dashboards for quick metric visualization.",
    "fields": ["card"],
    "meta_text": "Number Card Link is part of the Desk module. It links statistical number cards to dashboards for display. The card field refers to the specific card being linked."
  },
  "Color": {
    "module": "Website",
    "description": "Manages color values used in various parts of the website or application interface.",
    "fields": ["color"],
    "meta_text": "Color is part of the Website module. It defines color values for themes, labels, or UI elements. The only field is color (the hex code or color label)."
  },
  "Holiday": {
    "module": "Setup",
    "description": "Used to manage public holidays and weekly offs for attendance tracking.",
    "fields": ["holiday_date", "column_break_2", "weekly_off", "section_break_4", "description"],
    "meta_text": "Holiday is part of the Setup module. It defines national holidays, company leaves, and weekly offs for payroll and attendance. Key fields are holiday_date (date of the holiday), weekly_off (boolean or indicator), and description (optional note)."
  },
  "Bank Account Type": {
    "module": "Accounts",
    "description": "Defines classifications for different types of bank accounts used by the organization.",
    "fields": ["account_type"],
    "meta_text": "Bank Account Type is part of the Accounts module. It classifies different types of bank accounts, such as Savings or Current. Main field is account_type (type/category name)."
  },
    "Item Manufacturer": {
      "module": "Stock",
      "description": "Used to map a specific item to its manufacturer, including manufacturer part numbers and default status.",
      "fields": ["item_code", "manufacturer", "manufacturer_part_no", "item_name", "description", "is_default"],
      "meta_text": "Item Manufacturer is part of the Stock module. It is used to associate an item with its manufacturer details, including part number and default flag. Common fields include item_code (item being manufactured), manufacturer (the source company), and manufacturer_part_no (unique part number)."
    },
    "Contact Phone": {
      "module": "Contacts",
      "description": "Captures phone numbers associated with a contact and marks them as primary or mobile.",
      "fields": ["phone", "is_primary_phone", "is_primary_mobile_no"],
      "meta_text": "Contact Phone is part of the Contacts module. It stores phone contact information for individuals or companies, allowing distinction between primary and mobile numbers. Fields include phone (contact number), is_primary_phone (flag for main number), and is_primary_mobile_no (flag for mobile)."
    },
    "Payment Order": {
      "module": "Accounts",
      "description": "Used to create a structured order for processing payments to vendors or customers.",
      "fields": ["naming_series", "company", "payment_order_type", "party", "posting_date", "company_bank", "company_bank_account", "account", "references", "amended_from"],
      "meta_text": "Payment Order is part of the Accounts module. It structures payment instructions for parties such as suppliers or customers. Key fields include company (organization making payment), party (recipient), payment_order_type (e.g. vendor payment), and company_bank_account (source account)."
    },
    "Dashboard Chart Link": {
      "module": "Desk",
      "description": "Links a chart to a specific dashboard and sets its width for display purposes.",
      "fields": ["chart", "width"],
      "meta_text": "Dashboard Chart Link is part of the Desk module. It is used to embed specific charts in dashboards with adjustable width. Fields include chart (reference to chart document) and width (display width in columns)."
    },
    "Dashboard Chart Field": {
      "module": "Desk",
      "description": "Defines a specific data field and its color representation in a dashboard chart.",
      "fields": ["y_field", "color"],
      "meta_text": "Dashboard Chart Field is part of the Desk module. It defines a metric (Y-axis field) and its associated color for dashboard charts. Common fields are y_field (metric being visualized) and color (used for graph styling)."
    },
    "Chart of Accounts Importer": {
      "module": "Accounts",
      "description": "Tool to import a chart of accounts structure into the ERP system using a CSV file.",
      "fields": ["company", "download_template", "import_file", "chart_preview", "chart_tree"],
      "meta_text": "Chart of Accounts Importer is part of the Accounts module. It allows importing a predefined chart of accounts from a CSV. Useful fields include company (to assign accounts to), download_template (CSV download option), and import_file (upload CSV file)."
    },
    "Discounted Invoice": {
      "module": "Accounts",
      "description": "Stores details of invoices that have been discounted, including outstanding and debit information.",
      "fields": ["sales_invoice", "customer", "posting_date", "outstanding_amount", "debit_to"],
      "meta_text": "Discounted Invoice is part of the Accounts module. It captures the relationship between discounted sales invoices and their financial implications. Fields include sales_invoice (reference to invoice), customer (payer), and debit_to (account debited for the invoice)."
    },
      "Project User": {
        "module": "Projects",
        "description": "Used to define users assigned to a project along with their permissions, roles, and welcome status.",
        "fields": ["user", "email", "image", "full_name", "welcome_email_sent", "view_attachments", "project_status"],
        "meta_text": "Project User is part of the Projects module. It assigns users to a project and manages their roles, visibility, and notifications. Fields include user (ERPNext user ID), email (user's email), welcome_email_sent (flag if welcome message was sent), and project_status (current access status)."
      },
      "Loyalty Point Entry": {
        "module": "Accounts",
        "description": "Used to manage loyalty points earned or redeemed by customers against purchases or invoices.",
        "fields": ["loyalty_program", "loyalty_program_tier", "customer", "invoice_type", "invoice", "redeem_against", "loyalty_points", "purchase_amount", "expiry_date", "posting_date", "company"],
        "meta_text": "Loyalty Point Entry is part of the Accounts module. It tracks the allocation and usage of loyalty points by customers for promotional or reward programs. Important fields include loyalty_program (reward scheme), loyalty_points (points earned/redeemed), and invoice (document related to the transaction)."
      },
      "Bank Transaction Payments": {
        "module": "Accounts",
        "description": "Stores payments matched to bank transactions for reconciliation purposes.",
        "fields": ["payment_document", "payment_entry", "allocated_amount", "clearance_date"],
        "meta_text": "Bank Transaction Payments is part of the Accounts module. It links bank statement transactions with actual payment entries in ERPNext. Key fields include payment_document (type of document like Payment Entry), allocated_amount (matched value), and clearance_date (when payment cleared)."
      },
      "Share Transfer": {
        "module": "Accounts",
        "description": "Used to record transfer of shares between shareholders, including quantity, value, and associated accounts.",
        "fields": ["transfer_type", "date", "from_shareholder", "from_folio_no", "to_shareholder", "to_folio_no", "equity_or_liability_account", "asset_account", "share_type", "from_no", "rate", "no_of_shares", "to_no", "amount", "company", "remarks", "amended_from"],
        "meta_text": "Share Transfer is part of the Accounts module. It records share transactions between shareholders, including share numbers, types, rates, and accounts involved. Common fields include from_shareholder, to_shareholder, no_of_shares, and equity_or_liability_account for ledger entry."
      },
      "Website Route Meta": {
        "module": "Website",
        "description": "Used to define SEO meta tags for custom website routes.",
        "fields": ["meta_tags"],
        "meta_text": "Website Route Meta is part of the Website module. It allows setting meta tags for custom website routes to improve SEO and page metadata. The key field is meta_tags which stores relevant HTML metadata in JSON format."
      },
        "Appointment Booking Slots": {
          "module": "CRM",
          "description": "Used to define the available time slots on specific weekdays for scheduling customer appointments.",
          "fields": ["day_of_week", "from_time", "to_time"],
          "meta_text": "Appointment Booking Slots is part of the CRM module. It specifies the days and times available for customers to book appointments. Fields include day_of_week (e.g., Monday), from_time (start of the slot), and to_time (end of the slot), helping automate calendar availability."
        },
        "Energy Point Rule": {
          "module": "Social",
          "description": "Used to define rules that allocate reward points to users for specific document actions or events.",
          "fields": ["enabled", "rule_name", "reference_doctype", "for_doc_event", "field_to_check", "points", "for_assigned_users", "user_field", "multiplier_field", "max_points", "apply_only_once", "condition"],
          "meta_text": "Energy Point Rule is part of the Social module. It allows configuring how users are rewarded with energy points based on document actions. For example, assigning points for submitting a task. Key fields include rule_name (name of the rule), reference_doctype (like Task), for_doc_event (e.g., on_submit), and points (reward value)."
        },
        "Coupon Code": {
          "module": "Accounts",
          "description": "Used to create and manage discount coupons linked to pricing rules, customers, and validity periods.",
          "fields": ["coupon_name", "coupon_type", "customer", "coupon_code", "pricing_rule", "uses", "valid_from", "valid_upto", "maximum_use", "used", "description", "amended_from"],
          "meta_text": "Coupon Code is part of the Accounts module. It helps define promotional discount codes that can be applied during sales. Common fields include coupon_code (the unique promo code), pricing_rule (linked rule), valid_from/valid_upto (validity period), and maximum_use (usage limit)."
        },
          "Sales Partner": {
            "module": "Setup",
            "description": "A third-party distributor, dealer, commission agent, affiliate, or reseller who sells the company's products for a commission.",
            "fields": [
              "partner_name", "partner_type", "territory", "commission_rate", "address_contacts", "address_desc",
              "address_html", "contact_desc", "contact_html", "targets", "website", "show_in_website",
              "referral_code", "route", "logo", "partner_website", "introduction", "description"
            ],
            "meta_text": "Sales Partner is part of the Setup module. It is used to manage individuals or organizations who resell the company’s products or services and earn commissions. This includes fields like partner_name (name of the partner), commission_rate (percentage commission), territory (assigned area), and contact or address details. Useful for managing affiliate or reseller programs."
          },
          "Dynamic Link": {
            "module": "Core",
            "description": "Used to create a dynamic reference to any document type and record across the ERP system.",
            "fields": ["link_doctype", "link_name", "link_title"],
            "meta_text": "Dynamic Link is part of the Core module. It enables linking any document to another in a flexible way. This is commonly used in custom fields to create reference-type behavior. Fields include link_doctype (target DocType), link_name (record name), and link_title (optional display title)."
          },
          "Global Search Settings": {
            "module": "Desk",
            "description": "Used to configure which doctypes and fields are available in the global search functionality.",
            "fields": ["allowed_in_global_search"],
            "meta_text": "Global Search Settings is part of the Desk module. It controls what content appears in ERPNext's global search. The main field, allowed_in_global_search, determines whether a specific field or document type can be indexed and shown in global results."
          },
          "Notification Subscribed Document": {
            "module": "Desk",
            "description": "Used to track which documents a user has subscribed to for receiving notifications.",
            "fields": ["document"],
            "meta_text": "Notification Subscribed Document is part of the Desk module. It tracks documents that users have subscribed to for notifications. This enables real-time updates when changes occur in those documents. The document field identifies the subscribed record."
          },
          "Asset Movement Item": {
            "module": "Assets",
            "description": "Represents the individual asset details in an asset movement transaction, such as source and target location or employee.",
            "fields": ["company", "asset", "source_location", "from_employee", "asset_name", "target_location", "to_employee"],
            "meta_text": "Asset Movement Item is part of the Assets module. It records each asset being moved, including its source and destination. Fields include asset (item being moved), source_location and target_location (from and to warehouse or location), and from_employee/to_employee (responsible personnel)."
          },
          "Quick Stock Balance": {
            "module": "Stock",
            "description": "Displays quick inventory balances with details like warehouse, item barcode, stock quantity, and value.",
            "fields": ["warehouse", "date", "item_barcode", "item", "item_name", "item_description", "image", "qty", "value"],
            "meta_text": "Quick Stock Balance is part of the Stock module. It is a reporting tool to instantly check current inventory levels and values for specific items across warehouses. Key fields include item_barcode (code for the item), warehouse (stock location), qty (quantity in hand), and value (total worth)."
          },
            "Tag": {
              "module": "Desk",
              "description": "Used to define tags that can be applied to documents for better categorization and filtering across the system.",
              "fields": ["description"],
              "meta_text": "Tag is part of the Desk module. It allows users to define and assign tags to various documents, enabling easy categorization, search, and filtering. The only field, description, holds the name or label of the tag."
            },
            "Contact Email": {
              "module": "Contacts",
              "description": "Stores the email addresses associated with a contact and marks primary emails.",
              "fields": ["email_id", "is_primary"],
              "meta_text": "Contact Email is part of the Contacts module. It stores one or more email addresses for a contact. Fields include email_id (the actual email) and is_primary (to indicate the main email for communication)."
            },
            "Assignment Rule Day": {
              "module": "Automation",
              "description": "Specifies the days of the week when an assignment rule is active.",
              "fields": ["day"],
              "meta_text": "Assignment Rule Day is part of the Automation module. It defines which days of the week an assignment rule should apply. The day field represents the name of the weekday (e.g., Monday, Tuesday)."
            },
            "Global Search DocType": {
              "module": "Desk",
              "description": "Used to configure which doctypes are included in the global search index.",
              "fields": ["document_type"],
              "meta_text": "Global Search DocType is part of the Desk module. It allows specifying which document types can appear in global search results. The document_type field holds the name of the doctype to include."
            },
            "Availability Of Slots": {
              "module": "CRM",
              "description": "Defines availability time slots for appointments based on day and time.",
              "fields": ["day_of_week", "from_time", "to_time"],
              "meta_text": "Availability Of Slots is part of the CRM module. It defines specific days and time ranges when slots are open for scheduling appointments. Common fields include day_of_week (e.g., Monday), from_time, and to_time (time window available)."
            },
            "POS Field": {
              "module": "Accounts",
              "description": "Defines custom fields to be shown in the Point of Sale (POS) interface.",
              "fields": ["fieldname", "label", "fieldtype", "options", "default_value", "reqd", "read_only"],
              "meta_text": "POS Field is part of the Accounts module. It is used to configure dynamic input fields for the POS screen. Fields include fieldname (internal name), label (display text), fieldtype (data type), options (for select fields), default_value, reqd (if required), and read_only (whether editable)."
            },
            "Accounting Dimension Detail": {
              "module": "Accounts",
              "description": "Provides detailed configuration for accounting dimensions per company, including posting behaviors.",
              "fields": ["company", "reference_document", "default_dimension", "mandatory_for_bs", "mandatory_for_pl", "automatically_post_balancing_accounting_entry", "offsetting_account"],
              "meta_text": "Accounting Dimension Detail is part of the Accounts module. It is used to define how accounting dimensions behave per company. Key fields include company, default_dimension (e.g., cost center), reference_document (context in which it applies), and flags like mandatory_for_bs (Balance Sheet) or pl (Profit & Loss), and whether auto-balancing entries are enabled."
            }                    
}                 
                                  
                                


        

               



