[
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "When was the exchange difference posted for advance entry SIA-0092?",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SIA-0092'}, 'difference_posting_date')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show all posting dates for exchange differences recorded in 2023.",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'difference_posting_date': ['between', ['2023-01-01', '2023-12-31']] }, fields=['difference_posting_date'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "When did we last post an exchange difference adjustment?",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', fields=['difference_posting_date'], order_by='difference_posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What dates were gain/loss entries made for supplier 'Maxwell Corp'?",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'supplier': 'Maxwell Corp'}, fields=['difference_posting_date'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which advance entries posted gain/loss adjustments in February 2024?",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'difference_posting_date': ['between', ['2024-02-01', '2024-02-29']] }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List the exchange gain/loss values for all advance payments in March 2024.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'posting_date': ['between', ['2024-03-01', '2024-03-31']]}, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What exchange rate was applied to document PINV-0452?",
            "fields": [
                "ref_exchange_rate"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'reference_name': 'PINV-0452'}, 'ref_exchange_rate')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Show the reference exchange rate for the latest advance entry.",
            "fields": [
                "ref_exchange_rate"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', fields=['ref_exchange_rate'], order_by='posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What exchange rates were used for advances posted last month?",
            "fields": [
                "ref_exchange_rate"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'posting_date': ['between', ['2024-04-01', '2024-04-30']]}, fields=['ref_exchange_rate'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What was the exchange rate for the advance entry ADV-0030?",
            "fields": [
                "ref_exchange_rate"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-0030'}, 'ref_exchange_rate')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Find exchange rates used in all April 2024 supplier advances.",
            "fields": [
                "ref_exchange_rate"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'posting_date': ['between', ['2024-04-01', '2024-04-30']]}, fields=['ref_exchange_rate'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Retrieve exchange rates where allocated amount exceeded QAR 1000.",
            "fields": [
                "ref_exchange_rate",
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'allocated_amount': ['>', 1000] }, fields=['ref_exchange_rate'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What is the reference type linked to the advance record SIA-2025-0001?",
            "fields": [
                "reference_type"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SIA-2025-0001'}, 'reference_type')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show me the document type connected with advance entry SIA-3023.",
            "fields": [
                "reference_type"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SIA-3023'}, 'reference_type')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What kind of document is the advance associated with in record ADV-SINV-047?",
            "fields": [
                "reference_type"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'ADV-SINV-047'}, 'reference_type')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Provide the type of reference document for the advance SIA-8005.",
            "fields": [
                "reference_type"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SIA-8005'}, 'reference_type')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "For entry SIA-7613, what is the document type it is linked to?",
            "fields": [
                "reference_type"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SIA-7613'}, 'reference_type')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which document type is most frequently associated with sales advance payments?",
            "fields": [
                "reference_type"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', fields=['reference_type'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What document types are recorded for advances posted last quarter?",
            "fields": [
                "reference_type"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'posting_date': ['between', ['2024-01-01', '2024-03-31']]}, fields=['reference_type'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Find out whether any advances are linked to 'Sales Order'.",
            "fields": [
                "reference_type"
            ]
        },
        "output": "frappe.db.exists('Sales Invoice Advance', {'reference_type': 'Sales Order'})"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Get the reference type of the most recent advance linked to Orion Tech.",
            "fields": [
                "reference_type"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'customer': 'Orion Tech'}, fields=['reference_type'], order_by='posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "List remarks from advances posted with an amount greater than QAR 5,000.",
            "fields": [
                "remarks",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'advance_amount': ['>', 5000]}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "For which advances was 'final adjustment' noted in the remarks field?",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'remarks': ['like', '%final adjustment%']}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show remarks added to the most recent advance received from Greenwave Ltd.",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'customer': 'Greenwave Ltd.'}, fields=['remarks'], order_by='posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which records include remarks containing the word 'reallocation'?",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'remarks': ['like', '%reallocation%']}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Pull all remarks associated with document SINV-2088 advances.",
            "fields": [
                "remarks",
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'reference_name': 'SINV-2088'}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show the reference row used in the advance record SINVADV-5503.",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SINVADV-5503'}, 'reference_row')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which row of the original invoice is linked to advance SINVADV-2029?",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SINVADV-2029'}, 'reference_row')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Get all advances that reference line number 2 in their invoices.",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'reference_row': 2}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "For invoice SINV-8891, which line item is this advance linked to?",
            "fields": [
                "reference_row",
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'reference_name': 'SINV-8891'}, fields=['reference_row'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show the row index linked to the advance for document SINV-3001.",
            "fields": [
                "reference_row",
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'reference_name': 'SINV-3001'}, fields=['reference_row'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What is the advance amount paid under entry SINVADV-3407?",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SINVADV-3407'}, 'advance_amount')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which advances recorded any exchange rate gain or loss?",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'exchange_gain_loss': ['!=', 0] }, fields=['name', 'exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show the currency exchange difference for entry SIA-3245.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SIA-3245'}, 'exchange_gain_loss')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Find entries with exchange gain/loss above QAR 500.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'exchange_gain_loss': ['>', 500] }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Retrieve gain/loss on currency for foreign advances in Q4 2023.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'posting_date': ['between', ['2023-10-01', '2023-12-31']] }, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What's the exchange loss recorded for customer ABC Retail?",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'customer': 'ABC Retail' }, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which entries have zero allocated amounts?",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'allocated_amount': 0}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Identify records where allocated amount is greater than QAR 20,000.",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'allocated_amount': ['>', 20000]}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What\u2019s the total allocated amount across all customer advances in Q1 2024?",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'posting_date': ['between', ['2024-01-01', '2024-03-31']]}, fields=['allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "For entry ADV-4567, what value has been allocated so far?",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'ADV-4567'}, 'allocated_amount')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What is the total allocated advance amount made by \u2018Nexa Distributors\u2019?",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'customer': 'Nexa Distributors'}, fields=['allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What portion of advance has been allocated in entry SINVADV-2217?",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SINVADV-2217'}, 'allocated_amount')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "List all entries where allocated amount is less than QAR 5,000.",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'allocated_amount': ['<', 5000]}, fields=['name', 'allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What is the average allocated amount for all advances in March 2024?",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'posting_date': ['between', ['2024-03-01', '2024-03-31']]}, fields=['allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which advance entries had full allocation matching the total advance amount?",
            "fields": [
                "allocated_amount",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'allocated_amount': ['!=', 0]}, fields=['name', 'advance_amount', 'allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What is the allocated amount for the advance referencing SINV-4401?",
            "fields": [
                "allocated_amount",
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'reference_name': 'SINV-4401'}, fields=['allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show advance payments greater than QAR 25,000.",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'advance_amount': ['>', 25000]}, fields=['name', 'advance_amount'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What is the start date of the stock balance for document CSB-00023?",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-00023'}, 'from_date')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What is the closing date for the stock report CSB-0031?",
            "fields": [
                "to_date"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-0031'}, 'to_date')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Is the unit of measurement shown in report CSB-0485?",
            "fields": [
                "include_uom"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-0485'}, 'include_uom')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "List reports where UOM inclusion is disabled.",
            "fields": [
                "include_uom"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'include_uom': 0}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which reports include the unit of measurement column?",
            "fields": [
                "include_uom"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'include_uom': 1}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Find the UOM inclusion flag for the report submitted on 2024-04-01.",
            "fields": [
                "include_uom"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': '2024-04-01'}, fields=['include_uom'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What type of warehouse stores the closing stock for item 'ITEM-1009'?",
            "fields": [
                "warehouse_type",
                "item_code"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_code': 'ITEM-1009'}, fields=['warehouse_type'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which warehouse types are used for items in the 'Electronics' group?",
            "fields": [
                "warehouse_type",
                "item_group"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_group': 'Electronics'}, fields=['warehouse_type'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Fetch the warehouse type for stock record CSB-1024.",
            "fields": [
                "warehouse_type"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-1024'}, 'warehouse_type')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show warehouse types used for all closing stock entries created after April 1, 2024.",
            "fields": [
                "warehouse_type",
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>', '2024-04-01']}, fields=['warehouse_type'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "List all warehouse types used by 'Tech Distributors Ltd'.",
            "fields": [
                "warehouse_type",
                "company"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'Tech Distributors Ltd'}, fields=['warehouse_type'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which warehouse type is most commonly used across all warehouses?",
            "fields": [
                "warehouse_type",
                "warehouse"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', fields=['warehouse_type'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which stock balance entries are amendments of previous records?",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'amended_from': ['!=', '']}, fields=['name', 'amended_from'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Get amendment source document for CSB-0035.",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-0035'}, 'amended_from')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "List all entries in Closing Stock Balance that were amendments.",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'amended_from': ['!=', '']}, fields=['name', 'amended_from'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Is CSB-0221 an updated version of another stock balance document?",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-0221'}, 'amended_from')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show previous documents that were amended into current entries.",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'amended_from': ['!=', '']}, fields=['amended_from'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Find the original entry for the amended stock report CSB-0105.",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-0105'}, 'amended_from')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Has CSB-0098 been amended from an earlier entry?",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-0098'}, 'amended_from')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show all current stock balances that are revised versions of older entries.",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'amended_from': ['!=', '']}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Find entries that were created as amendments to earlier closing stock records.",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'amended_from': ['!=', '']}, fields=['name', 'amended_from'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Check if the entry CSB-1002 is an amendment of a previous stock report.",
            "fields": [
                "amended_from"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-1002'}, 'amended_from')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "List warehouse types associated with closing stock between January and March 2024.",
            "fields": [
                "warehouse_type",
                "from_date",
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>=', '2024-01-01'], 'to_date': ['<=', '2024-03-31']}, fields=['warehouse_type'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which warehouse type is used in entry CSB-00456?",
            "fields": [
                "warehouse_type"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-00456'}, 'warehouse_type')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show all distinct warehouse types used in closing stock entries of 'Global Mart'.",
            "fields": [
                "warehouse_type",
                "company"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'Global Mart'}, fields=['warehouse_type'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Get the latest warehouse type used in closing stock for finished goods.",
            "fields": [
                "warehouse_type",
                "item_group"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_group': 'Finished Goods'}, fields=['warehouse_type'], order_by='to_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Did the warehouse summary for March 2024 include UOM details?",
            "fields": [
                "include_uom"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>=', '2024-03-01'], 'to_date': ['<=', '2024-03-31']}, fields=['include_uom'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What item group is associated with the stock entry CSB-5043?",
            "fields": [
                "item_group"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-5043'}, 'item_group')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "List all item groups included in the April 2024 closing stock report.",
            "fields": [
                "item_group",
                "from_date",
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>=', '2024-04-01'], 'to_date': ['<=', '2024-04-30']}, fields=['item_group'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which item group includes 'STEEL-325' in this report?",
            "fields": [
                "item_group",
                "item_code"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_code': 'STEEL-325'}, fields=['item_group'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What item groups are tracked for Warehouse A during Q1 2024?",
            "fields": [
                "item_group",
                "warehouse",
                "from_date",
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'Warehouse A', 'from_date': ['>=', '2024-01-01'], 'to_date': ['<=', '2024-03-31']}, fields=['item_group'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Identify the item group that includes the product 'CAP-102'.",
            "fields": [
                "item_group",
                "item_code"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_code': 'CAP-102'}, fields=['item_group'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which item groups had balances across multiple warehouses last month?",
            "fields": [
                "item_group",
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'to_date': ['between', ['2024-04-01', '2024-04-30']]}, fields=['item_group'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What item group is recorded most frequently across entries in May 2024?",
            "fields": [
                "item_group"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'to_date': ['between', ['2024-05-01', '2024-05-31']]}, fields=['item_group'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What item group appears with status 'Draft' in recent entries?",
            "fields": [
                "item_group",
                "status"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'status': 'Draft'}, fields=['item_group'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "For the company FreshMart, which item groups were tracked in April 2024?",
            "fields": [
                "item_group",
                "company",
                "from_date",
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'FreshMart', 'from_date': ['>=', '2024-04-01'], 'to_date': ['<=', '2024-04-30']}, fields=['item_group'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What item groups were recorded in the report for warehouse type 'Transit'?",
            "fields": [
                "item_group",
                "warehouse_type"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse_type': 'Transit'}, fields=['item_group'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which item code is recorded in report CSB-1201?",
            "fields": [
                "item_code"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-1201'}, 'item_code')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "List all item codes tracked between March and April 2024.",
            "fields": [
                "item_code",
                "from_date",
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>=', '2024-03-01'], 'to_date': ['<=', '2024-04-30']}, fields=['item_code'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show me item codes recorded for Finished Goods Warehouse only.",
            "fields": [
                "item_code",
                "warehouse"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'Finished Goods Warehouse'}, fields=['item_code'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which item codes were recorded under the 'Spare Parts' group?",
            "fields": [
                "item_code",
                "item_group"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_group': 'Spare Parts'}, fields=['item_code'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Get all unique item codes recorded in the latest stock balance entries.",
            "fields": [
                "item_code"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', fields=['item_code'], order_by='creation desc', distinct=True)"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Identify items recorded in stock balances after May 1st.",
            "fields": [
                "item_code",
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>', '2024-05-01']}, fields=['item_code'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What item codes appear most frequently in closing balances this quarter?",
            "fields": [
                "item_code"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', fields=['item_code'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which items are missing from the Central Warehouse report?",
            "fields": [
                "item_code",
                "warehouse"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'Central Warehouse'}, fields=['item_code'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show item codes with data submitted by Summit Electronics.",
            "fields": [
                "item_code",
                "company"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'Summit Electronics'}, fields=['item_code'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which item codes have not been updated in the last report from Raw Materials Warehouse?",
            "fields": [
                "item_code",
                "warehouse"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'Raw Materials Warehouse'}, fields=['item_code'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "List the to_date for all stock reports submitted in April 2024.",
            "fields": [
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'status': 'Submitted', 'to_date': ['between', ['2024-04-01', '2024-04-30']]}, fields=['to_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Get the report end date for stock balance CSB-240.",
            "fields": [
                "to_date"
            ]
        },
        "output": "frappe.db.get_value('Closing Stock Balance', {'name': 'CSB-240'}, 'to_date')"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "When does the warehouse report for WH-23 end?",
            "fields": [
                "to_date",
                "warehouse"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'WH-23'}, fields=['to_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which stock reports have their closing date set to 2024-06-30?",
            "fields": [
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'to_date': '2024-06-30'}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What is the latest closing date used in stock balance reports?",
            "fields": [
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', fields=['to_date'], order_by='to_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Retrieve the to_date for balances ending in May 2024.",
            "fields": [
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'to_date': ['between', ['2024-05-01', '2024-05-31']]}, fields=['to_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show the closing date for all reports created by 'BrightSteel Corp'.",
            "fields": [
                "to_date",
                "company"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'BrightSteel Corp'}, fields=['to_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What\u2019s the last recorded stock closing date for warehouse WH-MFG-01?",
            "fields": [
                "to_date",
                "warehouse"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'WH-MFG-01'}, fields=['to_date'], order_by='to_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What closing dates were used in reports submitted this week?",
            "fields": [
                "to_date",
                "status"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'status': 'Submitted', 'to_date': ['between', ['2024-05-20', '2024-05-25']]}, fields=['to_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Give me the beginning date of the stock balance for the April cycle.",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'to_date': ['between', ['2024-04-01', '2024-04-30']]}, fields=['from_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "When did the stock balance period begin for 'Trinity Corp'?",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'Trinity Corp'}, fields=['from_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Retrieve the earliest from_date in closing stock balance records for warehouse 'WH-0001'.",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'WH-0001'}, fields=['from_date'], order_by='from_date asc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Find all records where the from_date is before 2024-03-01.",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['<', '2024-03-01']}, fields=['name', 'from_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "List the starting dates of stock reports in March 2024.",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['between', ['2024-03-01', '2024-03-31']]}, fields=['from_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Get the from_date for stock balance submitted under item group 'Electronics'.",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_group': 'Electronics'}, fields=['from_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What is the starting date of the balance recorded for the warehouse 'Main Store'?",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'Main Store'}, fields=['from_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Check the start date of closing stock records in status 'Submitted'.",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'status': 'Submitted'}, fields=['from_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show the from_date for stock balance linked to item_code 'ITM-9023'.",
            "fields": [
                "from_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_code': 'ITM-9023'}, fields=['from_date'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What is the naming series used for the April 2024 stock closure document?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>=', '2024-04-01'], 'to_date': ['<=', '2024-04-30']}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Get the current status of stock closing for the item group 'Raw Materials'.",
            "fields": [
                "status",
                "item_group"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_group': 'Raw Materials'}, fields=['status'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "List all closing stock balances that have been cancelled.",
            "fields": [
                "status"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'status': 'Cancelled'}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which closing stock entries for 'SuperMart Ltd.' are still in Draft?",
            "fields": [
                "company",
                "status"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'SuperMart Ltd.', 'status': 'Draft'}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Check the approval status for stock balance with warehouse type 'Distribution'.",
            "fields": [
                "warehouse_type",
                "status"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse_type': 'Distribution'}, fields=['status'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "How many cancelled stock balances were filed by 'Trident Corp'?",
            "fields": [
                "status",
                "company"
            ]
        },
        "output": "frappe.db.count('Closing Stock Balance', {'status': 'Cancelled', 'company': 'Trident Corp'})"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What is the current status of the stock balance document with item code 'PACK-2241'?",
            "fields": [
                "status",
                "item_code"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'item_code': 'PACK-2241'}, fields=['status'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show me all closing stock balances that are in Draft state.",
            "fields": [
                "status"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'status': 'Draft'}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "How many closing stock documents are currently marked as Submitted?",
            "fields": [
                "status"
            ]
        },
        "output": "frappe.db.count('Closing Stock Balance', {'status': 'Submitted'})"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Get the status of the stock balance entry submitted by NovaTech Corp.",
            "fields": [
                "status",
                "company"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'NovaTech Corp'}, fields=['status'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Find the status of the most recent stock closing for 'Main Warehouse'.",
            "fields": [
                "status",
                "warehouse"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'Main Warehouse'}, fields=['status'], order_by='to_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which entries were cancelled in the last quarter?",
            "fields": [
                "status",
                "from_date",
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={ 'status': 'Cancelled', 'from_date': ['>=', '2024-01-01'], 'to_date': ['<=', '2024-03-31'] }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Check the status of stock balance with warehouse 'East Wing Depot'.",
            "fields": [
                "status",
                "warehouse"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'warehouse': 'East Wing Depot'}, fields=['status'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "How many Draft entries are there for the item 'CABLE-3010'?",
            "fields": [
                "status",
                "item_code"
            ]
        },
        "output": "frappe.db.count('Closing Stock Balance', {'status': 'Draft', 'item_code': 'CABLE-3010'})"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Fetch the status of stock reports generated in April 2024.",
            "fields": [
                "status",
                "from_date",
                "to_date"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>=', '2024-04-01'], 'to_date': ['<=', '2024-04-30']}, fields=['status'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show all closing stock documents with Submitted status from TechPlus Ltd.",
            "fields": [
                "status",
                "company"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'status': 'Submitted', 'company': 'TechPlus Ltd.'}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show me the document series code used in closing stock balance sheets.",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which naming pattern is followed for stock balance entries of May 2024?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>=', '2024-05-01'], 'to_date': ['<=', '2024-05-31']}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Identify the naming series used in the most recent stock balance document for Beta Corp.",
            "fields": [
                "naming_series",
                "company"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'Beta Corp'}, fields=['naming_series'], order_by='to_date desc', limit=1)"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What naming convention is used in documents tracking monthly closing stock?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What is the highest advance amount recorded this year?",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'posting_date': ['between', ['2024-01-01', '2024-12-31']]}, fields=['advance_amount'], order_by='advance_amount desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "How much advance was paid for invoice SINV-3020?",
            "fields": [
                "advance_amount",
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'reference_name': 'SINV-3020'}, fields=['advance_amount'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What are the advance amounts received in February 2024?",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'posting_date': ['between', ['2024-02-01', '2024-02-29']]}, fields=['advance_amount'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show all remarks added to advances posted this week.",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'posting_date': ['between', ['2025-05-19', '2025-05-25']]}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What remarks were recorded for the advance linked to document SINV-9042?",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'reference_name': 'SINV-9042'}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Find any internal notes or descriptions added to large advance records.",
            "fields": [
                "remarks",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'advance_amount': ['>', 20000]}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "For which advances was a remark tagged as 'urgent allocation required'?",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'remarks': ['like', '%urgent allocation required%']}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Display all remarks where the comment mentions 'prepaid adjustment'.",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'remarks': ['like', '%prepaid adjustment%']}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which advances had a recorded exchange gain or loss for March 2024?",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'posting_date': ['between', ['2024-03-01', '2024-03-31']], 'exchange_gain_loss': ['!=', 0] }, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What is the naming series used for the closing stock record created for April 2024?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'from_date': ['>=', '2024-04-01'], 'to_date': ['<=', '2024-04-30']}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Which naming series pattern is followed in closing stock entries for Alpha Corp?",
            "fields": [
                "naming_series",
                "company"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'company': 'Alpha Corp'}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Show me the document series used for stock balances finalized last quarter.",
            "fields": [
                "naming_series",
                "status"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'status': 'Submitted'}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "What is the unique series format used to identify closing stock balance entries?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Closing Stock Balance",
            "question": "Can you provide the naming convention applied to the latest closing stock submission?",
            "fields": [
                "naming_series",
                "status"
            ]
        },
        "output": "frappe.get_all('Closing Stock Balance', filters={'status': 'Submitted'}, fields=['naming_series'], order_by='modified desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What\u2019s the gain or loss due to currency rate for invoice SINV-8721?",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'reference_name': 'SINV-8721'}, 'exchange_gain_loss')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Find the exchange loss on any entries with ref exchange rate below 3.5.",
            "fields": [
                "exchange_gain_loss",
                "ref_exchange_rate"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'ref_exchange_rate': ['<', 3.5] }, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What are the exchange gains or losses in Q1 for foreign currency advances?",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'posting_date': ['between', ['2024-01-01', '2024-03-31']] }, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "List gains or losses recorded from foreign payments in February.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'posting_date': ['between', ['2024-02-01', '2024-02-29']] }, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "For which documents were advances received from customer 'Nova Traders'?",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'customer': 'Nova Traders'}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show reference names of advances that were partially allocated.",
            "fields": [
                "reference_name",
                "allocated_amount",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'allocated_amount': ['<', 'advance_amount']}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "List the documents against which more than QAR 25,000 was received in advance.",
            "fields": [
                "reference_name",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'advance_amount': ['>', 25000]}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What are the referenced document IDs for fully allocated advances?",
            "fields": [
                "reference_name",
                "allocated_amount",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'allocated_amount': ['=', 'advance_amount']}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "What is the document name linked to advance entry SIA-1020?",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.db.get_value('Sales Invoice Advance', {'name': 'SIA-1020'}, 'reference_name')"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which documents have been referenced in customer advances this week?",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'posting_date': ['between', ['2025-05-19', '2025-05-25']]}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Can you list reference names tied to advances for \u2018Alpha Corp\u2019?",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'customer': 'Alpha Corp'}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Show me the document IDs of all advances from April 2024.",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'posting_date': ['between', ['2024-04-01', '2024-04-30']]}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "Which referenced documents have more than QAR 15,000 as advance?",
            "fields": [
                "reference_name",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={ 'advance_amount': ['>', 15000] }, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Sales Invoice Advance",
            "question": "List reference types for all advances exceeding QAR 20,000.",
            "fields": [
                "reference_type",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Sales Invoice Advance', filters={'advance_amount': ['>', 20000]}, fields=['reference_type'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "When was the gain/loss journal entry posted for entry ADV-3001?",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-3001'}, 'difference_posting_date')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Which advance entries had gain/loss posted on 2024-03-10?",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'difference_posting_date': '2024-03-10'}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List all gain/loss difference posting dates for entries recorded in March 2024.",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'difference_posting_date': ['between', ['2024-03-01', '2024-03-31']]}, fields=['difference_posting_date'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "When was the gain/loss impact posted for supplier 'Vertex Global'?",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'Vertex Global'}, fields=['difference_posting_date'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Retrieve the latest gain/loss posting date for supplier 'TopDeal Supplies'.",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'TopDeal Supplies'}, fields=['difference_posting_date'], order_by='posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "For advances exceeding QAR 15,000, when were the gain/loss differences posted?",
            "fields": [
                "difference_posting_date",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'advance_amount': ['>', 15000] }, fields=['difference_posting_date'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Check the gain/loss posting dates for all entries with exchange differences.",
            "fields": [
                "difference_posting_date",
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'exchange_gain_loss': ['!=', 0] }, fields=['difference_posting_date'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What were the gain/loss posting dates for all advances in Q1 2024?",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'difference_posting_date': ['between', ['2024-01-01', '2024-03-31']]}, fields=['difference_posting_date'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Give me the posting dates for gain/loss on foreign currency adjustments for March 2024 advances.",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'difference_posting_date': ['between', ['2024-03-01', '2024-03-31']]}, fields=['difference_posting_date'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "When were gains or losses posted for supplier-linked advances this quarter?",
            "fields": [
                "difference_posting_date"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'difference_posting_date': ['between', ['2024-01-01', '2024-03-31']]}, fields=['difference_posting_date'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What reference exchange rates were set for entries linked to Purchase Orders?",
            "fields": [
                "ref_exchange_rate",
                "reference_type"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'reference_type': 'Purchase Order'}, fields=['ref_exchange_rate'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Show reference exchange rates used in supplier prepayments from March 2024.",
            "fields": [
                "ref_exchange_rate"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'posting_date': ['between', ['2024-03-01', '2024-03-31']]}, fields=['ref_exchange_rate'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List the exchange rates used for supplier 'Zantrix Global'.",
            "fields": [
                "ref_exchange_rate",
                "supplier"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'Zantrix Global'}, fields=['ref_exchange_rate'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Show entries that applied an exchange rate greater than 3.5.",
            "fields": [
                "ref_exchange_rate"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'ref_exchange_rate': ['>', 3.5] }, fields=['ref_exchange_rate'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Which advances had exchange gain/loss exceeding 500?",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'exchange_gain_loss': ['>', 500] }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Find the reference name for the advance entry labeled 'ADV-1042'.",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-1042'}, 'reference_name')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Which documents have been referenced in supplier advances posted after May 1st, 2024?",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'posting_date': ['>', '2024-05-01']}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List reference names of all advances related to 'Tech Parts Co'.",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'Tech Parts Co'}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List all advance entries referencing document PINV-8743.",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'reference_name': 'PINV-8743'}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Which referenced documents were linked to advance payments created this year?",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'posting_date': ['between', ['2024-01-01', '2024-12-31']]}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Retrieve reference names for all advances made to 'Gulf Paper Traders'.",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'Gulf Paper Traders'}, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Find the latest advance entry and its linked reference document.",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', fields=['reference_name'], order_by='posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Which reference documents received advance payments above QAR 20,000?",
            "fields": [
                "reference_name",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'advance_amount': ['>', 20000] }, fields=['reference_name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Are there any advances referencing document ID PINV-10001?",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.db.exists('Purchase Invoice Advance', {'reference_name': 'PINV-10001'})"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "How many unique reference documents were linked in March 2024?",
            "fields": [
                "reference_name"
            ]
        },
        "output": "frappe.db.count('Purchase Invoice Advance', {'posting_date': ['between', ['2024-03-01', '2024-03-31']]})"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What remarks were added to advance entry ADV-5612?",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-5612'}, 'remarks')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Fetch remarks where the allocated amount is less than QAR 2000.",
            "fields": [
                "remarks",
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'allocated_amount': ['<', 2000]}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Show remarks attached to any advance for document PINV-9022.",
            "fields": [
                "remarks",
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'reference_name': 'PINV-9022'}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Get remarks from advances that recorded an exchange gain or loss.",
            "fields": [
                "remarks",
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'exchange_gain_loss': ['!=', 0]}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Are there remarks logged for any reference to 'Expense Claim'?",
            "fields": [
                "remarks",
                "reference_type"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'reference_type': 'Expense Claim'}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Which row number is linked to advance entry ADV-11007?",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-11007'}, 'reference_row')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Fetch the reference row values for all advance payments related to supplier 'Silverline Traders'.",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'Silverline Traders'}, fields=['reference_row'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Get the reference row from the latest advance entry made by 'SpeedChem Supplies'.",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'SpeedChem Supplies'}, fields=['reference_row'], order_by='posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What are the reference row numbers for all advances posted in March 2024?",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'posting_date': ['between', ['2024-03-01', '2024-03-31']]}, fields=['reference_row'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Which reference rows are associated with entries having an advance amount above QAR 8,000?",
            "fields": [
                "reference_row",
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'advance_amount': ['>', 8000] }, fields=['reference_row'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Find out which reference row entry corresponds to advance number ADV-8802.",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-8802'}, 'reference_row')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Do we have any advance records linked to reference row number 3?",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.db.exists('Purchase Invoice Advance', {'reference_row': 3})"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Check which reference rows are linked to the document ID PINV-2089.",
            "fields": [
                "reference_row",
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'reference_name': 'PINV-2089'}, fields=['reference_row'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "For entries referencing the document type 'Purchase Invoice', what are their row numbers?",
            "fields": [
                "reference_row",
                "reference_type"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'reference_type': 'Purchase Invoice'}, fields=['reference_row'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What is the row number linked to advance PINVADV-2091?",
            "fields": [
                "reference_row"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'PINVADV-2091'}, 'reference_row')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List advance entries with amounts greater than QAR 8000.",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'advance_amount': ['>', 8000] }, fields=['name', 'advance_amount'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Get the advance amount recorded for entry ADV-7340.",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-7340'}, 'advance_amount')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Fetch all advance entries with an amount of QAR 5000.",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'advance_amount': 5000}, fields=['name', 'advance_amount'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Check if there's any advance paid more than QAR 15000.",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.db.exists('Purchase Invoice Advance', {'advance_amount': ['>', 15000]})"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Get the advance amount for the latest entry from Al Hayat Supplies.",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'Al Hayat Supplies'}, fields=['advance_amount'], order_by='posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "How much was advanced in entry ADV-4091?",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-4091'}, 'advance_amount')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List advance amounts greater than 5000 QAR.",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'advance_amount': ['>', 5000]}, fields=['name', 'advance_amount'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What remarks were added to advance entry ADV-5612?",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-5612'}, 'remarks')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Show all remarks recorded for advances made to 'Bright Supplies Co.'.",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'Bright Supplies Co.'}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What is the total advance value logged for supplier voucher PINV-1445?",
            "fields": [
                "advance_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'reference_name': 'PINV-1445'}, fields=['advance_amount'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Get all advance entries where amount is not equal to the allocated amount.",
            "fields": [
                "advance_amount",
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'advance_amount': ['!=', 'allocated_amount']}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List the advance amount for supplier 'Elite Procurement Co.' from last week.",
            "fields": [
                "advance_amount",
                "supplier"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'supplier': 'Elite Procurement Co.', 'posting_date': ['between', ['2024-04-01', '2024-04-07']]}, fields=['advance_amount'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "How much of the advance was allocated for PINV-00942?",
            "fields": [
                "allocated_amount",
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'reference_name': 'PINV-00942'}, fields=['allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What is the allocated amount for the latest advance entry?",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', fields=['allocated_amount'], order_by='posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What amount has been allocated from advance entry ADV-3024?",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-3024'}, 'allocated_amount')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Show me the allocated amounts for all supplier advances.",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', fields=['allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List allocation amounts for advance payments over QAR 5000.",
            "fields": [
                "advance_amount",
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'advance_amount': ['>', 5000] }, fields=['allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Find all advances with zero allocated amount.",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'allocated_amount': 0 }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Check allocated amounts from March 2024 advances.",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'posting_date': ['between', ['2024-03-01', '2024-03-31']] }, fields=['allocated_amount'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Retrieve allocated amounts from the latest five entries.",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', fields=['allocated_amount'], order_by='posting_date desc', limit_page_length=5)"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Which entries have allocations above QAR 8,000?",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'allocated_amount': ['>', 8000] }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Tell me the allocated amount for entry ADV-2040.",
            "fields": [
                "allocated_amount"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-2040'}, 'allocated_amount')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Can you retrieve the comment added for advance entry ADV-2091?",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-2091'}, 'remarks')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "What is the exchange gain or loss recorded for advance ADV-5001?",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.db.get_value('Purchase Invoice Advance', {'name': 'ADV-5001'}, 'exchange_gain_loss')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List exchange gain/loss amounts for all advance entries posted this year.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'posting_date': ['between', ['2024-01-01', '2024-12-31']] }, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Show the exchange gain or loss for all advances made to supplier 'Delta Exports'.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'supplier': 'Delta Exports' }, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Get all advances where exchange gain or loss was recorded above QAR 100.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'exchange_gain_loss': ['>', 100] }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Retrieve the exchange gain or loss amount from the latest supplier advance.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', fields=['exchange_gain_loss'], order_by='posting_date desc', limit_page_length=1)"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Which advance entries had no exchange difference recorded?",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'exchange_gain_loss': 0 }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Find the exchange differences for all advances linked to invoice PINV-9932.",
            "fields": [
                "exchange_gain_loss",
                "reference_name"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={ 'reference_name': 'PINV-9932' }, fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List exchange gain/loss amounts by supplier across all advances.",
            "fields": [
                "exchange_gain_loss"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', fields=['exchange_gain_loss'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "List all comments or notes on advances posted in February 2024.",
            "fields": [
                "remarks"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'posting_date': ['between', ['2024-02-01', '2024-02-29']]}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Purchase Invoice Advance",
            "question": "Retrieve remarks associated with supplier prepayments where allocated amount exceeds QAR 5000.",
            "fields": [
                "remarks",
                "allocated_amount"
            ]
        },
        "output": "frappe.get_all('Purchase Invoice Advance', filters={'allocated_amount': ['>', 5000]}, fields=['remarks'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Can you retrieve the finance book for the asset tagged as AF-7820?",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-7820'}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which finance book does asset AF-5620 belong to?",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-5620'}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find the finance book managing depreciation for asset ID AF-7854.",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-7854'}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve the finance book associated with asset AF-9991.",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-9991'}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which finance book tracks assets that follow straight-line depreciation?",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_method': 'Straight Line'}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "List all finance books that support daily prorata-based depreciation.",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'daily_prorata_based': 1}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which finance book is assigned to asset ID AF-9285?",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-9285'}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Under which finance book is asset AF-1023 recorded?",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-1023'}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What finance book is currently tracking depreciation for asset AF-2034?",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-2034'}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Show me the finance book linked to asset AF-3321.",
            "fields": [
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-3321'}, fields=['finance_book'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Can you find the depreciation method for asset AF-2048?",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-2048'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What depreciation method is applied for asset AF-5623?",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-5623'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve depreciation method used in asset AF-9991.",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-9991'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Can you find the depreciation method for asset AF-2048?",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-2048'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What depreciation method is applied for asset AF-5623?",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-5623'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve depreciation method used in asset AF-9991.",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-9991'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which depreciation method applies to high-value equipment?",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_type': 'High Value'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve depreciation method for leased machinery.",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_type': 'Leased'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find depreciation method best suited for assets with unpredictable usage.",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_usage': 'Unpredictable'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve depreciation method for long-life factory equipment.",
            "fields": [
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_category': 'Manufacturing Equipment'}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How many depreciation cycles are planned for asset AF-1023?",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-1023'}, fields=['total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find the total number of depreciation entries planned for asset AF-7854.",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-7854'}, fields=['total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How many planned depreciation cycles exist for assets acquired in 2023?",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'acquisition_year': '2023'}, fields=['total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How many depreciation cycles are planned for leased equipment?",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_type': 'Leased'}, fields=['total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve the total depreciation cycles planned for asset AF-2034.",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-2034'}, fields=['total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Show me the planned depreciation cycle count for asset AF-5620.",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-5620'}, fields=['total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which assets have the highest number of planned depreciation cycles?",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', order_by='total_number_of_depreciations desc', fields=['name', 'total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve the total planned depreciation cycles for high-value assets.",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_category': 'High Value'}, fields=['total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What’s the planned depreciation cycle count for assets with salvage value above 50%?",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'salvage_value_percentage': {'>' : '50'}}, fields=['total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find planned depreciation cycles for assets that follow monthly depreciation frequency.",
            "fields": [
                "total_number_of_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'frequency_of_depreciation': 'Monthly'}, fields=['total_number_of_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How many booked depreciation entries exist for asset AF-1023?",
            "fields": [
                "total_number_of_booked_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-1023'}, fields=['total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve booked depreciation cycles for asset AF-7854.",
            "fields": [
                "total_number_of_booked_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-7854'}, fields=['total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How many booked depreciation cycles exist for assets with a depreciation start date in 2023?",
            "fields": [
                "total_number_of_booked_depreciations",
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_start_date': {'>=': '2023-01-01', '<=': '2023-12-31'}}, fields=['total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve the number of booked depreciation entries for leased equipment.",
            "fields": [
                "total_number_of_booked_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_type': 'Leased'}, fields=['total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Show me the booked depreciation cycles for asset AF-2034.",
            "fields": [
                "total_number_of_booked_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-2034'}, fields=['total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find the booked depreciation cycle count for asset AF-5620.",
            "fields": [
                "total_number_of_booked_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-5620'}, fields=['total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which assets have the highest number of booked depreciation cycles?",
            "fields": [
                "total_number_of_booked_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', order_by='total_number_of_booked_depreciations desc', fields=['name', 'total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve booked depreciation cycles for assets with high expected value after useful life.",
            "fields": [
                "total_number_of_booked_depreciations",
                "expected_value_after_useful_life"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'expected_value_after_useful_life': {'>': 'HIGH_VALUE_THRESHOLD'}}, fields=['total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What’s the booked depreciation cycle count for assets with salvage value above 50%?",
            "fields": [
                "total_number_of_booked_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'salvage_value_percentage': {'>' : '50'}}, fields=['total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find booked depreciation cycles for assets that follow monthly depreciation frequency.",
            "fields": [
                "total_number_of_booked_depreciations"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'frequency_of_depreciation': 'Monthly'}, fields=['total_number_of_booked_depreciations'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Is asset AF-1023 using daily prorata-based depreciation?",
            "fields": [
                "daily_prorata_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-1023'}, fields=['daily_prorata_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve depreciation setting for asset AF-7854—does it follow daily prorata?",
            "fields": [
                "daily_prorata_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-7854'}, fields=['daily_prorata_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How does daily prorata-based depreciation affect asset AF-2034?",
            "fields": [
                "daily_prorata_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-2034'}, fields=['daily_prorata_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Does asset AF-9991 follow a daily prorata-based calculation?",
            "fields": [
                "daily_prorata_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-9991'}, fields=['daily_prorata_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which assets are set to use daily prorata-based depreciation?",
            "fields": [
                "daily_prorata_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'daily_prorata_based': 1}, fields=['name', 'daily_prorata_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve assets applying daily prorata depreciation for leased equipment.",
            "fields": [
                "daily_prorata_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_type': 'Leased', 'daily_prorata_based': 1}, fields=['name', 'daily_prorata_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Are high-value assets set to daily prorata-based depreciation?",
            "fields": [
                "daily_prorata_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_category': 'High Value', 'daily_prorata_based': 1}, fields=['name', 'daily_prorata_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What depreciation settings allow both daily prorata and monthly frequency?",
            "fields": [
                "daily_prorata_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'daily_prorata_based': 1, 'frequency_of_depreciation': 'Monthly'}, fields=['name', 'daily_prorata_based', 'frequency_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find daily prorata depreciation settings for assets acquired before 2020.",
            "fields": [
                "daily_prorata_based",
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_start_date': {'<': '2020-01-01'}, 'daily_prorata_based': 1}, fields=['name', 'daily_prorata_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Identify assets that switched from non-daily to daily prorata-based depreciation.",
            "fields": [
                "daily_prorata_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'daily_prorata_based': 1, 'previous_depreciation_method': {'!=': 'Daily'}}, fields=['name', 'daily_prorata_based', 'previous_depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Does asset AF-1023 use shift-based depreciation?",
            "fields": [
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-1023'}, fields=['shift_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which assets follow shift-based depreciation?",
            "fields": [
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'shift_based': 1}, fields=['name', 'shift_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve shift-based depreciation setting for asset AF-7854.",
            "fields": [
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-7854'}, fields=['shift_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Are leased assets set to shift-based depreciation?",
            "fields": [
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_type': 'Leased', 'shift_based': 1}, fields=['name', 'shift_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which depreciation method is best for shift-based assets?",
            "fields": [
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'shift_based': 1}, fields=['depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How does shift-based depreciation impact 24/7 operational equipment?",
            "fields": [
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'operational_hours': '24/7', 'shift_based': 1}, fields=['name', 'shift_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Identify assets with shift-based depreciation activated.",
            "fields": [
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'shift_based': 1}, fields=['name', 'shift_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve shift-based depreciation settings for high-value assets.",
            "fields": [
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_category': 'High Value', 'shift_based': 1}, fields=['name', 'shift_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find shift-based depreciation settings for assets acquired before 2020.",
            "fields": [
                "shift_based",
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_start_date': {'<': '2020-01-01'}, 'shift_based': 1}, fields=['name', 'shift_based'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Identify assets that switched from non-shift-based to shift-based depreciation.",
            "fields": [
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'shift_based': 1, 'previous_depreciation_method': {'!=': 'Shift-Based'}}, fields=['name', 'shift_based', 'previous_depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How frequently is depreciation recorded for asset AF-1023?",
            "fields": [
                "frequency_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-1023'}, fields=['frequency_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve depreciation frequency for asset AF-7854.",
            "fields": [
                "frequency_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-7854'}, fields=['frequency_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What depreciation frequency applies to assets with an expected value after useful life greater than $100,000?",
            "fields": [
                "frequency_of_depreciation",
                "expected_value_after_useful_life"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'expected_value_after_useful_life': {'>': 100000}}, fields=['frequency_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How often is depreciation recorded for leased equipment?",
            "fields": [
                "frequency_of_depreciation",
                "shift_based"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'shift_based': 1}, fields=['name', 'frequency_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Identify assets that use monthly depreciation frequency.",
            "fields": [
                "frequency_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'frequency_of_depreciation': 'Monthly'}, fields=['name', 'frequency_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "When does depreciation start for asset AF-1023?",
            "fields": [
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-1023'}, fields=['depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find the depreciation start date for asset AF-7854.",
            "fields": [
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-7854'}, fields=['depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What is the depreciation start date for leased equipment?",
            "fields": [
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'asset_type': 'Leased'}, fields=['depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve depreciation start dates for assets acquired before 2020.",
            "fields": [
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'acquisition_year': {'<': '2020'}}, fields=['depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Identify assets whose depreciation starts in 2023.",
            "fields": [
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_start_date': {'>=': '2023-01-01'}}, fields=['name', 'depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What is the depreciation start date for assets with an expected value after useful life greater than $100,000?",
            "fields": [
                "depreciation_start_date",
                "expected_value_after_useful_life"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'expected_value_after_useful_life': {'>': 100000}}, fields=['name', 'depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Does asset AF-9991 have a scheduled depreciation start date?",
            "fields": [
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-9991'}, fields=['depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find depreciation start dates for assets with salvage value above 50%.",
            "fields": [
                "depreciation_start_date",
                "salvage_value_percentage"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'salvage_value_percentage': {'>': 50}}, fields=['depreciation_start_date', 'salvage_value_percentage'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve depreciation start dates for assets switching from monthly to quarterly frequency.",
            "fields": [
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'frequency_of_depreciation': 'Quarterly', 'previous_frequency': 'Monthly'}, fields=['name', 'depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Identify assets that switched from an undefined to a fixed depreciation start date.",
            "fields": [
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_start_date': {'!=': None}}, fields=['name', 'depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What is the salvage value percentage for asset record AF-2024-003?",
            "fields": [
                "salvage_value_percentage"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AF-2024-003'}, fields=['salvage_value_percentage'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Show the salvage value percentages for all asset finance books.",
            "fields": [
                "salvage_value_percentage"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', fields=['salvage_value_percentage'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which assets have a salvage value percentage above 20?",
            "fields": [
                "salvage_value_percentage"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={ 'salvage_value_percentage': ['>', 20] }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "List assets where salvage value is 0%.",
            "fields": [
                "salvage_value_percentage"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'salvage_value_percentage': 0}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Get salvage value percentages for assets that use Straight Line depreciation.",
            "fields": [
                "salvage_value_percentage",
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_method': 'Straight Line'}, fields=['salvage_value_percentage'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which depreciation entries have salvage value between 10 and 15 percent?",
            "fields": [
                "salvage_value_percentage"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={ 'salvage_value_percentage': ['between', [10, 15]] }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find all assets whose retained value percentage is not zero.",
            "fields": [
                "salvage_value_percentage"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={ 'salvage_value_percentage': ['!=', 0] }, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Show salvage percentages for assets starting depreciation in 2024.",
            "fields": [
                "salvage_value_percentage",
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={ 'depreciation_start_date': ['between', ['2024-01-01', '2024-12-31']] }, fields=['salvage_value_percentage'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve the salvage value percentage for all assets using Reducing Balance method.",
            "fields": [
                "salvage_value_percentage",
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_method': 'Reducing Balance'}, fields=['salvage_value_percentage'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Give me the salvage value percent of assets that depreciate monthly.",
            "fields": [
                "salvage_value_percentage",
                "frequency_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'frequency_of_depreciation': 'Monthly'}, fields=['salvage_value_percentage'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What is the depreciation rate defined for asset AFB-003?",
            "fields": [
                "rate_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AFB-003'}, fields=['rate_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "List the depreciation rate and method used for straight line assets.",
            "fields": [
                "rate_of_depreciation",
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_method': 'Straight Line'}, fields=['rate_of_depreciation', 'depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find all assets with an annual depreciation rate above 10%.",
            "fields": [
                "rate_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={\"rate_of_depreciation\": [\">\", 10]}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What is the depreciation rate and start date for asset AFB-104?",
            "fields": [
                "rate_of_depreciation",
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AFB-104'}, fields=['rate_of_depreciation', 'depreciation_start_date'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which records show quarterly depreciation and more than 5% rate?",
            "fields": [
                "rate_of_depreciation",
                "frequency_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'frequency_of_depreciation': 'Quarterly', 'rate_of_depreciation': [\">\", 5]}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Give depreciation rate and expected value after use for AFB-212.",
            "fields": [
                "rate_of_depreciation",
                "expected_value_after_useful_life"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AFB-212'}, fields=['rate_of_depreciation', 'expected_value_after_useful_life'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Show depreciation rate for assets with salvage value above 15%.",
            "fields": [
                "rate_of_depreciation",
                "salvage_value_percentage"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={\"salvage_value_percentage\": [\">\", 15]}, fields=['rate_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What is the depreciation rate for assets following Reducing Balance method?",
            "fields": [
                "rate_of_depreciation",
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_method': 'Reducing Balance'}, fields=['rate_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "List depreciation rates for assets posted after January 1, 2024.",
            "fields": [
                "rate_of_depreciation",
                "depreciation_start_date"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={\"depreciation_start_date\": [\">\", \"2024-01-01\"]}, fields=['rate_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find assets with over 20% depreciation rate and monthly schedule.",
            "fields": [
                "rate_of_depreciation",
                "frequency_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'rate_of_depreciation': [\">\", 20], 'frequency_of_depreciation': 'Monthly'}, fields=['name'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What is the estimated value of the asset after its useful life ends?",
            "fields": [
                "expected_value_after_useful_life"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={{}}, fields=['expected_value_after_useful_life'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How much will be left of the asset’s value once it's fully depreciated?",
            "fields": [
                "expected_value_after_useful_life"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={{}}, fields=['expected_value_after_useful_life'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Retrieve the expected post-depreciation value for asset AFB-2024-004.",
            "fields": [
                "expected_value_after_useful_life",
                "finance_book"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'finance_book': 'AFB-2024-004'}, fields=['expected_value_after_useful_life'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Show the expected value and depreciation frequency for AFB-204.",
            "fields": [
                "expected_value_after_useful_life",
                "frequency_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'finance_book': 'AFB-204'}, fields=['expected_value_after_useful_life', 'frequency_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What will be the final estimated asset value and the annual depreciation rate for asset AFB-775?",
            "fields": [
                "expected_value_after_useful_life",
                "rate_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'finance_book': 'AFB-775'}, fields=['expected_value_after_useful_life', 'rate_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Give me the expected value and the depreciation method for AFB-001.",
            "fields": [
                "expected_value_after_useful_life",
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'finance_book': 'AFB-001'}, fields=['expected_value_after_useful_life', 'depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find the salvage percent and expected post-life value for AFB-122.",
            "fields": [
                "expected_value_after_useful_life",
                "salvage_value_percentage"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'finance_book': 'AFB-122'}, fields=['expected_value_after_useful_life', 'salvage_value_percentage'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What is the expected value after useful life and how frequently is depreciation applied?",
            "fields": [
                "expected_value_after_useful_life",
                "frequency_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={{}}, fields=['expected_value_after_useful_life', 'frequency_of_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Give details of depreciation method and expected asset value after use for AFB-091.",
            "fields": [
                "expected_value_after_useful_life",
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'finance_book': 'AFB-091'}, fields=['expected_value_after_useful_life', 'depreciation_method'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Fetch the future asset value and value after depreciation for AFB-995.",
            "fields": [
                "expected_value_after_useful_life",
                "value_after_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'finance_book': 'AFB-995'}, fields=['expected_value_after_useful_life', 'value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What is the final value of the asset after depreciation ends?",
            "fields": [
                "value_after_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Show the post-depreciation value for asset AFB-4021.",
            "fields": [
                "value_after_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AFB-4021'}, fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Give the asset’s value after all depreciation has been posted.",
            "fields": [
                "value_after_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={}, fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What field shows the value left after all depreciation cycles?",
            "fields": [
                "total_number_of_depreciations",
                "value_after_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'total_number_of_depreciations': ['>', 0]}, fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Find the end-of-life value of the asset using straight line depreciation.",
            "fields": [
                "value_after_depreciation",
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_method': 'Straight Line'}, fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "For asset FIN-8902, what’s the remaining value after monthly depreciation?",
            "fields": [
                "value_after_depreciation",
                "frequency_of_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'FIN-8902', 'frequency_of_depreciation': 'Monthly'}, fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "How do we determine what value is left after full depreciation?",
            "fields": [
                "value_after_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Show value of asset AFB-999 after its useful life ends.",
            "fields": [
                "value_after_depreciation",
                "expected_value_after_useful_life"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'name': 'AFB-999'}, fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "What value remains after depreciation for assets with reducing balance method?",
            "fields": [
                "value_after_depreciation",
                "depreciation_method"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', filters={'depreciation_method': 'Reducing Balance'}, fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Asset Finance Book",
            "question": "Which field indicates the final worth of the asset post-depreciation?",
            "fields": [
                "value_after_depreciation"
            ]
        },
        "output": "frappe.get_all('Asset Finance Book', fields=['value_after_depreciation'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "What is the series pattern used to generate the ID for this blanket order?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "Identify the naming convention used to assign blanket order numbers.",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "Which field defines the prefix or pattern for auto-generating the agreement ID?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "What value structure is used to auto-assign blanket order numbers at creation?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "When a new blanket order is created, which field determines how its ID is generated?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "Show the naming format logic applied to blanket order IDs in ABC Pvt Ltd.",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={'company': 'ABC Pvt Ltd'}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "Which field ensures sequential numbering of long-term supplier agreements?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={'blanket_order_type': 'Supplier'}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "What defines how the order ID is automatically structured and incremented?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "In the case of multiple companies, which field helps standardize the ID format for agreements?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={}, fields=['naming_series'])"
    },
    {
        "input": {
            "doctype": "Blanket Order",
            "question": "How does the system decide what prefix or series to assign to a new agreement record?",
            "fields": [
                "naming_series"
            ]
        },
        "output": "frappe.get_all('Blanket Order', filters={}, fields=['naming_series'])"
    }
]