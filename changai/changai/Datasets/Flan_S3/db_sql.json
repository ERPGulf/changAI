[
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers do we have?",
            "fields": [
                "name"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT]')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created last month?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE MONTH(posting_date) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "How much of item 'Mango Juice' was sold this week?",
            "fields": [
                "posting_date",
                "items"
            ]
        },
        "output": "frappe.db.sql(\"\"\"SELECT SUM(item.qty) FROM [BT]tabDelivery Note[BT] dn JOIN [BT]tabDelivery Note Item[BT] item ON item.parent = dn.name WHERE item.item_name = 'Mango Juice' AND WEEK(dn.posting_date) = WEEK(CURDATE()) AND YEAR(dn.posting_date) = YEAR(CURDATE())\"\"\")"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which customer purchased the most last week?",
            "fields": [
                "customer",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql(\"\"\"SELECT customer, SUM(grand_total) as total FROM [BT]tabSales Invoice[BT] WHERE WEEK(posting_date) = WEEK(CURDATE() - INTERVAL 7 DAY) AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY total DESC LIMIT 1\"\"\")"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many sales returns happened this quarter?",
            "fields": [
                "posting_date",
                "is_return"
            ]
        },
        "output": "frappe.db.sql(\"\"\"SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE is_return = 1 AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())\"\"\")"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created today?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE posting_date = CURDATE()')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which territory has the most customers?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) as total FROM [BT]tabCustomer[BT] GROUP BY territory ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the total sales amount this month?",
            "fields": [
                "transaction_date",
                "grand_total"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Order[BT] WHERE MONTH(transaction_date) = MONTH(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "How many delivery notes were issued last week?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabDelivery Note[BT] WHERE WEEK(posting_date) = WEEK(CURDATE() - INTERVAL 7 DAY) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the highest invoice amount this year?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MAX(grand_total) FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Partner",
            "question": "Which sales partner has the highest commission rate?",
            "fields": [
                "partner_name",
                "commission_rate"
            ]
        },
        "output": "frappe.db.sql('SELECT partner_name, commission_rate FROM [BT]tabSales Partner[BT] ORDER BY commission_rate DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "Which item has the highest valuation rate?",
            "fields": [
                "item_name",
                "valuation_rate"
            ]
        },
        "output": "frappe.db.sql('SELECT item_name, valuation_rate FROM [BT]tabItem[BT] ORDER BY valuation_rate DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were made yesterday?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE posting_date = CURDATE() - INTERVAL 1 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total grand total of all invoices issued last quarter?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE() - INTERVAL 1 QUARTER) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many active stock items do we have?",
            "fields": [
                "is_stock_item",
                "disabled"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_stock_item = 1 AND disabled = 0')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers belong to the 'Retail' customer group?",
            "fields": [
                "customer_group"
            ]
        },
        "output": "frappe.db.sql(\"SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE customer_group = 'Retail'\")"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the average invoice amount this month?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(grand_total) FROM [BT]tabSales Invoice[BT] WHERE MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Quotation",
            "question": "How many quotations were created this week?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabQuotation[BT] WHERE WEEK(transaction_date) = WEEK(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were marked as return invoices this year?",
            "fields": [
                "is_return",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE is_return = 1 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "What is the total quantity delivered last month?",
            "fields": [
                "total_qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(total_qty) FROM [BT]tabDelivery Note[BT] WHERE MONTH(posting_date) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers are assigned to each territory?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) as total FROM [BT]tabCustomer[BT] GROUP BY territory')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many sales orders were placed last week?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE WEEK(transaction_date) = WEEK(CURDATE() - INTERVAL 7 DAY) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "Which item was delivered the most this year?",
            "fields": [
                "posting_date",
                "items"
            ]
        },
        "output": "frappe.db.sql(\"\"\"SELECT item.item_name, SUM(item.qty) as total_qty FROM [BT]tabDelivery Note[BT] dn JOIN [BT]tabDelivery Note Item[BT] item ON item.parent = dn.name WHERE YEAR(dn.posting_date) = YEAR(CURDATE()) GROUP BY item.item_name ORDER BY total_qty DESC LIMIT 1\"\"\")"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which month had the highest number of invoices this year?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MONTH(posting_date) as month, COUNT(*) as total FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY MONTH(posting_date) ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Quotation",
            "question": "How many quotations are still active?",
            "fields": [
                "status"
            ]
        },
        "output": "frappe.db.sql(\"SELECT COUNT(*) FROM [BT]tabQuotation[BT] WHERE status = 'Open'\")"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers are linked to internal companies?",
            "fields": [
                "is_internal_customer"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE is_internal_customer = 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many disabled items are there in the system?",
            "fields": [
                "disabled"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE disabled = 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total grand total of invoices issued today?",
            "fields": [
                "posting_date",
                "grand_total"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Invoice[BT] WHERE posting_date = CURDATE()')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many sales orders are currently in Draft status?",
            "fields": [
                "docstatus"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE docstatus = 0')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were issued in the first quarter?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = 1 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which customer has the highest total invoiced value this year?",
            "fields": [
                "customer",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, SUM(grand_total) as total FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are marked as sales items?",
            "fields": [
                "is_sales_item"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_sales_item = 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which customer group has the most customers?",
            "fields": [
                "customer_group"
            ]
        },
        "output": "frappe.db.sql('SELECT customer_group, COUNT(*) as total FROM [BT]tabCustomer[BT] GROUP BY customer_group ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Quotation",
            "question": "How many quotations were created in the last 7 days?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabQuotation[BT] WHERE transaction_date >= CURDATE() - INTERVAL 7 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total outstanding amount from all invoices?",
            "fields": [
                "outstanding_amount"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(outstanding_amount) FROM [BT]tabSales Invoice[BT]')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which company has issued the most invoices?",
            "fields": [
                "company"
            ]
        },
        "output": "frappe.db.sql('SELECT company, COUNT(*) as total FROM [BT]tabSales Invoice[BT] GROUP BY company ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the total quantity ordered this year?",
            "fields": [
                "total_qty",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(total_qty) FROM [BT]tabSales Order[BT] WHERE YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices are in submitted state?",
            "fields": [
                "docstatus"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE docstatus = 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which customer has placed the highest number of sales orders?",
            "fields": [
                "customer"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, COUNT(*) as total FROM [BT]tabSales Order[BT] GROUP BY customer ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total revenue from POS invoices this year?",
            "fields": [
                "is_pos",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Invoice[BT] WHERE is_pos = 1 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many orders have not been fully delivered yet?",
            "fields": [
                "per_delivered"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE per_delivered < 100')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which territory has the fewest customers?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) AS total FROM [BT]tabCustomer[BT] GROUP BY territory ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were canceled in the last 90 days?",
            "fields": [
                "docstatus",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE docstatus = 2 AND posting_date >= CURDATE() - INTERVAL 90 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the average quantity per item in orders this quarter?",
            "fields": [
                "qty",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(qty), 2) FROM [BT]tabSales Order Item[BT] soi JOIN [BT]tabSales Order[BT] so ON soi.parent = so.name WHERE QUARTER(so.transaction_date) = QUARTER(CURDATE()) AND YEAR(so.transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items were created in the last 30 days?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE creation >= CURDATE() - INTERVAL 30 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which item has the highest average selling price this year?",
            "fields": [
                "item_code",
                "rate",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT sii.item_code, ROUND(AVG(sii.rate), 2) AS avg_price FROM [BT]tabSales Invoice Item[BT] sii JOIN [BT]tabSales Invoice[BT] si ON sii.parent = si.name WHERE YEAR(si.posting_date) = YEAR(CURDATE()) GROUP BY sii.item_code ORDER BY avg_price DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which month had the most sales orders this year?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MONTH(transaction_date) AS month, COUNT(*) AS total FROM [BT]tabSales Order[BT] WHERE YEAR(transaction_date) = YEAR(CURDATE()) GROUP BY month ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers have not placed any orders this year?",
            "fields": [
                "name"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] c WHERE NOT EXISTS (SELECT 1 FROM [BT]tabSales Order[BT] so WHERE so.customer = c.name AND YEAR(so.transaction_date) = YEAR(CURDATE()))')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the highest tax amount charged on any invoice this year?",
            "fields": [
                "total_taxes_and_charges",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MAX(total_taxes_and_charges) FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were paid in full this month?",
            "fields": [
                "posting_date",
                "outstanding_amount"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE outstanding_amount = 0 AND MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are disabled and not for sale?",
            "fields": [
                "disabled",
                "is_sales_item"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE disabled = 1 AND is_sales_item = 0')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers have loyalty programs assigned?",
            "fields": [
                "loyalty_program"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE loyalty_program IS NOT NULL AND loyalty_program != \"\"')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total discount amount given this week?",
            "fields": [
                "discount_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(discount_amount) FROM [BT]tabSales Invoice[BT] WHERE WEEK(posting_date) = WEEK(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "Which company delivered the most quantity last quarter?",
            "fields": [
                "company",
                "total_qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT company, SUM(total_qty) as total FROM [BT]tabDelivery Note[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE() - INTERVAL 1 QUARTER) AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY company ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many return invoices were created in the last 30 days?",
            "fields": [
                "is_return",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE is_return = 1 AND posting_date >= CURDATE() - INTERVAL 30 DAY')"
    },
    {
        "input": {
            "doctype": "Quotation",
            "question": "What is the total quoted amount this month?",
            "fields": [
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabQuotation[BT] WHERE MONTH(transaction_date) = MONTH(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items have valuation rate above 100?",
            "fields": [
                "valuation_rate"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE valuation_rate > 100')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the total number of sales orders that are fully billed?",
            "fields": [
                "per_billed"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE per_billed = 100')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which item generated the highest revenue this year?",
            "fields": [
                "items",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql(\"\"\"SELECT si_item.item_name, SUM(si.grand_total) as revenue FROM [BT]tabSales Invoice[BT] si JOIN [BT]tabSales Invoice Item[BT] si_item ON si.name = si_item.parent WHERE YEAR(si.posting_date) = YEAR(CURDATE()) GROUP BY si_item.item_name ORDER BY revenue DESC LIMIT 1\"\"\")"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "How many deliveries were done for internal customers this quarter?",
            "fields": [
                "posting_date",
                "is_internal_customer"
            ]
        },
        "output": "frappe.db.sql(\"\"\"SELECT COUNT(*) FROM [BT]tabDelivery Note[BT] WHERE is_internal_customer = 1 AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())\"\"\")"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are tracked by serial numbers?",
            "fields": [
                "has_serial_no"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE has_serial_no = 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers have no tax ID specified?",
            "fields": [
                "tax_id"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE tax_id IS NULL OR tax_id = \"\"')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total tax charged this week?",
            "fields": [
                "total_taxes_and_charges",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(total_taxes_and_charges) FROM [BT]tabSales Invoice[BT] WHERE WEEK(posting_date) = WEEK(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "Which customer received the most deliveries last month?",
            "fields": [
                "customer",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, COUNT(*) as total FROM [BT]tabDelivery Note[BT] WHERE MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY customer ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Quotation",
            "question": "How many quotations were lost this year?",
            "fields": [
                "status",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabQuotation[BT] WHERE status = \"Lost\" AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which month had the highest total invoice amount this year?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MONTH(posting_date) as month, SUM(grand_total) as total FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY MONTH(posting_date) ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items have batch tracking enabled?",
            "fields": [
                "has_batch_no"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE has_batch_no = 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers belong to the 'Wholesale' customer group?",
            "fields": [
                "customer_group"
            ]
        },
        "output": "frappe.db.sql(\"SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE customer_group = 'Wholesale'\")"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers do not have an assigned territory?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE territory IS NULL OR territory = \"\"')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the average order value this month?",
            "fields": [
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(grand_total) FROM [BT]tabSales Order[BT] WHERE MONTH(transaction_date) = MONTH(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Partner",
            "question": "How many sales partners have a commission rate above 10%?",
            "fields": [
                "commission_rate"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Partner[BT] WHERE commission_rate > 10')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created in the current financial quarter?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Quotation",
            "question": "What is the total number of quotations sent to customers in the last 10 days?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabQuotation[BT] WHERE transaction_date >= CURDATE() - INTERVAL 10 DAY')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items have warranty period specified?",
            "fields": [
                "warranty_period"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE warranty_period IS NOT NULL AND warranty_period != \"\"')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "Which territory received the most deliveries this year?",
            "fields": [
                "territory",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) as total FROM [BT]tabDelivery Note[BT] WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY territory ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many cash invoices were created today?",
            "fields": [
                "is_pos",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE is_pos = 1 AND posting_date = CURDATE()')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "Which item has the highest standard rate?",
            "fields": [
                "item_name",
                "standard_rate"
            ]
        },
        "output": "frappe.db.sql('SELECT item_name, standard_rate FROM [BT]tabItem[BT] ORDER BY standard_rate DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created this weekend (Saturday and Sunday)?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE WEEKDAY(posting_date) IN (5,6) AND YEAR(posting_date) = YEAR(CURDATE()) AND WEEK(posting_date) = WEEK(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created on the first day of this month?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE posting_date = DATE_FORMAT(CURDATE(), \"%Y-%m-01\")')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which customer has the longest name?",
            "fields": [
                "customer_name"
            ]
        },
        "output": "frappe.db.sql('SELECT customer_name FROM [BT]tabCustomer[BT] ORDER BY LENGTH(customer_name) DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many stock items allow negative stock?",
            "fields": [
                "is_stock_item",
                "allow_negative_stock"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_stock_item = 1 AND allow_negative_stock = 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which customer has the highest outstanding invoice balance?",
            "fields": [
                "customer",
                "outstanding_amount"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, SUM(outstanding_amount) as balance FROM [BT]tabSales Invoice[BT] GROUP BY customer ORDER BY balance DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many sales orders were placed between the 1st and 15th of this month?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE transaction_date BETWEEN DATE_FORMAT(CURDATE(), \"%Y-%m-01\") AND DATE_FORMAT(CURDATE(), \"%Y-%m-15\")')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "Which delivery note had the highest total amount last week?",
            "fields": [
                "name",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT name, grand_total FROM [BT]tabDelivery Note[BT] WHERE WEEK(posting_date) = WEEK(CURDATE() - INTERVAL 7 DAY) AND YEAR(posting_date) = YEAR(CURDATE()) ORDER BY grand_total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers were created this year?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE YEAR(creation) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which currency was used the most in invoices this quarter?",
            "fields": [
                "currency",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT currency, COUNT(*) as total FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY currency ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many service items do we have?",
            "fields": [
                "is_stock_item"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_stock_item = 0')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many sales orders have been partially billed?",
            "fields": [
                "per_billed"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE per_billed > 0 AND per_billed < 100')"
    },
    {
        "input": {
            "doctype": "Quotation",
            "question": "What is the total discount amount on quotations this year?",
            "fields": [
                "discount_amount",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(discount_amount) FROM [BT]tabQuotation[BT] WHERE YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many POS invoices were created last month?",
            "fields": [
                "is_pos",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE is_pos = 1 AND MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are linked to the 'Electronics' item group?",
            "fields": [
                "item_group"
            ]
        },
        "output": "frappe.db.sql(\"SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE item_group = 'Electronics'\")"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices have no discount applied?",
            "fields": [
                "discount_amount"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE discount_amount = 0')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers were created this year?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE YEAR(creation) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which currency was used the most in invoices this quarter?",
            "fields": [
                "currency",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT currency, COUNT(*) as total FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY currency ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many service items do we have?",
            "fields": [
                "is_stock_item"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_stock_item = 0')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many sales orders have been partially billed?",
            "fields": [
                "per_billed"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE per_billed > 0 AND per_billed < 100')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "What is the average delivery quantity this month?",
            "fields": [
                "total_qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(total_qty) FROM [BT]tabDelivery Note[BT] WHERE MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Partner",
            "question": "How many sales partners are linked to the Middle East territory?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql(\"SELECT COUNT(*) FROM [BT]tabSales Partner[BT] WHERE territory = 'Middle East'\")"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created on weekends this quarter?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE WEEKDAY(posting_date) IN (5,6) AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items have safety stock defined?",
            "fields": [
                "safety_stock"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE safety_stock IS NOT NULL AND safety_stock > 0')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which customer group has the fewest customers?",
            "fields": [
                "customer_group"
            ]
        },
        "output": "frappe.db.sql('SELECT customer_group, COUNT(*) as total FROM [BT]tabCustomer[BT] GROUP BY customer_group ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total invoiced amount in Q2 this year?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = 2 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were marked as overdue this month?",
            "fields": [
                "due_date",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE due_date < CURDATE() AND MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "Which item group has the highest number of items?",
            "fields": [
                "item_group"
            ]
        },
        "output": "frappe.db.sql('SELECT item_group, COUNT(*) as total FROM [BT]tabItem[BT] GROUP BY item_group ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the total number of fully billed sales orders?",
            "fields": [
                "per_billed"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE per_billed = 100')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which customer has the most unpaid invoices this year?",
            "fields": [
                "customer",
                "outstanding_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, COUNT(*) as unpaid FROM [BT]tabSales Invoice[BT] WHERE outstanding_amount > 0 AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY unpaid DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Quotation",
            "question": "How many quotations were created this weekend?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabQuotation[BT] WHERE WEEKDAY(transaction_date) IN (5,6) AND WEEK(transaction_date) = WEEK(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "How many deliveries were made last quarter?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabDelivery Note[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE() - INTERVAL 3 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 3 MONTH)')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are taxable?",
            "fields": [
                "taxes"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE EXISTS (SELECT 1 FROM [BT]tabItem Tax[BT] tax WHERE tax.parent = [BT]tabItem[BT].name)')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were made in foreign currencies this year?",
            "fields": [
                "currency",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE currency != \"USD\" AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers have 'Retail' in their name?",
            "fields": [
                "customer_name"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE customer_name LIKE \"%Retail%\"')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the highest invoice total recorded this year?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MAX(grand_total) FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the average invoice amount for this fiscal year?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(grand_total) FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which item has the highest total quantity sold through sales orders this quarter?",
            "fields": [
                "item_name",
                "qty",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT soi.item_name, SUM(soi.qty) as total_qty FROM [BT]tabSales Order Item[BT] soi JOIN [BT]tabSales Order[BT] so ON soi.parent = so.name WHERE QUARTER(so.transaction_date) = QUARTER(CURDATE()) AND YEAR(so.transaction_date) = YEAR(CURDATE()) GROUP BY soi.item_name ORDER BY total_qty DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the maximum discount amount given on a single invoice this month?",
            "fields": [
                "discount_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MAX(discount_amount) FROM [BT]tabSales Invoice[BT] WHERE MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "Which item has the highest standard rate among stock items?",
            "fields": [
                "item_name",
                "standard_rate",
                "is_stock_item"
            ]
        },
        "output": "frappe.db.sql('SELECT item_name, standard_rate FROM [BT]tabItem[BT] WHERE is_stock_item = 1 ORDER BY standard_rate DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total revenue generated from POS invoices last month?",
            "fields": [
                "is_pos",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Invoice[BT] WHERE is_pos = 1 AND MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many unique customers placed sales orders in the current quarter?",
            "fields": [
                "customer",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(DISTINCT customer) FROM [BT]tabSales Order[BT] WHERE QUARTER(transaction_date) = QUARTER(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which customer generated the highest total invoice amount this year?",
            "fields": [
                "customer",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, SUM(grand_total) as total FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created for 'Cash' mode of payment this week?",
            "fields": [
                "mode_of_payment",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql(\"SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE mode_of_payment = 'Cash' AND WEEK(posting_date) = WEEK(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())\")"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the average quantity per item sold this month?",
            "fields": [
                "qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(sii.qty) FROM [BT]tabSales Invoice Item[BT] sii JOIN [BT]tabSales Invoice[BT] si ON sii.parent = si.name WHERE MONTH(si.posting_date) = MONTH(CURDATE()) AND YEAR(si.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which customer placed the largest single sales order this year?",
            "fields": [
                "customer",
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, grand_total FROM [BT]tabSales Order[BT] WHERE YEAR(transaction_date) = YEAR(CURDATE()) ORDER BY grand_total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which day this month had the highest invoice count?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT posting_date, COUNT(*) as total FROM [BT]tabSales Invoice[BT] WHERE MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY posting_date ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "What is the average valuation rate of stock items?",
            "fields": [
                "valuation_rate",
                "is_stock_item"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(valuation_rate) FROM [BT]tabItem[BT] WHERE is_stock_item = 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many sales orders were fully delivered last quarter?",
            "fields": [
                "per_delivered",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE per_delivered = 100 AND QUARTER(transaction_date) = QUARTER(CURDATE() - INTERVAL 1 QUARTER) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which territory has the most customers?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) as total FROM [BT]tabCustomer[BT] GROUP BY territory ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What percentage of invoices this year are returns?",
            "fields": [
                "is_return",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(100.0 * SUM(CASE WHEN is_return = 1 THEN 1 ELSE 0 END)/COUNT(*), 2) FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the total amount of partially billed orders this month?",
            "fields": [
                "per_billed",
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Order[BT] WHERE per_billed > 0 AND per_billed < 100 AND MONTH(transaction_date) = MONTH(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are both stock items and have warranty period defined?",
            "fields": [
                "is_stock_item",
                "warranty_period"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_stock_item = 1 AND warranty_period > 0')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the minimum invoiced amount in the past 7 days?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MIN(grand_total) FROM [BT]tabSales Invoice[BT] WHERE posting_date >= CURDATE() - INTERVAL 7 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many orders this year exceeded 100,000 in value?",
            "fields": [
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE grand_total > 100000 AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers were created in the last 30 days?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE creation >= CURDATE() - INTERVAL 30 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What was the total tax amount on all invoices issued last month?",
            "fields": [
                "total_taxes_and_charges",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(total_taxes_and_charges) FROM [BT]tabSales Invoice[BT] WHERE MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which customer placed the most sales orders this year?",
            "fields": [
                "customer",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, COUNT(*) as total FROM [BT]tabSales Order[BT] WHERE YEAR(transaction_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices had a grand total greater than 50,000 this quarter?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE grand_total > 50000 AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the average delivery percentage of orders placed this month?",
            "fields": [
                "per_delivered",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(per_delivered) FROM [BT]tabSales Order[BT] WHERE MONTH(transaction_date) = MONTH(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the highest invoiced amount recorded so far this year?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MAX(grand_total) FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which customer group has the highest number of customers?",
            "fields": [
                "customer_group"
            ]
        },
        "output": "frappe.db.sql('SELECT customer_group, COUNT(*) as total FROM [BT]tabCustomer[BT] GROUP BY customer_group ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many orders are exactly 50% billed?",
            "fields": [
                "per_billed"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE per_billed = 50')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "What is the average weight per unit of all items?",
            "fields": [
                "weight_per_unit"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(weight_per_unit) FROM [BT]tabItem[BT]')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were posted on weekends in the past month?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) AND WEEKDAY(posting_date) IN (5, 6)')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created today?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE DATE(posting_date) = CURDATE()')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the highest billing percentage recorded this year?",
            "fields": [
                "per_billed",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MAX(per_billed) FROM [BT]tabSales Order[BT] WHERE YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items have a reorder level set?",
            "fields": [
                "re_order_level"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE re_order_level IS NOT NULL AND re_order_level > 0')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which month this year had the highest total invoice amount?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MONTH(posting_date) as month, SUM(grand_total) as total FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY MONTH(posting_date) ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many new customers were added this quarter?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE QUARTER(creation) = QUARTER(CURDATE()) AND YEAR(creation) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the total value of orders pending delivery this month?",
            "fields": [
                "grand_total",
                "per_delivered",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Order[BT] WHERE per_delivered < 100 AND MONTH(transaction_date) = MONTH(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created without a customer name?",
            "fields": [
                "customer"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE customer IS NULL OR customer = \"\"')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "What is the minimum standard rate among all active items?",
            "fields": [
                "standard_rate",
                "disabled"
            ]
        },
        "output": "frappe.db.sql('SELECT MIN(standard_rate) FROM [BT]tabItem[BT] WHERE disabled = 0')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many orders were partially billed in the last 15 days?",
            "fields": [
                "transaction_date",
                "per_billed"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE per_billed > 0 AND per_billed < 100 AND transaction_date >= CURDATE() - INTERVAL 15 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which customer has the lowest total invoice amount this year?",
            "fields": [
                "customer",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, SUM(grand_total) as total FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were marked as return in the last 10 days?",
            "fields": [
                "is_return",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE is_return = 1 AND posting_date >= CURDATE() - INTERVAL 10 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the total value of fully billed orders this year?",
            "fields": [
                "per_billed",
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Order[BT] WHERE per_billed = 100 AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items have no valuation rate defined?",
            "fields": [
                "valuation_rate"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE valuation_rate IS NULL OR valuation_rate = 0')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the average number of invoices created per week this quarter?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(COUNT(*) / 12.0, 2) FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers belong to the 'Retail' customer group?",
            "fields": [
                "customer_group"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE customer_group = \"Retail\"')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which day in the last month had the fewest orders?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT transaction_date, COUNT(*) as total FROM [BT]tabSales Order[BT] WHERE MONTH(transaction_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(transaction_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY transaction_date ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which customer has the most invoice returns this year?",
            "fields": [
                "customer",
                "is_return",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, COUNT(*) as returns FROM [BT]tabSales Invoice[BT] WHERE is_return = 1 AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY returns DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "What is the total number of items with a warranty period over 12 months?",
            "fields": [
                "warranty_period"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE warranty_period > 12')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many sales orders were placed on Sundays this month?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE WEEKDAY(transaction_date) = 6 AND MONTH(transaction_date) = MONTH(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total invoice amount for customers from Qatar this quarter?",
            "fields": [
                "customer",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(si.grand_total) FROM [BT]tabSales Invoice[BT] si JOIN [BT]tabCustomer[BT] c ON si.customer = c.name WHERE c.country = \"Qatar\" AND QUARTER(si.posting_date) = QUARTER(CURDATE()) AND YEAR(si.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are inactive and not part of any item group?",
            "fields": [
                "disabled",
                "item_group"
            ]
        },
        "output": "frappe.db.sql(\"SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE disabled = 1 AND (item_group IS NULL OR item_group = '')\")"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created without any items this year?",
            "fields": [
                "name"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE name NOT IN (SELECT parent FROM [BT]tabSales Invoice Item[BT]) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which customer placed the largest single order by value this month?",
            "fields": [
                "customer",
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, grand_total FROM [BT]tabSales Order[BT] WHERE MONTH(transaction_date) = MONTH(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE()) ORDER BY grand_total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are marked as stock items but have no stock unit defined?",
            "fields": [
                "is_stock_item",
                "stock_uom"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_stock_item = 1 AND (stock_uom IS NULL OR stock_uom = \"\")')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the average grand total of invoices per customer this year?",
            "fields": [
                "grand_total",
                "customer",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(grand_total), 2) FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers have not placed any sales orders in the last 6 months?",
            "fields": [
                "name"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE name NOT IN (SELECT DISTINCT customer FROM [BT]tabSales Order[BT] WHERE transaction_date >= CURDATE() - INTERVAL 6 MONTH)')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many orders were placed with zero items in them?",
            "fields": [
                "name"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE name NOT IN (SELECT parent FROM [BT]tabSales Order Item[BT])')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which item generated the most revenue this year?",
            "fields": [
                "item_code",
                "amount",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT item_code, SUM(amount) as total FROM [BT]tabSales Invoice Item[BT] sii JOIN [BT]tabSales Invoice[BT] si ON sii.parent = si.name WHERE YEAR(si.posting_date) = YEAR(CURDATE()) GROUP BY item_code ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items were created in the last 30 days?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE creation >= CURDATE() - INTERVAL 30 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which item was ordered the most this month by quantity?",
            "fields": [
                "item_code",
                "qty",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT item_code, SUM(qty) as total_qty FROM [BT]tabSales Order Item[BT] soi JOIN [BT]tabSales Order[BT] so ON soi.parent = so.name WHERE MONTH(so.transaction_date) = MONTH(CURDATE()) AND YEAR(so.transaction_date) = YEAR(CURDATE()) GROUP BY item_code ORDER BY total_qty DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total discount amount given in all invoices this quarter?",
            "fields": [
                "discount_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(discount_amount) FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the average tax per invoice this quarter?",
            "fields": [
                "total_taxes_and_charges",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(total_taxes_and_charges), 2) FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which item had the highest quantity ordered this year?",
            "fields": [
                "item_code",
                "qty",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT item_code, SUM(qty) as total_qty FROM [BT]tabSales Order Item[BT] soi JOIN [BT]tabSales Order[BT] so ON soi.parent = so.name WHERE YEAR(so.transaction_date) = YEAR(CURDATE()) GROUP BY item_code ORDER BY total_qty DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are currently marked as variants?",
            "fields": [
                "variant_of"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE variant_of IS NOT NULL AND variant_of != \"\"')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many unique customers were invoiced last month?",
            "fields": [
                "customer",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(DISTINCT customer) FROM [BT]tabSales Invoice[BT] WHERE MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which territory has the most customers?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) as total FROM [BT]tabCustomer[BT] GROUP BY territory ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many orders were cancelled in the last 7 days?",
            "fields": [
                "status",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE status = \"Cancelled\" AND transaction_date >= CURDATE() - INTERVAL 7 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which item has the highest total amount in invoices this quarter?",
            "fields": [
                "item_code",
                "amount",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT sii.item_code, SUM(sii.amount) as total_amount FROM [BT]tabSales Invoice Item[BT] sii JOIN [BT]tabSales Invoice[BT] si ON sii.parent = si.name WHERE QUARTER(si.posting_date) = QUARTER(CURDATE()) AND YEAR(si.posting_date) = YEAR(CURDATE()) GROUP BY sii.item_code ORDER BY total_amount DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "What is the total number of stock items with valuation rate above 100?",
            "fields": [
                "is_stock_item",
                "valuation_rate"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_stock_item = 1 AND valuation_rate > 100')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which customer placed the earliest order this year?",
            "fields": [
                "customer",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, MIN(transaction_date) FROM [BT]tabSales Order[BT] WHERE YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total invoice amount for cash customers this month?",
            "fields": [
                "customer",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabSales Invoice[BT] WHERE customer IN (SELECT name FROM [BT]tabCustomer[BT] WHERE customer_type = \"Individual\") AND MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many return invoices were created this month?",
            "fields": [
                "is_return",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE is_return = 1 AND MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the average order value for the current quarter?",
            "fields": [
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(grand_total), 2) FROM [BT]tabSales Order[BT] WHERE QUARTER(transaction_date) = QUARTER(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers are from the 'Doha' territory?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE territory = \"Doha\"')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which item had the least revenue last month?",
            "fields": [
                "item_code",
                "amount",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT sii.item_code, SUM(sii.amount) AS total FROM [BT]tabSales Invoice Item[BT] sii JOIN [BT]tabSales Invoice[BT] si ON sii.parent = si.name WHERE MONTH(si.posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(si.posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY sii.item_code ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many orders were placed for items above quantity 100 this year?",
            "fields": [
                "qty",
                "transaction_date",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(DISTINCT soi.parent) FROM [BT]tabSales Order Item[BT] soi JOIN [BT]tabSales Order[BT] so ON soi.parent = so.name WHERE soi.qty > 100 AND YEAR(so.transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "What is the total number of disabled items in the system?",
            "fields": [
                "disabled"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE disabled = 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which customer received the highest total discount this quarter?",
            "fields": [
                "customer",
                "discount_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, SUM(discount_amount) AS total_discount FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY total_discount DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which customer placed the most number of orders in the last 60 days?",
            "fields": [
                "customer",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, COUNT(*) AS order_count FROM [BT]tabSales Order[BT] WHERE transaction_date >= CURDATE() - INTERVAL 60 DAY GROUP BY customer ORDER BY order_count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items have a standard rate set over 500?",
            "fields": [
                "standard_rate"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE standard_rate > 500')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices had a grand total greater than 10000 this year?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE grand_total > 10000 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices this year had zero tax?",
            "fields": [
                "total_taxes_and_charges",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE total_taxes_and_charges = 0 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which customer generated the most revenue from sales orders in the current quarter?",
            "fields": [
                "customer",
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, SUM(grand_total) AS revenue FROM [BT]tabSales Order[BT] WHERE QUARTER(transaction_date) = QUARTER(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY revenue DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many non-stock items have been created this year?",
            "fields": [
                "is_stock_item",
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_stock_item = 0 AND YEAR(creation) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the average invoice value for each territory this year?",
            "fields": [
                "customer",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT c.territory, ROUND(AVG(si.grand_total), 2) AS avg_invoice FROM [BT]tabSales Invoice[BT] si JOIN [BT]tabCustomer[BT] c ON si.customer = c.name WHERE YEAR(si.posting_date) = YEAR(CURDATE()) GROUP BY c.territory')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which customer type has the highest number of customers?",
            "fields": [
                "customer_type"
            ]
        },
        "output": "frappe.db.sql('SELECT customer_type, COUNT(*) AS total FROM [BT]tabCustomer[BT] GROUP BY customer_type ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many orders had more than 5 unique items this year?",
            "fields": [
                "parent",
                "item_code",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM (SELECT soi.parent FROM [BT]tabSales Order Item[BT] soi JOIN [BT]tabSales Order[BT] so ON soi.parent = so.name WHERE YEAR(so.transaction_date) = YEAR(CURDATE()) GROUP BY soi.parent HAVING COUNT(DISTINCT soi.item_code) > 5) t')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which item had the lowest sales revenue this quarter?",
            "fields": [
                "item_code",
                "amount",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT sii.item_code, SUM(sii.amount) AS total FROM [BT]tabSales Invoice Item[BT] sii JOIN [BT]tabSales Invoice[BT] si ON sii.parent = si.name WHERE QUARTER(si.posting_date) = QUARTER(CURDATE()) AND YEAR(si.posting_date) = YEAR(CURDATE()) GROUP BY sii.item_code ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items have valuation rate less than 50?",
            "fields": [
                "valuation_rate"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE valuation_rate < 50')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What percentage of invoices this year are return invoices?",
            "fields": [
                "is_return",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND((SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE is_return = 1 AND YEAR(posting_date) = YEAR(CURDATE())) * 100.0 / COUNT(*), 2) FROM [BT]tabSales Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many sales orders were placed in the last 10 days?",
            "fields": [
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE transaction_date >= CURDATE() - INTERVAL 10 DAY')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were paid in full this month?",
            "fields": [
                "outstanding_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE outstanding_amount = 0 AND MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "What is the maximum order amount placed last week?",
            "fields": [
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MAX(grand_total) FROM [BT]tabSales Order[BT] WHERE transaction_date >= CURDATE() - INTERVAL 7 DAY')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers were created this quarter?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE QUARTER(creation) = QUARTER(CURDATE()) AND YEAR(creation) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "Which item generated the most revenue this year?",
            "fields": [
                "item_code",
                "amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT sii.item_code, SUM(sii.amount) AS revenue FROM [BT]tabSales Invoice Item[BT] sii JOIN [BT]tabSales Invoice[BT] si ON sii.parent = si.name WHERE YEAR(si.posting_date) = YEAR(CURDATE()) GROUP BY sii.item_code ORDER BY revenue DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "How many orders were delivered partially this month?",
            "fields": [
                "per_delivered",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Order[BT] WHERE per_delivered > 0 AND per_delivered < 100 AND MONTH(transaction_date) = MONTH(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Item",
            "question": "How many items are marked as stock items?",
            "fields": [
                "is_stock_item"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabItem[BT] WHERE is_stock_item = 1')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "What is the total discount given across all invoices this quarter?",
            "fields": [
                "discount_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(discount_amount) FROM [BT]tabSales Invoice[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Sales Order",
            "question": "Which customer placed the highest value order in the past 30 days?",
            "fields": [
                "customer",
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, grand_total FROM [BT]tabSales Order[BT] WHERE transaction_date >= CURDATE() - INTERVAL 30 DAY ORDER BY grand_total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers have loyalty points greater than 1000?",
            "fields": [
                "loyalty_points"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE loyalty_points > 1000')"
    },
    {
        "input": {
            "doctype": "Sales Invoice",
            "question": "How many invoices were created for cash customers last month?",
            "fields": [
                "customer",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSales Invoice[BT] WHERE customer LIKE \"%Cash%\" AND MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice",
            "question": "How many purchase invoices were created this month?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPurchase Invoice[BT] WHERE MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Order",
            "question": "What is the total value of purchase orders for this quarter?",
            "fields": [
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(grand_total) FROM [BT]tabPurchase Order[BT] WHERE QUARTER(transaction_date) = QUARTER(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Supplier",
            "question": "How many suppliers are from the 'India' country?",
            "fields": [
                "country"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSupplier[BT] WHERE country = \"India\"')"
    },
    {
        "input": {
            "doctype": "Purchase Receipt",
            "question": "How many purchase receipts were submitted in the last 30 days?",
            "fields": [
                "docstatus",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPurchase Receipt[BT] WHERE docstatus = 1 AND posting_date >= CURDATE() - INTERVAL 30 DAY')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice",
            "question": "What is the average amount of purchase invoices paid this year?",
            "fields": [
                "outstanding_amount",
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(grand_total), 2) FROM [BT]tabPurchase Invoice[BT] WHERE outstanding_amount = 0 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Order",
            "question": "Which supplier had the highest total PO value last month?",
            "fields": [
                "supplier",
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT supplier, SUM(grand_total) AS total FROM [BT]tabPurchase Order[BT] WHERE MONTH(transaction_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(transaction_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY supplier ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Supplier",
            "question": "How many suppliers were added this year?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSupplier[BT] WHERE YEAR(creation) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Receipt",
            "question": "What is the maximum quantity received for any item this month?",
            "fields": [
                "qty",
                "posting_date",
                "item_code",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT MAX(pri.qty) FROM [BT]tabPurchase Receipt Item[BT] pri JOIN [BT]tabPurchase Receipt[BT] pr ON pri.parent = pr.name WHERE MONTH(pr.posting_date) = MONTH(CURDATE()) AND YEAR(pr.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice",
            "question": "How many purchase invoices are overdue (outstanding and past due date)?",
            "fields": [
                "due_date",
                "outstanding_amount"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPurchase Invoice[BT] WHERE outstanding_amount > 0 AND due_date < CURDATE()')"
    },
    {
        "input": {
            "doctype": "Purchase Order",
            "question": "How many purchase orders are partially received?",
            "fields": [
                "per_received"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPurchase Order[BT] WHERE per_received > 0 AND per_received < 100')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice",
            "question": "Which supplier received the most payment this year?",
            "fields": [
                "supplier",
                "grand_total",
                "outstanding_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT supplier, SUM(grand_total) AS paid_total FROM [BT]tabPurchase Invoice[BT] WHERE outstanding_amount = 0 AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY supplier ORDER BY paid_total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Purchase Order",
            "question": "How many purchase orders were fully billed this quarter?",
            "fields": [
                "per_billed",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPurchase Order[BT] WHERE per_billed = 100 AND QUARTER(transaction_date) = QUARTER(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Supplier",
            "question": "Which supplier was most active in the last 60 days based on invoice count?",
            "fields": [
                "supplier",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT supplier, COUNT(*) AS invoice_count FROM [BT]tabPurchase Invoice[BT] WHERE posting_date >= CURDATE() - INTERVAL 60 DAY GROUP BY supplier ORDER BY invoice_count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Purchase Receipt",
            "question": "What is the total quantity received for all items this month?",
            "fields": [
                "qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(pri.qty) FROM [BT]tabPurchase Receipt Item[BT] pri JOIN [BT]tabPurchase Receipt[BT] pr ON pri.parent = pr.name WHERE MONTH(pr.posting_date) = MONTH(CURDATE()) AND YEAR(pr.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice",
            "question": "How many purchase invoices have a discount applied this year?",
            "fields": [
                "discount_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPurchase Invoice[BT] WHERE discount_amount > 0 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Order",
            "question": "What is the minimum order value recorded this year?",
            "fields": [
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MIN(grand_total) FROM [BT]tabPurchase Order[BT] WHERE YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Supplier",
            "question": "How many suppliers haven't had any invoices this year?",
            "fields": [
                "name"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSupplier[BT] s WHERE NOT EXISTS (SELECT 1 FROM [BT]tabPurchase Invoice[BT] pi WHERE pi.supplier = s.name AND YEAR(pi.posting_date) = YEAR(CURDATE()))')"
    },
    {
        "input": {
            "doctype": "Purchase Receipt",
            "question": "Which item was received the most this quarter?",
            "fields": [
                "item_code",
                "qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT pri.item_code, SUM(pri.qty) AS total_qty FROM [BT]tabPurchase Receipt Item[BT] pri JOIN [BT]tabPurchase Receipt[BT] pr ON pri.parent = pr.name WHERE QUARTER(pr.posting_date) = QUARTER(CURDATE()) AND YEAR(pr.posting_date) = YEAR(CURDATE()) GROUP BY pri.item_code ORDER BY total_qty DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice",
            "question": "What is the total outstanding amount from all suppliers?",
            "fields": [
                "outstanding_amount"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(outstanding_amount) FROM [BT]tabPurchase Invoice[BT]')"
    },
    {
        "input": {
            "doctype": "Purchase Order",
            "question": "Which supplier has the most pending (not received) orders?",
            "fields": [
                "supplier",
                "per_received"
            ]
        },
        "output": "frappe.db.sql('SELECT supplier, COUNT(*) AS pending_count FROM [BT]tabPurchase Order[BT] WHERE per_received < 100 GROUP BY supplier ORDER BY pending_count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice",
            "question": "How many purchase invoices were unpaid at the end of last month?",
            "fields": [
                "posting_date",
                "outstanding_amount"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPurchase Invoice[BT] WHERE outstanding_amount > 0 AND posting_date <= LAST_DAY(CURDATE() - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Purchase Order",
            "question": "What is the total quantity ordered this month across all items?",
            "fields": [
                "qty",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(poi.qty) FROM [BT]tabPurchase Order Item[BT] poi JOIN [BT]tabPurchase Order[BT] po ON poi.parent = po.name WHERE MONTH(po.transaction_date) = MONTH(CURDATE()) AND YEAR(po.transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Supplier",
            "question": "How many new suppliers were added in the last quarter?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabSupplier[BT] WHERE QUARTER(creation) = QUARTER(CURDATE() - INTERVAL 1 QUARTER) AND YEAR(creation) = YEAR(CURDATE() - INTERVAL 1 QUARTER)')"
    },
    {
        "input": {
            "doctype": "Purchase Receipt",
            "question": "What is the average quantity received per receipt this year?",
            "fields": [
                "qty",
                "posting_date",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(SUM(pri.qty)/COUNT(DISTINCT pr.name), 2) FROM [BT]tabPurchase Receipt Item[BT] pri JOIN [BT]tabPurchase Receipt[BT] pr ON pri.parent = pr.name WHERE YEAR(pr.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice",
            "question": "What is the highest single invoice amount this year?",
            "fields": [
                "grand_total",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT MAX(grand_total) FROM [BT]tabPurchase Invoice[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Order",
            "question": "Which item was ordered the least in the last 90 days?",
            "fields": [
                "item_code",
                "qty",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT poi.item_code, SUM(poi.qty) AS total_qty FROM [BT]tabPurchase Order Item[BT] poi JOIN [BT]tabPurchase Order[BT] po ON poi.parent = po.name WHERE po.transaction_date >= CURDATE() - INTERVAL 90 DAY GROUP BY poi.item_code ORDER BY total_qty ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Supplier",
            "question": "Which country has the most suppliers in the system?",
            "fields": [
                "country"
            ]
        },
        "output": "frappe.db.sql('SELECT country, COUNT(*) AS count FROM [BT]tabSupplier[BT] GROUP BY country ORDER BY count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Purchase Receipt",
            "question": "How many receipts were created for item code 'ITEM-001' this year?",
            "fields": [
                "item_code",
                "posting_date",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPurchase Receipt Item[BT] pri JOIN [BT]tabPurchase Receipt[BT] pr ON pri.parent = pr.name WHERE pri.item_code = \"ITEM-001\" AND YEAR(pr.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Invoice",
            "question": "How many invoices had discounts more than 500 this quarter?",
            "fields": [
                "discount_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPurchase Invoice[BT] WHERE discount_amount > 500 AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Purchase Order",
            "question": "Which supplier had the lowest average PO value last month?",
            "fields": [
                "supplier",
                "grand_total",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT supplier, ROUND(AVG(grand_total), 2) AS avg_value FROM [BT]tabPurchase Order[BT] WHERE MONTH(transaction_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(transaction_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY supplier ORDER BY avg_value ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Stock Entry",
            "question": "How many material transfers occurred this year?",
            "fields": [
                "stock_entry_type",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabStock Entry[BT] WHERE stock_entry_type = \"Material Transfer\" AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "Which item was delivered the most last month?",
            "fields": [
                "item_code",
                "qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT dni.item_code, SUM(dni.qty) AS total_qty FROM [BT]tabDelivery Note Item[BT] dni JOIN [BT]tabDelivery Note[BT] dn ON dni.parent = dn.name WHERE MONTH(dn.posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(dn.posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY dni.item_code ORDER BY total_qty DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Warehouse",
            "question": "How many warehouses are currently marked as group warehouses?",
            "fields": [
                "is_group"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabWarehouse[BT] WHERE is_group = 1')"
    },
    {
        "input": {
            "doctype": "Stock Ledger Entry",
            "question": "What is the total quantity of inward stock for item 'ITEM-001' this quarter?",
            "fields": [
                "item_code",
                "actual_qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(actual_qty) FROM [BT]tabStock Ledger Entry[BT] WHERE item_code = \"ITEM-001\" AND actual_qty > 0 AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Stock Entry",
            "question": "Which warehouse received the most items via material receipt this year?",
            "fields": [
                "stock_entry_type",
                "to_warehouse",
                "qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT sei.t_warehouse, SUM(sei.qty) AS total_qty FROM [BT]tabStock Entry Detail[BT] sei JOIN [BT]tabStock Entry[BT] se ON sei.parent = se.name WHERE se.stock_entry_type = \"Material Receipt\" AND YEAR(se.posting_date) = YEAR(CURDATE()) GROUP BY sei.t_warehouse ORDER BY total_qty DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "What is the total number of delivery notes issued this month?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabDelivery Note[BT] WHERE MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Warehouse",
            "question": "How many warehouses were created in the last 6 months?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabWarehouse[BT] WHERE creation >= CURDATE() - INTERVAL 6 MONTH')"
    },
    {
        "input": {
            "doctype": "Stock Ledger Entry",
            "question": "Which item had the highest stock consumption last quarter?",
            "fields": [
                "item_code",
                "actual_qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT item_code, ABS(SUM(actual_qty)) AS total_out FROM [BT]tabStock Ledger Entry[BT] WHERE actual_qty < 0 AND QUARTER(posting_date) = QUARTER(CURDATE() - INTERVAL 1 QUARTER) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 QUARTER) GROUP BY item_code ORDER BY total_out DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Stock Entry",
            "question": "How many stock entries had more than 5 items in them?",
            "fields": [
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM (SELECT parent, COUNT(*) AS item_count FROM [BT]tabStock Entry Detail[BT] GROUP BY parent HAVING item_count > 5) AS sub')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "Which customer received the highest quantity of goods this year?",
            "fields": [
                "customer",
                "qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT dn.customer, SUM(dni.qty) AS total_qty FROM [BT]tabDelivery Note[BT] dn JOIN [BT]tabDelivery Note Item[BT] dni ON dn.name = dni.parent WHERE YEAR(dn.posting_date) = YEAR(CURDATE()) GROUP BY dn.customer ORDER BY total_qty DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Stock Ledger Entry",
            "question": "What is the total stock value of all inward entries this year?",
            "fields": [
                "incoming_rate",
                "actual_qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(SUM(incoming_rate * actual_qty), 2) FROM [BT]tabStock Ledger Entry[BT] WHERE actual_qty > 0 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "How many delivery notes were issued to customers in Doha this quarter?",
            "fields": [
                "customer_address",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabDelivery Note[BT] WHERE customer_address LIKE \"%Doha%\" AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Stock Entry",
            "question": "Which item had the highest inward quantity in material receipts last month?",
            "fields": [
                "item_code",
                "qty",
                "stock_entry_type",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT sed.item_code, SUM(sed.qty) AS total_qty FROM [BT]tabStock Entry Detail[BT] sed JOIN [BT]tabStock Entry[BT] se ON sed.parent = se.name WHERE se.stock_entry_type = \"Material Receipt\" AND MONTH(se.posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(se.posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY sed.item_code ORDER BY total_qty DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Warehouse",
            "question": "How many warehouses have been inactive (no stock movement) for the past 90 days?",
            "fields": [
                "warehouse",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabWarehouse[BT] WHERE name NOT IN (SELECT DISTINCT warehouse FROM [BT]tabStock Ledger Entry[BT] WHERE posting_date >= CURDATE() - INTERVAL 90 DAY)')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "What is the total quantity of deliveries made for item 'ITEM-002' this year?",
            "fields": [
                "item_code",
                "qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(dni.qty) FROM [BT]tabDelivery Note Item[BT] dni JOIN [BT]tabDelivery Note[BT] dn ON dni.parent = dn.name WHERE dni.item_code = \"ITEM-002\" AND YEAR(dn.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Stock Entry",
            "question": "Which purpose had the most stock entries this month?",
            "fields": [
                "stock_entry_type",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT stock_entry_type, COUNT(*) AS total FROM [BT]tabStock Entry[BT] WHERE MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE()) GROUP BY stock_entry_type ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Stock Ledger Entry",
            "question": "How many stock ledger entries were recorded for warehouse 'Main Warehouse' last quarter?",
            "fields": [
                "warehouse",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabStock Ledger Entry[BT] WHERE warehouse = \"Main Warehouse\" AND QUARTER(posting_date) = QUARTER(CURDATE() - INTERVAL 1 QUARTER) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 QUARTER)')"
    },
    {
        "input": {
            "doctype": "Stock Entry",
            "question": "How many items were moved in material issue entries this year?",
            "fields": [
                "stock_entry_type",
                "qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(sed.qty) FROM [BT]tabStock Entry Detail[BT] sed JOIN [BT]tabStock Entry[BT] se ON sed.parent = se.name WHERE se.stock_entry_type = \"Material Issue\" AND YEAR(se.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Delivery Note",
            "question": "How many unique items were delivered last 30 days?",
            "fields": [
                "item_code",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(DISTINCT dni.item_code) FROM [BT]tabDelivery Note Item[BT] dni JOIN [BT]tabDelivery Note[BT] dn ON dni.parent = dn.name WHERE dn.posting_date >= CURDATE() - INTERVAL 30 DAY')"
    },
    {
        "input": {
            "doctype": "Warehouse",
            "question": "Which warehouse had the highest total outgoing stock last year?",
            "fields": [
                "warehouse",
                "actual_qty",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT warehouse, ABS(SUM(actual_qty)) AS total_out FROM [BT]tabStock Ledger Entry[BT] WHERE actual_qty < 0 AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 YEAR) GROUP BY warehouse ORDER BY total_out DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "How many payment entries were submitted last month?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPayment Entry[BT] WHERE MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "What is the total credit amount recorded this quarter?",
            "fields": [
                "credit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(SUM(credit), 2) FROM [BT]tabJournal Entry Account[BT] jea JOIN [BT]tabJournal Entry[BT] je ON jea.parent = je.name WHERE QUARTER(je.posting_date) = QUARTER(CURDATE()) AND YEAR(je.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "Which account had the highest debit total last year?",
            "fields": [
                "account",
                "debit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT account, SUM(debit) AS total_debit FROM [BT]tabGL Entry[BT] WHERE YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 YEAR) GROUP BY account ORDER BY total_debit DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "How many payment entries are still unpaid?",
            "fields": [
                "paid_amount",
                "received_amount"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPayment Entry[BT] WHERE paid_amount != received_amount')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "What is the average debit per journal entry this year?",
            "fields": [
                "debit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(debit), 2) FROM [BT]tabJournal Entry Account[BT] jea JOIN [BT]tabJournal Entry[BT] je ON jea.parent = je.name WHERE YEAR(je.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "Which party type has received the most payments this year?",
            "fields": [
                "party_type",
                "paid_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT party_type, SUM(paid_amount) AS total_paid FROM [BT]tabPayment Entry[BT] WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY party_type ORDER BY total_paid DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "How many GL entries were recorded for the account 'Cash' this month?",
            "fields": [
                "account",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabGL Entry[BT] WHERE account = \"Cash\" AND MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "Which journal entry has the highest net credit?",
            "fields": [
                "parent",
                "credit"
            ]
        },
        "output": "frappe.db.sql('SELECT parent, SUM(credit) AS total_credit FROM [BT]tabJournal Entry Account[BT] GROUP BY parent ORDER BY total_credit DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Tax Withheld Vouchers",
            "question": "How much tax has been withheld in the current quarter?",
            "fields": [
                "withholding_tax_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(withholding_tax_amount) FROM [BT]tabTax Withheld Vouchers[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "How many payment entries exceeded 50,000 in amount this year?",
            "fields": [
                "paid_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPayment Entry[BT] WHERE paid_amount > 50000 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "How many journal entries were posted this quarter?",
            "fields": [
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabJournal Entry[BT] WHERE QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "Which account had the highest number of GL entries last month?",
            "fields": [
                "account",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT account, COUNT(*) AS count FROM [BT]tabGL Entry[BT] WHERE MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY account ORDER BY count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "What is the total paid amount for 'Customer' party type this year?",
            "fields": [
                "party_type",
                "paid_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(paid_amount) FROM [BT]tabPayment Entry[BT] WHERE party_type = \"Customer\" AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "Which journal entry has the largest single debit line this year?",
            "fields": [
                "parent",
                "debit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT parent, MAX(debit) FROM [BT]tabJournal Entry Account[BT] jea JOIN [BT]tabJournal Entry[BT] je ON jea.parent = je.name WHERE YEAR(je.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "What is the total credit value for account 'Sales' this month?",
            "fields": [
                "account",
                "credit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(credit) FROM [BT]tabGL Entry[BT] WHERE account = \"Sales\" AND MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "How many distinct suppliers received payments this quarter?",
            "fields": [
                "party_type",
                "party",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(DISTINCT party) FROM [BT]tabPayment Entry[BT] WHERE party_type = \"Supplier\" AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "What’s the total debit-to-credit ratio this year?",
            "fields": [
                "debit",
                "credit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(SUM(debit)/NULLIF(SUM(credit), 0), 2) FROM [BT]tabJournal Entry Account[BT] jea JOIN [BT]tabJournal Entry[BT] je ON jea.parent = je.name WHERE YEAR(je.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "How many GL entries have a zero amount this year?",
            "fields": [
                "debit",
                "credit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabGL Entry[BT] WHERE debit = 0 AND credit = 0 AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "Which mode of payment was used most frequently last month?",
            "fields": [
                "mode_of_payment",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT mode_of_payment, COUNT(*) AS total FROM [BT]tabPayment Entry[BT] WHERE MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY mode_of_payment ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "What is the net movement (debit - credit) for account 'Bank' this year?",
            "fields": [
                "account",
                "debit",
                "credit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(debit) - SUM(credit) FROM [BT]tabGL Entry[BT] WHERE account = \"Bank\" AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "Which account has the highest number of journal debits this year?",
            "fields": [
                "account",
                "debit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT jea.account, COUNT(*) AS debit_count FROM [BT]tabJournal Entry Account[BT] jea JOIN [BT]tabJournal Entry[BT] je ON jea.parent = je.name WHERE jea.debit > 0 AND YEAR(je.posting_date) = YEAR(CURDATE()) GROUP BY jea.account ORDER BY debit_count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "How many payment entries were made for the mode of payment 'Cash' this quarter?",
            "fields": [
                "mode_of_payment",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPayment Entry[BT] WHERE mode_of_payment = \"Cash\" AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "What is the total net movement for the account 'Accounts Receivable' last quarter?",
            "fields": [
                "account",
                "debit",
                "credit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(debit - credit) AS net_movement FROM [BT]tabGL Entry[BT] WHERE account = \"Accounts Receivable\" AND QUARTER(posting_date) = QUARTER(CURDATE() - INTERVAL 1 QUARTER) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 QUARTER)')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "How many journal entries had more than 3 line items this year?",
            "fields": [
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM (SELECT parent FROM [BT]tabJournal Entry Account[BT] GROUP BY parent HAVING COUNT(*) > 3) AS subquery')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "Which company had the most GL entries last month?",
            "fields": [
                "company",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT company, COUNT(*) AS entry_count FROM [BT]tabGL Entry[BT] WHERE MONTH(posting_date) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(posting_date) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY company ORDER BY entry_count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "What is the average paid amount per entry this year?",
            "fields": [
                "paid_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(paid_amount), 2) FROM [BT]tabPayment Entry[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "Which journal entry has the highest number of accounts affected this quarter?",
            "fields": [
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT parent, COUNT(*) AS accounts FROM [BT]tabJournal Entry Account[BT] jea JOIN [BT]tabJournal Entry[BT] je ON jea.parent = je.name WHERE QUARTER(je.posting_date) = QUARTER(CURDATE()) AND YEAR(je.posting_date) = YEAR(CURDATE()) GROUP BY parent ORDER BY accounts DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "How many unique accounts were used in GL entries this year?",
            "fields": [
                "account",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(DISTINCT account) FROM [BT]tabGL Entry[BT] WHERE YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "Which supplier received the largest single payment this year?",
            "fields": [
                "party_type",
                "party",
                "paid_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT party, MAX(paid_amount) FROM [BT]tabPayment Entry[BT] WHERE party_type = \"Supplier\" AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "GL Entry",
            "question": "What is the total number of GL entries where debit and credit are both greater than zero this quarter?",
            "fields": [
                "debit",
                "credit",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabGL Entry[BT] WHERE debit > 0 AND credit > 0 AND QUARTER(posting_date) = QUARTER(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers were added this quarter?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE QUARTER(creation) = QUARTER(CURDATE()) AND YEAR(creation) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers belong to the Retail customer group?",
            "fields": [
                "customer_group"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE customer_group = \"Retail\"')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "What is the total number of disabled customers?",
            "fields": [
                "disabled"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE disabled = 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which territory has the most customers?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) AS total FROM [BT]tabCustomer[BT] GROUP BY territory ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "How many employees joined this year?",
            "fields": [
                "date_of_joining"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabEmployee[BT] WHERE YEAR(date_of_joining) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "What is the average number of employees per department?",
            "fields": [
                "department"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(emp_count) FROM (SELECT COUNT(*) AS emp_count FROM [BT]tabEmployee[BT] WHERE department IS NOT NULL GROUP BY department) AS counts')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Which department has the highest number of employees?",
            "fields": [
                "department"
            ]
        },
        "output": "frappe.db.sql('SELECT department, COUNT(*) AS total FROM [BT]tabEmployee[BT] GROUP BY department ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "How many employees are currently active?",
            "fields": [
                "status"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabEmployee[BT] WHERE status = \"Active\"')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "How many employees have retired already?",
            "fields": [
                "status"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabEmployee[BT] WHERE status = \"Left\"')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Which branch has the most employees currently working?",
            "fields": [
                "branch",
                "status"
            ]
        },
        "output": "frappe.db.sql('SELECT branch, COUNT(*) AS total FROM [BT]tabEmployee[BT] WHERE status = \"Active\" GROUP BY branch ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers were added last month?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE MONTH(creation) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(creation) = YEAR(CURDATE() - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which customer group has the least number of customers?",
            "fields": [
                "customer_group"
            ]
        },
        "output": "frappe.db.sql('SELECT customer_group, COUNT(*) AS total FROM [BT]tabCustomer[BT] GROUP BY customer_group ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers are linked to the 'Qatar' territory?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE territory = \"Qatar\"')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which customer group has the most disabled customers?",
            "fields": [
                "disabled",
                "customer_group"
            ]
        },
        "output": "frappe.db.sql('SELECT customer_group, COUNT(*) AS total FROM [BT]tabCustomer[BT] WHERE disabled = 1 GROUP BY customer_group ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "How many employees joined last quarter?",
            "fields": [
                "date_of_joining"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabEmployee[BT] WHERE QUARTER(date_of_joining) = QUARTER(CURDATE() - INTERVAL 1 QUARTER) AND YEAR(date_of_joining) = YEAR(CURDATE() - INTERVAL 1 QUARTER)')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "What is the average number of employees per branch?",
            "fields": [
                "branch"
            ]
        },
        "output": "frappe.db.sql('SELECT AVG(emp_count) FROM (SELECT COUNT(*) AS emp_count FROM [BT]tabEmployee[BT] WHERE branch IS NOT NULL GROUP BY branch) AS counts')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Which department has the least number of active employees?",
            "fields": [
                "department",
                "status"
            ]
        },
        "output": "frappe.db.sql('SELECT department, COUNT(*) AS total FROM [BT]tabEmployee[BT] WHERE status = \"Active\" GROUP BY department ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "How many employees joined in the last 90 days?",
            "fields": [
                "date_of_joining"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabEmployee[BT] WHERE date_of_joining >= CURDATE() - INTERVAL 90 DAY')"
    },
    {
        "input": {
            "doctype": "Department",
            "question": "How many unique departments are currently in the system?",
            "fields": [
                "name"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(DISTINCT name) FROM [BT]tabDepartment[BT]')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Which branch had the most new joiners in the current year?",
            "fields": [
                "branch",
                "date_of_joining"
            ]
        },
        "output": "frappe.db.sql('SELECT branch, COUNT(*) AS total FROM [BT]tabEmployee[BT] WHERE YEAR(date_of_joining) = YEAR(CURDATE()) GROUP BY branch ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers have been added in the last 30 days?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE creation >= CURDATE() - INTERVAL 30 DAY')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which customers have not been updated in the last 6 months?",
            "fields": [
                "modified"
            ]
        },
        "output": "frappe.db.sql('SELECT name FROM [BT]tabCustomer[BT] WHERE modified < CURDATE() - INTERVAL 6 MONTH')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers were created before 2023?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE YEAR(creation) < 2023')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers were disabled in the last 60 days?",
            "fields": [
                "disabled",
                "modified"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE disabled = 1 AND modified >= CURDATE() - INTERVAL 60 DAY')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "How many employees joined in the last 60 days?",
            "fields": [
                "date_of_joining"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabEmployee[BT] WHERE date_of_joining >= CURDATE() - INTERVAL 60 DAY')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Which employees joined before 2020?",
            "fields": [
                "date_of_joining"
            ]
        },
        "output": "frappe.db.sql('SELECT name FROM [BT]tabEmployee[BT] WHERE YEAR(date_of_joining) < 2020')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "How many employees have been marked 'Left' in the last quarter?",
            "fields": [
                "status",
                "modified"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabEmployee[BT] WHERE status = \"Left\" AND QUARTER(modified) = QUARTER(CURDATE()) AND YEAR(modified) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Department",
            "question": "Which departments have not had any new employees this year?",
            "fields": [
                "name"
            ]
        },
        "output": "frappe.db.sql('SELECT d.name FROM [BT]tabDepartment[BT] d WHERE NOT EXISTS (SELECT 1 FROM [BT]tabEmployee[BT] e WHERE e.department = d.name AND YEAR(e.date_of_joining) = YEAR(CURDATE()))')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "How many employees joined exactly one year ago?",
            "fields": [
                "date_of_joining"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabEmployee[BT] WHERE date_of_joining BETWEEN CURDATE() - INTERVAL 1 YEAR AND CURDATE() - INTERVAL 1 YEAR + INTERVAL 1 DAY')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many customers were created in the same month last year?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE MONTH(creation) = MONTH(CURDATE()) AND YEAR(creation) = YEAR(CURDATE()) - 1')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "How many payment entries are overdue as of today?",
            "fields": [
                "due_date",
                "docstatus"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabPayment Entry[BT] WHERE due_date < CURDATE() AND docstatus = 1')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Which department has the highest number of active employees?",
            "fields": [
                "status",
                "department"
            ]
        },
        "output": "frappe.db.sql('SELECT department, COUNT(*) as total FROM [BT]tabEmployee[BT] WHERE status = \"Active\" GROUP BY department ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "How many new customers joined last month?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabCustomer[BT] WHERE MONTH(creation) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(creation) = YEAR(CURDATE() - INTERVAL 1 MONTH)')"
    },
    {
        "input": {
            "doctype": "Stock Entry",
            "question": "What is the average number of items moved per stock entry this quarter?",
            "fields": [
                "qty",
                "parent",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(total_qty), 2) FROM (SELECT se.name, SUM(sei.qty) AS total_qty FROM [BT]tabStock Entry[BT] se JOIN [BT]tabStock Entry Detail[BT] sei ON sei.parent = se.name WHERE QUARTER(se.posting_date) = QUARTER(CURDATE()) AND YEAR(se.posting_date) = YEAR(CURDATE()) GROUP BY se.name) AS sub')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "How many journal entries were created for the account 'Accounts Receivable' this year?",
            "fields": [
                "account",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabJournal Entry Account[BT] jea JOIN [BT]tabJournal Entry[BT] je ON jea.parent = je.name WHERE jea.account = \"Accounts Receivable\" AND YEAR(je.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Project",
            "question": "Which project has the most overdue tasks?",
            "fields": [
                "project",
                "status",
                "expected_end_date"
            ]
        },
        "output": "frappe.db.sql('SELECT project, COUNT(*) as overdue_count FROM [BT]tabTask[BT] WHERE expected_end_date < CURDATE() AND status != \"Completed\" GROUP BY project ORDER BY overdue_count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "What is the total amount collected this month?",
            "fields": [
                "paid_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(paid_amount) FROM [BT]tabPayment Entry[BT] WHERE MONTH(posting_date) = MONTH(CURDATE()) AND YEAR(posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "What is the average length of service for active employees?",
            "fields": [
                "date_of_joining",
                "status"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(DATEDIFF(CURDATE(), date_of_joining)/365), 2) FROM [BT]tabEmployee[BT] WHERE status = \"Active\"')"
    },
    {
        "input": {
            "doctype": "Project",
            "question": "How many projects were completed in the last 90 days?",
            "fields": [
                "status",
                "expected_end_date"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM [BT]tabProject[BT] WHERE status = \"Completed\" AND expected_end_date >= CURDATE() - INTERVAL 90 DAY')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which customer was added most recently?",
            "fields": [
                "customer_name",
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT customer_name FROM [BT]tabCustomer[BT] ORDER BY creation DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which 3 customers had the highest payments this year?",
            "fields": [
                "paid_amount",
                "customer",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, SUM(paid_amount) AS total FROM `tabPayment Entry` WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY total DESC LIMIT 3')"
    },
    {
        "input": {
            "doctype": "Project",
            "question": "Which project has the highest number of tasks?",
            "fields": [
                "project"
            ]
        },
        "output": "frappe.db.sql('SELECT project, COUNT(*) AS task_count FROM `tabTask` GROUP BY project ORDER BY task_count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Which department has the lowest number of active employees?",
            "fields": [
                "status",
                "department"
            ]
        },
        "output": "frappe.db.sql('SELECT department, COUNT(*) AS total FROM `tabEmployee` WHERE status = \"Active\" GROUP BY department ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Stock Entry",
            "question": "What is the total quantity moved in stock entries this month?",
            "fields": [
                "qty",
                "posting_date",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(sei.qty) FROM `tabStock Entry Detail` sei JOIN `tabStock Entry` se ON sei.parent = se.name WHERE MONTH(se.posting_date) = MONTH(CURDATE()) AND YEAR(se.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Account",
            "question": "How many journal entries were made per account this quarter?",
            "fields": [
                "account",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT jea.account, COUNT(*) AS entry_count FROM `tabJournal Entry Account` jea JOIN `tabJournal Entry` je ON jea.parent = je.name WHERE QUARTER(je.posting_date) = QUARTER(CURDATE()) AND YEAR(je.posting_date) = YEAR(CURDATE()) GROUP BY jea.account')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "Compare total payments between this month and last month.",
            "fields": [
                "paid_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT IF(MONTH(posting_date) = MONTH(CURDATE()), \"This Month\", \"Last Month\") AS period, SUM(paid_amount) AS total FROM `tabPayment Entry` WHERE (posting_date BETWEEN DATE_FORMAT(CURDATE() - INTERVAL 1 MONTH, \"%Y-%m-01\") AND LAST_DAY(CURDATE() - INTERVAL 1 MONTH)) OR (posting_date BETWEEN DATE_FORMAT(CURDATE(), \"%Y-%m-01\") AND CURDATE()) GROUP BY period')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Who is the longest-serving active employee?",
            "fields": [
                "employee_name",
                "date_of_joining",
                "status"
            ]
        },
        "output": "frappe.db.sql('SELECT employee_name FROM `tabEmployee` WHERE status = \"Active\" ORDER BY date_of_joining ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Project",
            "question": "Which 2 projects have the most overdue tasks?",
            "fields": [
                "project",
                "expected_end_date",
                "status"
            ]
        },
        "output": "frappe.db.sql('SELECT project, COUNT(*) AS overdue_count FROM `tabTask` WHERE expected_end_date < CURDATE() AND status != \"Completed\" GROUP BY project ORDER BY overdue_count DESC LIMIT 2')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "What is the total number of customers per territory?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) AS total FROM `tabCustomer` GROUP BY territory')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "What is the highest amount posted in a single journal entry this year?",
            "fields": [
                "debit",
                "credit",
                "posting_date",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT parent, MAX(debit + credit) AS max_amount FROM `tabJournal Entry Account` jea JOIN `tabJournal Entry` je ON jea.parent = je.name WHERE YEAR(je.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "Which 3 customers had the highest payments this year?",
            "fields": [
                "paid_amount",
                "customer",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT customer, SUM(paid_amount) AS total FROM `tabPayment Entry` WHERE YEAR(posting_date) = YEAR(CURDATE()) GROUP BY customer ORDER BY total DESC LIMIT 3')"
    },
    {
        "input": {
            "doctype": "Project",
            "question": "Which project has the highest number of tasks?",
            "fields": [
                "project"
            ]
        },
        "output": "frappe.db.sql('SELECT project, COUNT(*) AS task_count FROM `tabTask` GROUP BY project ORDER BY task_count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Which department has the lowest number of active employees?",
            "fields": [
                "status",
                "department"
            ]
        },
        "output": "frappe.db.sql('SELECT department, COUNT(*) AS total FROM `tabEmployee` WHERE status = \"Active\" GROUP BY department ORDER BY total ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Stock Entry",
            "question": "What is the total quantity moved in stock entries this month?",
            "fields": [
                "qty",
                "posting_date",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(sei.qty) FROM `tabStock Entry Detail` sei JOIN `tabStock Entry` se ON sei.parent = se.name WHERE MONTH(se.posting_date) = MONTH(CURDATE()) AND YEAR(se.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Account",
            "question": "How many journal entries were made per account this quarter?",
            "fields": [
                "account",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT jea.account, COUNT(*) AS entry_count FROM `tabJournal Entry Account` jea JOIN `tabJournal Entry` je ON jea.parent = je.name WHERE QUARTER(je.posting_date) = QUARTER(CURDATE()) AND YEAR(je.posting_date) = YEAR(CURDATE()) GROUP BY jea.account')"
    },
    {
        "input": {
            "doctype": "Payment Entry",
            "question": "Compare total payments between this month and last month.",
            "fields": [
                "paid_amount",
                "posting_date"
            ]
        },
        "output": "frappe.db.sql('SELECT IF(MONTH(posting_date) = MONTH(CURDATE()), \"This Month\", \"Last Month\") AS period, SUM(paid_amount) AS total FROM `tabPayment Entry` WHERE (posting_date BETWEEN DATE_FORMAT(CURDATE() - INTERVAL 1 MONTH, \"%Y-%m-01\") AND LAST_DAY(CURDATE() - INTERVAL 1 MONTH)) OR (posting_date BETWEEN DATE_FORMAT(CURDATE(), \"%Y-%m-01\") AND CURDATE()) GROUP BY period')"
    },
    {
        "input": {
            "doctype": "Employee",
            "question": "Who is the longest-serving active employee?",
            "fields": [
                "employee_name",
                "date_of_joining",
                "status"
            ]
        },
        "output": "frappe.db.sql('SELECT employee_name FROM `tabEmployee` WHERE status = \"Active\" ORDER BY date_of_joining ASC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Project",
            "question": "Which 2 projects have the most overdue tasks?",
            "fields": [
                "project",
                "expected_end_date",
                "status"
            ]
        },
        "output": "frappe.db.sql('SELECT project, COUNT(*) AS overdue_count FROM `tabTask` WHERE expected_end_date < CURDATE() AND status != \"Completed\" GROUP BY project ORDER BY overdue_count DESC LIMIT 2')"
    },
    {
        "input": {
            "doctype": "Customer",
            "question": "What is the total number of customers per territory?",
            "fields": [
                "territory"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) AS total FROM `tabCustomer` GROUP BY territory')"
    },
    {
        "input": {
            "doctype": "Journal Entry",
            "question": "What is the highest amount posted in a single journal entry this year?",
            "fields": [
                "debit",
                "credit",
                "posting_date",
                "parent"
            ]
        },
        "output": "frappe.db.sql('SELECT parent, MAX(debit + credit) AS max_amount FROM `tabJournal Entry Account` jea JOIN `tabJournal Entry` je ON jea.parent = je.name WHERE YEAR(je.posting_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Lead",
            "question": "How many leads were qualified this month?",
            "fields": [
                "qualified_on"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabLead` WHERE MONTH(qualified_on) = MONTH(CURDATE()) AND YEAR(qualified_on) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Opportunity",
            "question": "What is the total opportunity amount created last quarter?",
            "fields": [
                "opportunity_amount",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT SUM(opportunity_amount) FROM `tabOpportunity` WHERE QUARTER(transaction_date) = QUARTER(CURDATE() - INTERVAL 1 QUARTER) AND YEAR(transaction_date) = YEAR(CURDATE() - INTERVAL 1 QUARTER)')"
    },
    {
        "input": {
            "doctype": "Opportunity",
            "question": "Which opportunity has the highest probability this year?",
            "fields": [
                "probability",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT name, probability FROM `tabOpportunity` WHERE YEAR(transaction_date) = YEAR(CURDATE()) ORDER BY probability DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Lead",
            "question": "How many leads came from the website this week?",
            "fields": [
                "source",
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabLead` WHERE source = \"Website\" AND YEARWEEK(creation, 1) = YEARWEEK(CURDATE(), 1)')"
    },
    {
        "input": {
            "doctype": "Contact",
            "question": "How many primary contacts exist in the system?",
            "fields": [
                "is_primary_contact"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabContact` WHERE is_primary_contact = 1')"
    },
    {
        "input": {
            "doctype": "BOM",
            "question": "What is the total number of active BOMs in the system?",
            "fields": [
                "is_active"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabBOM` WHERE is_active = 1')"
    },
    {
        "input": {
            "doctype": "BOM",
            "question": "What is the average quantity used in BOMs created this year?",
            "fields": [
                "quantity",
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(quantity), 2) FROM `tabBOM` WHERE YEAR(creation) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Operation",
            "question": "Which operation has the longest total operation time?",
            "fields": [
                "total_operation_time"
            ]
        },
        "output": "frappe.db.sql('SELECT name, total_operation_time FROM `tabOperation` ORDER BY total_operation_time DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Routing",
            "question": "How many routings are currently disabled?",
            "fields": [
                "disabled"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabRouting` WHERE disabled = 1')"
    },
    {
        "input": {
            "doctype": "Lead",
            "question": "Which industry has the most number of leads?",
            "fields": [
                "industry"
            ]
        },
        "output": "frappe.db.sql('SELECT industry, COUNT(*) AS total FROM `tabLead` GROUP BY industry ORDER BY total DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Lead",
            "question": "How many new leads were added in the past 14 days?",
            "fields": [
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabLead` WHERE creation >= CURDATE() - INTERVAL 14 DAY')"
    },
    {
        "input": {
            "doctype": "Opportunity",
            "question": "What is the average opportunity amount from 'Email' source leads this year?",
            "fields": [
                "opportunity_amount",
                "source",
                "transaction_date"
            ]
        },
        "output": "frappe.db.sql('SELECT ROUND(AVG(opportunity_amount), 2) FROM `tabOpportunity` WHERE source = \"Email\" AND YEAR(transaction_date) = YEAR(CURDATE())')"
    },
    {
        "input": {
            "doctype": "Lead",
            "question": "Which territory brought in the highest number of leads last month?",
            "fields": [
                "territory",
                "creation"
            ]
        },
        "output": "frappe.db.sql('SELECT territory, COUNT(*) AS count FROM `tabLead` WHERE MONTH(creation) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(creation) = YEAR(CURDATE() - INTERVAL 1 MONTH) GROUP BY territory ORDER BY count DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Opportunity",
            "question": "How many opportunities are still in the 'Open' stage?",
            "fields": [
                "sales_stage"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabOpportunity` WHERE sales_stage = \"Open\"')"
    },
    {
        "input": {
            "doctype": "Contact",
            "question": "How many contacts are linked to companies?",
            "fields": [
                "company_name"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabContact` WHERE company_name IS NOT NULL AND company_name != \"\"')"
    },
    {
        "input": {
            "doctype": "BOM",
            "question": "Which BOM has the highest total cost?",
            "fields": [
                "item",
                "total_cost"
            ]
        },
        "output": "frappe.db.sql('SELECT item, total_cost FROM `tabBOM` ORDER BY total_cost DESC LIMIT 1')"
    },
    {
        "input": {
            "doctype": "Operation",
            "question": "What is the total number of operations assigned to the 'Assembly Workstation'?",
            "fields": [
                "workstation"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabOperation` WHERE workstation = \"Assembly Workstation\"')"
    },
    {
        "input": {
            "doctype": "Routing",
            "question": "List the top 3 routing names used in the system.",
            "fields": [
                "routing_name"
            ]
        },
        "output": "frappe.db.sql('SELECT routing_name, COUNT(*) as freq FROM `tabRouting` GROUP BY routing_name ORDER BY freq DESC LIMIT 3')"
    },
    {
        "input": {
            "doctype": "Opportunity",
            "question": "How many opportunities were created this quarter with probability over 80%?",
            "fields": [
                "transaction_date",
                "probability"
            ]
        },
        "output": "frappe.db.sql('SELECT COUNT(*) FROM `tabOpportunity` WHERE QUARTER(transaction_date) = QUARTER(CURDATE()) AND YEAR(transaction_date) = YEAR(CURDATE()) AND probability > 80')"
    },
    {
        "input": {
            "doctype": "Lead",
            "question": "Which lead owner has the most qualified leads?",
            "fields": [
                "lead_owner",
                "qualified_on"
            ]
        },
        "output": "frappe.db.sql('SELECT lead_owner, COUNT(*) AS total FROM `tabLead` WHERE qualified_on IS NOT NULL GROUP BY lead_owner ORDER BY total DESC LIMIT 1')"
    }
]